// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax/build/src/protobuf").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._google_cloud_documentai_protos || ($protobuf.roots._google_cloud_documentai_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.cloud = (function() {
    
            /**
             * Namespace cloud.
             * @memberof google
             * @namespace
             */
            var cloud = {};
    
            cloud.documentai = (function() {
    
                /**
                 * Namespace documentai.
                 * @memberof google.cloud
                 * @namespace
                 */
                var documentai = {};
    
                documentai.v1 = (function() {
    
                    /**
                     * Namespace v1.
                     * @memberof google.cloud.documentai
                     * @namespace
                     */
                    var v1 = {};
    
                    v1.Barcode = (function() {
    
                        /**
                         * Properties of a Barcode.
                         * @memberof google.cloud.documentai.v1
                         * @interface IBarcode
                         * @property {string|null} [format] Barcode format
                         * @property {string|null} [valueFormat] Barcode valueFormat
                         * @property {string|null} [rawValue] Barcode rawValue
                         */
    
                        /**
                         * Constructs a new Barcode.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a Barcode.
                         * @implements IBarcode
                         * @constructor
                         * @param {google.cloud.documentai.v1.IBarcode=} [properties] Properties to set
                         */
                        function Barcode(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Barcode format.
                         * @member {string} format
                         * @memberof google.cloud.documentai.v1.Barcode
                         * @instance
                         */
                        Barcode.prototype.format = "";
    
                        /**
                         * Barcode valueFormat.
                         * @member {string} valueFormat
                         * @memberof google.cloud.documentai.v1.Barcode
                         * @instance
                         */
                        Barcode.prototype.valueFormat = "";
    
                        /**
                         * Barcode rawValue.
                         * @member {string} rawValue
                         * @memberof google.cloud.documentai.v1.Barcode
                         * @instance
                         */
                        Barcode.prototype.rawValue = "";
    
                        /**
                         * Creates a new Barcode instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.Barcode
                         * @static
                         * @param {google.cloud.documentai.v1.IBarcode=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.Barcode} Barcode instance
                         */
                        Barcode.create = function create(properties) {
                            return new Barcode(properties);
                        };
    
                        /**
                         * Encodes the specified Barcode message. Does not implicitly {@link google.cloud.documentai.v1.Barcode.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.Barcode
                         * @static
                         * @param {google.cloud.documentai.v1.IBarcode} message Barcode message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Barcode.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.format != null && Object.hasOwnProperty.call(message, "format"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.format);
                            if (message.valueFormat != null && Object.hasOwnProperty.call(message, "valueFormat"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.valueFormat);
                            if (message.rawValue != null && Object.hasOwnProperty.call(message, "rawValue"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.rawValue);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Barcode message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Barcode.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.Barcode
                         * @static
                         * @param {google.cloud.documentai.v1.IBarcode} message Barcode message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Barcode.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Barcode message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.Barcode
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.Barcode} Barcode
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Barcode.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Barcode();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.format = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.valueFormat = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.rawValue = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Barcode message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.Barcode
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.Barcode} Barcode
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Barcode.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Barcode message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.Barcode
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Barcode.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.format != null && message.hasOwnProperty("format"))
                                if (!$util.isString(message.format))
                                    return "format: string expected";
                            if (message.valueFormat != null && message.hasOwnProperty("valueFormat"))
                                if (!$util.isString(message.valueFormat))
                                    return "valueFormat: string expected";
                            if (message.rawValue != null && message.hasOwnProperty("rawValue"))
                                if (!$util.isString(message.rawValue))
                                    return "rawValue: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Barcode message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.Barcode
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.Barcode} Barcode
                         */
                        Barcode.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.Barcode)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.Barcode();
                            if (object.format != null)
                                message.format = String(object.format);
                            if (object.valueFormat != null)
                                message.valueFormat = String(object.valueFormat);
                            if (object.rawValue != null)
                                message.rawValue = String(object.rawValue);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Barcode message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.Barcode
                         * @static
                         * @param {google.cloud.documentai.v1.Barcode} message Barcode
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Barcode.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.format = "";
                                object.valueFormat = "";
                                object.rawValue = "";
                            }
                            if (message.format != null && message.hasOwnProperty("format"))
                                object.format = message.format;
                            if (message.valueFormat != null && message.hasOwnProperty("valueFormat"))
                                object.valueFormat = message.valueFormat;
                            if (message.rawValue != null && message.hasOwnProperty("rawValue"))
                                object.rawValue = message.rawValue;
                            return object;
                        };
    
                        /**
                         * Converts this Barcode to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.Barcode
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Barcode.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Barcode
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.Barcode
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Barcode.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.Barcode";
                        };
    
                        return Barcode;
                    })();
    
                    v1.Document = (function() {
    
                        /**
                         * Properties of a Document.
                         * @memberof google.cloud.documentai.v1
                         * @interface IDocument
                         * @property {string|null} [uri] Document uri
                         * @property {Uint8Array|null} [content] Document content
                         * @property {string|null} [mimeType] Document mimeType
                         * @property {string|null} [text] Document text
                         * @property {Array.<google.cloud.documentai.v1.Document.IStyle>|null} [textStyles] Document textStyles
                         * @property {Array.<google.cloud.documentai.v1.Document.IPage>|null} [pages] Document pages
                         * @property {Array.<google.cloud.documentai.v1.Document.IEntity>|null} [entities] Document entities
                         * @property {Array.<google.cloud.documentai.v1.Document.IEntityRelation>|null} [entityRelations] Document entityRelations
                         * @property {Array.<google.cloud.documentai.v1.Document.ITextChange>|null} [textChanges] Document textChanges
                         * @property {google.cloud.documentai.v1.Document.IShardInfo|null} [shardInfo] Document shardInfo
                         * @property {google.rpc.IStatus|null} [error] Document error
                         * @property {Array.<google.cloud.documentai.v1.Document.IRevision>|null} [revisions] Document revisions
                         */
    
                        /**
                         * Constructs a new Document.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a Document.
                         * @implements IDocument
                         * @constructor
                         * @param {google.cloud.documentai.v1.IDocument=} [properties] Properties to set
                         */
                        function Document(properties) {
                            this.textStyles = [];
                            this.pages = [];
                            this.entities = [];
                            this.entityRelations = [];
                            this.textChanges = [];
                            this.revisions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Document uri.
                         * @member {string|null|undefined} uri
                         * @memberof google.cloud.documentai.v1.Document
                         * @instance
                         */
                        Document.prototype.uri = null;
    
                        /**
                         * Document content.
                         * @member {Uint8Array|null|undefined} content
                         * @memberof google.cloud.documentai.v1.Document
                         * @instance
                         */
                        Document.prototype.content = null;
    
                        /**
                         * Document mimeType.
                         * @member {string} mimeType
                         * @memberof google.cloud.documentai.v1.Document
                         * @instance
                         */
                        Document.prototype.mimeType = "";
    
                        /**
                         * Document text.
                         * @member {string} text
                         * @memberof google.cloud.documentai.v1.Document
                         * @instance
                         */
                        Document.prototype.text = "";
    
                        /**
                         * Document textStyles.
                         * @member {Array.<google.cloud.documentai.v1.Document.IStyle>} textStyles
                         * @memberof google.cloud.documentai.v1.Document
                         * @instance
                         */
                        Document.prototype.textStyles = $util.emptyArray;
    
                        /**
                         * Document pages.
                         * @member {Array.<google.cloud.documentai.v1.Document.IPage>} pages
                         * @memberof google.cloud.documentai.v1.Document
                         * @instance
                         */
                        Document.prototype.pages = $util.emptyArray;
    
                        /**
                         * Document entities.
                         * @member {Array.<google.cloud.documentai.v1.Document.IEntity>} entities
                         * @memberof google.cloud.documentai.v1.Document
                         * @instance
                         */
                        Document.prototype.entities = $util.emptyArray;
    
                        /**
                         * Document entityRelations.
                         * @member {Array.<google.cloud.documentai.v1.Document.IEntityRelation>} entityRelations
                         * @memberof google.cloud.documentai.v1.Document
                         * @instance
                         */
                        Document.prototype.entityRelations = $util.emptyArray;
    
                        /**
                         * Document textChanges.
                         * @member {Array.<google.cloud.documentai.v1.Document.ITextChange>} textChanges
                         * @memberof google.cloud.documentai.v1.Document
                         * @instance
                         */
                        Document.prototype.textChanges = $util.emptyArray;
    
                        /**
                         * Document shardInfo.
                         * @member {google.cloud.documentai.v1.Document.IShardInfo|null|undefined} shardInfo
                         * @memberof google.cloud.documentai.v1.Document
                         * @instance
                         */
                        Document.prototype.shardInfo = null;
    
                        /**
                         * Document error.
                         * @member {google.rpc.IStatus|null|undefined} error
                         * @memberof google.cloud.documentai.v1.Document
                         * @instance
                         */
                        Document.prototype.error = null;
    
                        /**
                         * Document revisions.
                         * @member {Array.<google.cloud.documentai.v1.Document.IRevision>} revisions
                         * @memberof google.cloud.documentai.v1.Document
                         * @instance
                         */
                        Document.prototype.revisions = $util.emptyArray;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Document source.
                         * @member {"uri"|"content"|undefined} source
                         * @memberof google.cloud.documentai.v1.Document
                         * @instance
                         */
                        Object.defineProperty(Document.prototype, "source", {
                            get: $util.oneOfGetter($oneOfFields = ["uri", "content"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Document instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.Document
                         * @static
                         * @param {google.cloud.documentai.v1.IDocument=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.Document} Document instance
                         */
                        Document.create = function create(properties) {
                            return new Document(properties);
                        };
    
                        /**
                         * Encodes the specified Document message. Does not implicitly {@link google.cloud.documentai.v1.Document.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.Document
                         * @static
                         * @param {google.cloud.documentai.v1.IDocument} message Document message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Document.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.uri);
                            if (message.content != null && Object.hasOwnProperty.call(message, "content"))
                                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.content);
                            if (message.mimeType != null && Object.hasOwnProperty.call(message, "mimeType"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.mimeType);
                            if (message.text != null && Object.hasOwnProperty.call(message, "text"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.text);
                            if (message.textStyles != null && message.textStyles.length)
                                for (var i = 0; i < message.textStyles.length; ++i)
                                    $root.google.cloud.documentai.v1.Document.Style.encode(message.textStyles[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.pages != null && message.pages.length)
                                for (var i = 0; i < message.pages.length; ++i)
                                    $root.google.cloud.documentai.v1.Document.Page.encode(message.pages[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.entities != null && message.entities.length)
                                for (var i = 0; i < message.entities.length; ++i)
                                    $root.google.cloud.documentai.v1.Document.Entity.encode(message.entities[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.entityRelations != null && message.entityRelations.length)
                                for (var i = 0; i < message.entityRelations.length; ++i)
                                    $root.google.cloud.documentai.v1.Document.EntityRelation.encode(message.entityRelations[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.shardInfo != null && Object.hasOwnProperty.call(message, "shardInfo"))
                                $root.google.cloud.documentai.v1.Document.ShardInfo.encode(message.shardInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                                $root.google.rpc.Status.encode(message.error, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.revisions != null && message.revisions.length)
                                for (var i = 0; i < message.revisions.length; ++i)
                                    $root.google.cloud.documentai.v1.Document.Revision.encode(message.revisions[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            if (message.textChanges != null && message.textChanges.length)
                                for (var i = 0; i < message.textChanges.length; ++i)
                                    $root.google.cloud.documentai.v1.Document.TextChange.encode(message.textChanges[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Document message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.Document
                         * @static
                         * @param {google.cloud.documentai.v1.IDocument} message Document message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Document.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Document message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.Document
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.Document} Document
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Document.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.content = reader.bytes();
                                        break;
                                    }
                                case 3: {
                                        message.mimeType = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.text = reader.string();
                                        break;
                                    }
                                case 5: {
                                        if (!(message.textStyles && message.textStyles.length))
                                            message.textStyles = [];
                                        message.textStyles.push($root.google.cloud.documentai.v1.Document.Style.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 6: {
                                        if (!(message.pages && message.pages.length))
                                            message.pages = [];
                                        message.pages.push($root.google.cloud.documentai.v1.Document.Page.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 7: {
                                        if (!(message.entities && message.entities.length))
                                            message.entities = [];
                                        message.entities.push($root.google.cloud.documentai.v1.Document.Entity.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 8: {
                                        if (!(message.entityRelations && message.entityRelations.length))
                                            message.entityRelations = [];
                                        message.entityRelations.push($root.google.cloud.documentai.v1.Document.EntityRelation.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 14: {
                                        if (!(message.textChanges && message.textChanges.length))
                                            message.textChanges = [];
                                        message.textChanges.push($root.google.cloud.documentai.v1.Document.TextChange.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 9: {
                                        message.shardInfo = $root.google.cloud.documentai.v1.Document.ShardInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.error = $root.google.rpc.Status.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        if (!(message.revisions && message.revisions.length))
                                            message.revisions = [];
                                        message.revisions.push($root.google.cloud.documentai.v1.Document.Revision.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Document message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.Document
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.Document} Document
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Document.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Document message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.Document
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Document.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.uri != null && message.hasOwnProperty("uri")) {
                                properties.source = 1;
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            }
                            if (message.content != null && message.hasOwnProperty("content")) {
                                if (properties.source === 1)
                                    return "source: multiple values";
                                properties.source = 1;
                                if (!(message.content && typeof message.content.length === "number" || $util.isString(message.content)))
                                    return "content: buffer expected";
                            }
                            if (message.mimeType != null && message.hasOwnProperty("mimeType"))
                                if (!$util.isString(message.mimeType))
                                    return "mimeType: string expected";
                            if (message.text != null && message.hasOwnProperty("text"))
                                if (!$util.isString(message.text))
                                    return "text: string expected";
                            if (message.textStyles != null && message.hasOwnProperty("textStyles")) {
                                if (!Array.isArray(message.textStyles))
                                    return "textStyles: array expected";
                                for (var i = 0; i < message.textStyles.length; ++i) {
                                    var error = $root.google.cloud.documentai.v1.Document.Style.verify(message.textStyles[i]);
                                    if (error)
                                        return "textStyles." + error;
                                }
                            }
                            if (message.pages != null && message.hasOwnProperty("pages")) {
                                if (!Array.isArray(message.pages))
                                    return "pages: array expected";
                                for (var i = 0; i < message.pages.length; ++i) {
                                    var error = $root.google.cloud.documentai.v1.Document.Page.verify(message.pages[i]);
                                    if (error)
                                        return "pages." + error;
                                }
                            }
                            if (message.entities != null && message.hasOwnProperty("entities")) {
                                if (!Array.isArray(message.entities))
                                    return "entities: array expected";
                                for (var i = 0; i < message.entities.length; ++i) {
                                    var error = $root.google.cloud.documentai.v1.Document.Entity.verify(message.entities[i]);
                                    if (error)
                                        return "entities." + error;
                                }
                            }
                            if (message.entityRelations != null && message.hasOwnProperty("entityRelations")) {
                                if (!Array.isArray(message.entityRelations))
                                    return "entityRelations: array expected";
                                for (var i = 0; i < message.entityRelations.length; ++i) {
                                    var error = $root.google.cloud.documentai.v1.Document.EntityRelation.verify(message.entityRelations[i]);
                                    if (error)
                                        return "entityRelations." + error;
                                }
                            }
                            if (message.textChanges != null && message.hasOwnProperty("textChanges")) {
                                if (!Array.isArray(message.textChanges))
                                    return "textChanges: array expected";
                                for (var i = 0; i < message.textChanges.length; ++i) {
                                    var error = $root.google.cloud.documentai.v1.Document.TextChange.verify(message.textChanges[i]);
                                    if (error)
                                        return "textChanges." + error;
                                }
                            }
                            if (message.shardInfo != null && message.hasOwnProperty("shardInfo")) {
                                var error = $root.google.cloud.documentai.v1.Document.ShardInfo.verify(message.shardInfo);
                                if (error)
                                    return "shardInfo." + error;
                            }
                            if (message.error != null && message.hasOwnProperty("error")) {
                                var error = $root.google.rpc.Status.verify(message.error);
                                if (error)
                                    return "error." + error;
                            }
                            if (message.revisions != null && message.hasOwnProperty("revisions")) {
                                if (!Array.isArray(message.revisions))
                                    return "revisions: array expected";
                                for (var i = 0; i < message.revisions.length; ++i) {
                                    var error = $root.google.cloud.documentai.v1.Document.Revision.verify(message.revisions[i]);
                                    if (error)
                                        return "revisions." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Document message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.Document
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.Document} Document
                         */
                        Document.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.Document)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.Document();
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            if (object.content != null)
                                if (typeof object.content === "string")
                                    $util.base64.decode(object.content, message.content = $util.newBuffer($util.base64.length(object.content)), 0);
                                else if (object.content.length >= 0)
                                    message.content = object.content;
                            if (object.mimeType != null)
                                message.mimeType = String(object.mimeType);
                            if (object.text != null)
                                message.text = String(object.text);
                            if (object.textStyles) {
                                if (!Array.isArray(object.textStyles))
                                    throw TypeError(".google.cloud.documentai.v1.Document.textStyles: array expected");
                                message.textStyles = [];
                                for (var i = 0; i < object.textStyles.length; ++i) {
                                    if (typeof object.textStyles[i] !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.textStyles: object expected");
                                    message.textStyles[i] = $root.google.cloud.documentai.v1.Document.Style.fromObject(object.textStyles[i]);
                                }
                            }
                            if (object.pages) {
                                if (!Array.isArray(object.pages))
                                    throw TypeError(".google.cloud.documentai.v1.Document.pages: array expected");
                                message.pages = [];
                                for (var i = 0; i < object.pages.length; ++i) {
                                    if (typeof object.pages[i] !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.pages: object expected");
                                    message.pages[i] = $root.google.cloud.documentai.v1.Document.Page.fromObject(object.pages[i]);
                                }
                            }
                            if (object.entities) {
                                if (!Array.isArray(object.entities))
                                    throw TypeError(".google.cloud.documentai.v1.Document.entities: array expected");
                                message.entities = [];
                                for (var i = 0; i < object.entities.length; ++i) {
                                    if (typeof object.entities[i] !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.entities: object expected");
                                    message.entities[i] = $root.google.cloud.documentai.v1.Document.Entity.fromObject(object.entities[i]);
                                }
                            }
                            if (object.entityRelations) {
                                if (!Array.isArray(object.entityRelations))
                                    throw TypeError(".google.cloud.documentai.v1.Document.entityRelations: array expected");
                                message.entityRelations = [];
                                for (var i = 0; i < object.entityRelations.length; ++i) {
                                    if (typeof object.entityRelations[i] !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.entityRelations: object expected");
                                    message.entityRelations[i] = $root.google.cloud.documentai.v1.Document.EntityRelation.fromObject(object.entityRelations[i]);
                                }
                            }
                            if (object.textChanges) {
                                if (!Array.isArray(object.textChanges))
                                    throw TypeError(".google.cloud.documentai.v1.Document.textChanges: array expected");
                                message.textChanges = [];
                                for (var i = 0; i < object.textChanges.length; ++i) {
                                    if (typeof object.textChanges[i] !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.textChanges: object expected");
                                    message.textChanges[i] = $root.google.cloud.documentai.v1.Document.TextChange.fromObject(object.textChanges[i]);
                                }
                            }
                            if (object.shardInfo != null) {
                                if (typeof object.shardInfo !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.Document.shardInfo: object expected");
                                message.shardInfo = $root.google.cloud.documentai.v1.Document.ShardInfo.fromObject(object.shardInfo);
                            }
                            if (object.error != null) {
                                if (typeof object.error !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.Document.error: object expected");
                                message.error = $root.google.rpc.Status.fromObject(object.error);
                            }
                            if (object.revisions) {
                                if (!Array.isArray(object.revisions))
                                    throw TypeError(".google.cloud.documentai.v1.Document.revisions: array expected");
                                message.revisions = [];
                                for (var i = 0; i < object.revisions.length; ++i) {
                                    if (typeof object.revisions[i] !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.revisions: object expected");
                                    message.revisions[i] = $root.google.cloud.documentai.v1.Document.Revision.fromObject(object.revisions[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Document message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.Document
                         * @static
                         * @param {google.cloud.documentai.v1.Document} message Document
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Document.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.textStyles = [];
                                object.pages = [];
                                object.entities = [];
                                object.entityRelations = [];
                                object.revisions = [];
                                object.textChanges = [];
                            }
                            if (options.defaults) {
                                object.mimeType = "";
                                object.text = "";
                                object.shardInfo = null;
                                object.error = null;
                            }
                            if (message.uri != null && message.hasOwnProperty("uri")) {
                                object.uri = message.uri;
                                if (options.oneofs)
                                    object.source = "uri";
                            }
                            if (message.content != null && message.hasOwnProperty("content")) {
                                object.content = options.bytes === String ? $util.base64.encode(message.content, 0, message.content.length) : options.bytes === Array ? Array.prototype.slice.call(message.content) : message.content;
                                if (options.oneofs)
                                    object.source = "content";
                            }
                            if (message.mimeType != null && message.hasOwnProperty("mimeType"))
                                object.mimeType = message.mimeType;
                            if (message.text != null && message.hasOwnProperty("text"))
                                object.text = message.text;
                            if (message.textStyles && message.textStyles.length) {
                                object.textStyles = [];
                                for (var j = 0; j < message.textStyles.length; ++j)
                                    object.textStyles[j] = $root.google.cloud.documentai.v1.Document.Style.toObject(message.textStyles[j], options);
                            }
                            if (message.pages && message.pages.length) {
                                object.pages = [];
                                for (var j = 0; j < message.pages.length; ++j)
                                    object.pages[j] = $root.google.cloud.documentai.v1.Document.Page.toObject(message.pages[j], options);
                            }
                            if (message.entities && message.entities.length) {
                                object.entities = [];
                                for (var j = 0; j < message.entities.length; ++j)
                                    object.entities[j] = $root.google.cloud.documentai.v1.Document.Entity.toObject(message.entities[j], options);
                            }
                            if (message.entityRelations && message.entityRelations.length) {
                                object.entityRelations = [];
                                for (var j = 0; j < message.entityRelations.length; ++j)
                                    object.entityRelations[j] = $root.google.cloud.documentai.v1.Document.EntityRelation.toObject(message.entityRelations[j], options);
                            }
                            if (message.shardInfo != null && message.hasOwnProperty("shardInfo"))
                                object.shardInfo = $root.google.cloud.documentai.v1.Document.ShardInfo.toObject(message.shardInfo, options);
                            if (message.error != null && message.hasOwnProperty("error"))
                                object.error = $root.google.rpc.Status.toObject(message.error, options);
                            if (message.revisions && message.revisions.length) {
                                object.revisions = [];
                                for (var j = 0; j < message.revisions.length; ++j)
                                    object.revisions[j] = $root.google.cloud.documentai.v1.Document.Revision.toObject(message.revisions[j], options);
                            }
                            if (message.textChanges && message.textChanges.length) {
                                object.textChanges = [];
                                for (var j = 0; j < message.textChanges.length; ++j)
                                    object.textChanges[j] = $root.google.cloud.documentai.v1.Document.TextChange.toObject(message.textChanges[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Document to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.Document
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Document.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Document
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.Document
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Document.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.Document";
                        };
    
                        Document.ShardInfo = (function() {
    
                            /**
                             * Properties of a ShardInfo.
                             * @memberof google.cloud.documentai.v1.Document
                             * @interface IShardInfo
                             * @property {number|Long|null} [shardIndex] ShardInfo shardIndex
                             * @property {number|Long|null} [shardCount] ShardInfo shardCount
                             * @property {number|Long|null} [textOffset] ShardInfo textOffset
                             */
    
                            /**
                             * Constructs a new ShardInfo.
                             * @memberof google.cloud.documentai.v1.Document
                             * @classdesc Represents a ShardInfo.
                             * @implements IShardInfo
                             * @constructor
                             * @param {google.cloud.documentai.v1.Document.IShardInfo=} [properties] Properties to set
                             */
                            function ShardInfo(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ShardInfo shardIndex.
                             * @member {number|Long} shardIndex
                             * @memberof google.cloud.documentai.v1.Document.ShardInfo
                             * @instance
                             */
                            ShardInfo.prototype.shardIndex = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * ShardInfo shardCount.
                             * @member {number|Long} shardCount
                             * @memberof google.cloud.documentai.v1.Document.ShardInfo
                             * @instance
                             */
                            ShardInfo.prototype.shardCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * ShardInfo textOffset.
                             * @member {number|Long} textOffset
                             * @memberof google.cloud.documentai.v1.Document.ShardInfo
                             * @instance
                             */
                            ShardInfo.prototype.textOffset = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * Creates a new ShardInfo instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.Document.ShardInfo
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IShardInfo=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.Document.ShardInfo} ShardInfo instance
                             */
                            ShardInfo.create = function create(properties) {
                                return new ShardInfo(properties);
                            };
    
                            /**
                             * Encodes the specified ShardInfo message. Does not implicitly {@link google.cloud.documentai.v1.Document.ShardInfo.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.Document.ShardInfo
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IShardInfo} message ShardInfo message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ShardInfo.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.shardIndex != null && Object.hasOwnProperty.call(message, "shardIndex"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.shardIndex);
                                if (message.shardCount != null && Object.hasOwnProperty.call(message, "shardCount"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.shardCount);
                                if (message.textOffset != null && Object.hasOwnProperty.call(message, "textOffset"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int64(message.textOffset);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ShardInfo message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.ShardInfo.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.ShardInfo
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IShardInfo} message ShardInfo message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ShardInfo.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ShardInfo message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.Document.ShardInfo
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.Document.ShardInfo} ShardInfo
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ShardInfo.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.ShardInfo();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.shardIndex = reader.int64();
                                            break;
                                        }
                                    case 2: {
                                            message.shardCount = reader.int64();
                                            break;
                                        }
                                    case 3: {
                                            message.textOffset = reader.int64();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ShardInfo message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.ShardInfo
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.Document.ShardInfo} ShardInfo
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ShardInfo.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ShardInfo message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.Document.ShardInfo
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ShardInfo.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.shardIndex != null && message.hasOwnProperty("shardIndex"))
                                    if (!$util.isInteger(message.shardIndex) && !(message.shardIndex && $util.isInteger(message.shardIndex.low) && $util.isInteger(message.shardIndex.high)))
                                        return "shardIndex: integer|Long expected";
                                if (message.shardCount != null && message.hasOwnProperty("shardCount"))
                                    if (!$util.isInteger(message.shardCount) && !(message.shardCount && $util.isInteger(message.shardCount.low) && $util.isInteger(message.shardCount.high)))
                                        return "shardCount: integer|Long expected";
                                if (message.textOffset != null && message.hasOwnProperty("textOffset"))
                                    if (!$util.isInteger(message.textOffset) && !(message.textOffset && $util.isInteger(message.textOffset.low) && $util.isInteger(message.textOffset.high)))
                                        return "textOffset: integer|Long expected";
                                return null;
                            };
    
                            /**
                             * Creates a ShardInfo message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.Document.ShardInfo
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.Document.ShardInfo} ShardInfo
                             */
                            ShardInfo.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.Document.ShardInfo)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.Document.ShardInfo();
                                if (object.shardIndex != null)
                                    if ($util.Long)
                                        (message.shardIndex = $util.Long.fromValue(object.shardIndex)).unsigned = false;
                                    else if (typeof object.shardIndex === "string")
                                        message.shardIndex = parseInt(object.shardIndex, 10);
                                    else if (typeof object.shardIndex === "number")
                                        message.shardIndex = object.shardIndex;
                                    else if (typeof object.shardIndex === "object")
                                        message.shardIndex = new $util.LongBits(object.shardIndex.low >>> 0, object.shardIndex.high >>> 0).toNumber();
                                if (object.shardCount != null)
                                    if ($util.Long)
                                        (message.shardCount = $util.Long.fromValue(object.shardCount)).unsigned = false;
                                    else if (typeof object.shardCount === "string")
                                        message.shardCount = parseInt(object.shardCount, 10);
                                    else if (typeof object.shardCount === "number")
                                        message.shardCount = object.shardCount;
                                    else if (typeof object.shardCount === "object")
                                        message.shardCount = new $util.LongBits(object.shardCount.low >>> 0, object.shardCount.high >>> 0).toNumber();
                                if (object.textOffset != null)
                                    if ($util.Long)
                                        (message.textOffset = $util.Long.fromValue(object.textOffset)).unsigned = false;
                                    else if (typeof object.textOffset === "string")
                                        message.textOffset = parseInt(object.textOffset, 10);
                                    else if (typeof object.textOffset === "number")
                                        message.textOffset = object.textOffset;
                                    else if (typeof object.textOffset === "object")
                                        message.textOffset = new $util.LongBits(object.textOffset.low >>> 0, object.textOffset.high >>> 0).toNumber();
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ShardInfo message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.Document.ShardInfo
                             * @static
                             * @param {google.cloud.documentai.v1.Document.ShardInfo} message ShardInfo
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ShardInfo.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.shardIndex = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.shardIndex = options.longs === String ? "0" : 0;
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.shardCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.shardCount = options.longs === String ? "0" : 0;
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.textOffset = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.textOffset = options.longs === String ? "0" : 0;
                                }
                                if (message.shardIndex != null && message.hasOwnProperty("shardIndex"))
                                    if (typeof message.shardIndex === "number")
                                        object.shardIndex = options.longs === String ? String(message.shardIndex) : message.shardIndex;
                                    else
                                        object.shardIndex = options.longs === String ? $util.Long.prototype.toString.call(message.shardIndex) : options.longs === Number ? new $util.LongBits(message.shardIndex.low >>> 0, message.shardIndex.high >>> 0).toNumber() : message.shardIndex;
                                if (message.shardCount != null && message.hasOwnProperty("shardCount"))
                                    if (typeof message.shardCount === "number")
                                        object.shardCount = options.longs === String ? String(message.shardCount) : message.shardCount;
                                    else
                                        object.shardCount = options.longs === String ? $util.Long.prototype.toString.call(message.shardCount) : options.longs === Number ? new $util.LongBits(message.shardCount.low >>> 0, message.shardCount.high >>> 0).toNumber() : message.shardCount;
                                if (message.textOffset != null && message.hasOwnProperty("textOffset"))
                                    if (typeof message.textOffset === "number")
                                        object.textOffset = options.longs === String ? String(message.textOffset) : message.textOffset;
                                    else
                                        object.textOffset = options.longs === String ? $util.Long.prototype.toString.call(message.textOffset) : options.longs === Number ? new $util.LongBits(message.textOffset.low >>> 0, message.textOffset.high >>> 0).toNumber() : message.textOffset;
                                return object;
                            };
    
                            /**
                             * Converts this ShardInfo to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.Document.ShardInfo
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ShardInfo.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ShardInfo
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.Document.ShardInfo
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ShardInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.Document.ShardInfo";
                            };
    
                            return ShardInfo;
                        })();
    
                        Document.Style = (function() {
    
                            /**
                             * Properties of a Style.
                             * @memberof google.cloud.documentai.v1.Document
                             * @interface IStyle
                             * @property {google.cloud.documentai.v1.Document.ITextAnchor|null} [textAnchor] Style textAnchor
                             * @property {google.type.IColor|null} [color] Style color
                             * @property {google.type.IColor|null} [backgroundColor] Style backgroundColor
                             * @property {string|null} [fontWeight] Style fontWeight
                             * @property {string|null} [textStyle] Style textStyle
                             * @property {string|null} [textDecoration] Style textDecoration
                             * @property {google.cloud.documentai.v1.Document.Style.IFontSize|null} [fontSize] Style fontSize
                             * @property {string|null} [fontFamily] Style fontFamily
                             */
    
                            /**
                             * Constructs a new Style.
                             * @memberof google.cloud.documentai.v1.Document
                             * @classdesc Represents a Style.
                             * @implements IStyle
                             * @constructor
                             * @param {google.cloud.documentai.v1.Document.IStyle=} [properties] Properties to set
                             */
                            function Style(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Style textAnchor.
                             * @member {google.cloud.documentai.v1.Document.ITextAnchor|null|undefined} textAnchor
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @instance
                             */
                            Style.prototype.textAnchor = null;
    
                            /**
                             * Style color.
                             * @member {google.type.IColor|null|undefined} color
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @instance
                             */
                            Style.prototype.color = null;
    
                            /**
                             * Style backgroundColor.
                             * @member {google.type.IColor|null|undefined} backgroundColor
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @instance
                             */
                            Style.prototype.backgroundColor = null;
    
                            /**
                             * Style fontWeight.
                             * @member {string} fontWeight
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @instance
                             */
                            Style.prototype.fontWeight = "";
    
                            /**
                             * Style textStyle.
                             * @member {string} textStyle
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @instance
                             */
                            Style.prototype.textStyle = "";
    
                            /**
                             * Style textDecoration.
                             * @member {string} textDecoration
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @instance
                             */
                            Style.prototype.textDecoration = "";
    
                            /**
                             * Style fontSize.
                             * @member {google.cloud.documentai.v1.Document.Style.IFontSize|null|undefined} fontSize
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @instance
                             */
                            Style.prototype.fontSize = null;
    
                            /**
                             * Style fontFamily.
                             * @member {string} fontFamily
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @instance
                             */
                            Style.prototype.fontFamily = "";
    
                            /**
                             * Creates a new Style instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IStyle=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.Document.Style} Style instance
                             */
                            Style.create = function create(properties) {
                                return new Style(properties);
                            };
    
                            /**
                             * Encodes the specified Style message. Does not implicitly {@link google.cloud.documentai.v1.Document.Style.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IStyle} message Style message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Style.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.textAnchor != null && Object.hasOwnProperty.call(message, "textAnchor"))
                                    $root.google.cloud.documentai.v1.Document.TextAnchor.encode(message.textAnchor, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.color != null && Object.hasOwnProperty.call(message, "color"))
                                    $root.google.type.Color.encode(message.color, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.backgroundColor != null && Object.hasOwnProperty.call(message, "backgroundColor"))
                                    $root.google.type.Color.encode(message.backgroundColor, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.fontWeight != null && Object.hasOwnProperty.call(message, "fontWeight"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.fontWeight);
                                if (message.textStyle != null && Object.hasOwnProperty.call(message, "textStyle"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.textStyle);
                                if (message.textDecoration != null && Object.hasOwnProperty.call(message, "textDecoration"))
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.textDecoration);
                                if (message.fontSize != null && Object.hasOwnProperty.call(message, "fontSize"))
                                    $root.google.cloud.documentai.v1.Document.Style.FontSize.encode(message.fontSize, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                                if (message.fontFamily != null && Object.hasOwnProperty.call(message, "fontFamily"))
                                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.fontFamily);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Style message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Style.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IStyle} message Style message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Style.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Style message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.Document.Style} Style
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Style.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Style();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.textAnchor = $root.google.cloud.documentai.v1.Document.TextAnchor.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.color = $root.google.type.Color.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.backgroundColor = $root.google.type.Color.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.fontWeight = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.textStyle = reader.string();
                                            break;
                                        }
                                    case 6: {
                                            message.textDecoration = reader.string();
                                            break;
                                        }
                                    case 7: {
                                            message.fontSize = $root.google.cloud.documentai.v1.Document.Style.FontSize.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 8: {
                                            message.fontFamily = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Style message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.Document.Style} Style
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Style.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Style message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Style.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.textAnchor != null && message.hasOwnProperty("textAnchor")) {
                                    var error = $root.google.cloud.documentai.v1.Document.TextAnchor.verify(message.textAnchor);
                                    if (error)
                                        return "textAnchor." + error;
                                }
                                if (message.color != null && message.hasOwnProperty("color")) {
                                    var error = $root.google.type.Color.verify(message.color);
                                    if (error)
                                        return "color." + error;
                                }
                                if (message.backgroundColor != null && message.hasOwnProperty("backgroundColor")) {
                                    var error = $root.google.type.Color.verify(message.backgroundColor);
                                    if (error)
                                        return "backgroundColor." + error;
                                }
                                if (message.fontWeight != null && message.hasOwnProperty("fontWeight"))
                                    if (!$util.isString(message.fontWeight))
                                        return "fontWeight: string expected";
                                if (message.textStyle != null && message.hasOwnProperty("textStyle"))
                                    if (!$util.isString(message.textStyle))
                                        return "textStyle: string expected";
                                if (message.textDecoration != null && message.hasOwnProperty("textDecoration"))
                                    if (!$util.isString(message.textDecoration))
                                        return "textDecoration: string expected";
                                if (message.fontSize != null && message.hasOwnProperty("fontSize")) {
                                    var error = $root.google.cloud.documentai.v1.Document.Style.FontSize.verify(message.fontSize);
                                    if (error)
                                        return "fontSize." + error;
                                }
                                if (message.fontFamily != null && message.hasOwnProperty("fontFamily"))
                                    if (!$util.isString(message.fontFamily))
                                        return "fontFamily: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a Style message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.Document.Style} Style
                             */
                            Style.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.Document.Style)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.Document.Style();
                                if (object.textAnchor != null) {
                                    if (typeof object.textAnchor !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Style.textAnchor: object expected");
                                    message.textAnchor = $root.google.cloud.documentai.v1.Document.TextAnchor.fromObject(object.textAnchor);
                                }
                                if (object.color != null) {
                                    if (typeof object.color !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Style.color: object expected");
                                    message.color = $root.google.type.Color.fromObject(object.color);
                                }
                                if (object.backgroundColor != null) {
                                    if (typeof object.backgroundColor !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Style.backgroundColor: object expected");
                                    message.backgroundColor = $root.google.type.Color.fromObject(object.backgroundColor);
                                }
                                if (object.fontWeight != null)
                                    message.fontWeight = String(object.fontWeight);
                                if (object.textStyle != null)
                                    message.textStyle = String(object.textStyle);
                                if (object.textDecoration != null)
                                    message.textDecoration = String(object.textDecoration);
                                if (object.fontSize != null) {
                                    if (typeof object.fontSize !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Style.fontSize: object expected");
                                    message.fontSize = $root.google.cloud.documentai.v1.Document.Style.FontSize.fromObject(object.fontSize);
                                }
                                if (object.fontFamily != null)
                                    message.fontFamily = String(object.fontFamily);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Style message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @static
                             * @param {google.cloud.documentai.v1.Document.Style} message Style
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Style.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.textAnchor = null;
                                    object.color = null;
                                    object.backgroundColor = null;
                                    object.fontWeight = "";
                                    object.textStyle = "";
                                    object.textDecoration = "";
                                    object.fontSize = null;
                                    object.fontFamily = "";
                                }
                                if (message.textAnchor != null && message.hasOwnProperty("textAnchor"))
                                    object.textAnchor = $root.google.cloud.documentai.v1.Document.TextAnchor.toObject(message.textAnchor, options);
                                if (message.color != null && message.hasOwnProperty("color"))
                                    object.color = $root.google.type.Color.toObject(message.color, options);
                                if (message.backgroundColor != null && message.hasOwnProperty("backgroundColor"))
                                    object.backgroundColor = $root.google.type.Color.toObject(message.backgroundColor, options);
                                if (message.fontWeight != null && message.hasOwnProperty("fontWeight"))
                                    object.fontWeight = message.fontWeight;
                                if (message.textStyle != null && message.hasOwnProperty("textStyle"))
                                    object.textStyle = message.textStyle;
                                if (message.textDecoration != null && message.hasOwnProperty("textDecoration"))
                                    object.textDecoration = message.textDecoration;
                                if (message.fontSize != null && message.hasOwnProperty("fontSize"))
                                    object.fontSize = $root.google.cloud.documentai.v1.Document.Style.FontSize.toObject(message.fontSize, options);
                                if (message.fontFamily != null && message.hasOwnProperty("fontFamily"))
                                    object.fontFamily = message.fontFamily;
                                return object;
                            };
    
                            /**
                             * Converts this Style to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Style.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Style
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Style.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Style";
                            };
    
                            Style.FontSize = (function() {
    
                                /**
                                 * Properties of a FontSize.
                                 * @memberof google.cloud.documentai.v1.Document.Style
                                 * @interface IFontSize
                                 * @property {number|null} [size] FontSize size
                                 * @property {string|null} [unit] FontSize unit
                                 */
    
                                /**
                                 * Constructs a new FontSize.
                                 * @memberof google.cloud.documentai.v1.Document.Style
                                 * @classdesc Represents a FontSize.
                                 * @implements IFontSize
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Style.IFontSize=} [properties] Properties to set
                                 */
                                function FontSize(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * FontSize size.
                                 * @member {number} size
                                 * @memberof google.cloud.documentai.v1.Document.Style.FontSize
                                 * @instance
                                 */
                                FontSize.prototype.size = 0;
    
                                /**
                                 * FontSize unit.
                                 * @member {string} unit
                                 * @memberof google.cloud.documentai.v1.Document.Style.FontSize
                                 * @instance
                                 */
                                FontSize.prototype.unit = "";
    
                                /**
                                 * Creates a new FontSize instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Style.FontSize
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Style.IFontSize=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Style.FontSize} FontSize instance
                                 */
                                FontSize.create = function create(properties) {
                                    return new FontSize(properties);
                                };
    
                                /**
                                 * Encodes the specified FontSize message. Does not implicitly {@link google.cloud.documentai.v1.Document.Style.FontSize.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Style.FontSize
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Style.IFontSize} message FontSize message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                FontSize.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.size != null && Object.hasOwnProperty.call(message, "size"))
                                        writer.uint32(/* id 1, wireType 5 =*/13).float(message.size);
                                    if (message.unit != null && Object.hasOwnProperty.call(message, "unit"))
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.unit);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified FontSize message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Style.FontSize.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Style.FontSize
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Style.IFontSize} message FontSize message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                FontSize.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a FontSize message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Style.FontSize
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Style.FontSize} FontSize
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                FontSize.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Style.FontSize();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.size = reader.float();
                                                break;
                                            }
                                        case 2: {
                                                message.unit = reader.string();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a FontSize message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Style.FontSize
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Style.FontSize} FontSize
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                FontSize.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a FontSize message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Style.FontSize
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                FontSize.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.size != null && message.hasOwnProperty("size"))
                                        if (typeof message.size !== "number")
                                            return "size: number expected";
                                    if (message.unit != null && message.hasOwnProperty("unit"))
                                        if (!$util.isString(message.unit))
                                            return "unit: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a FontSize message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Style.FontSize
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Style.FontSize} FontSize
                                 */
                                FontSize.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Style.FontSize)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Style.FontSize();
                                    if (object.size != null)
                                        message.size = Number(object.size);
                                    if (object.unit != null)
                                        message.unit = String(object.unit);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a FontSize message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Style.FontSize
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Style.FontSize} message FontSize
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                FontSize.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.size = 0;
                                        object.unit = "";
                                    }
                                    if (message.size != null && message.hasOwnProperty("size"))
                                        object.size = options.json && !isFinite(message.size) ? String(message.size) : message.size;
                                    if (message.unit != null && message.hasOwnProperty("unit"))
                                        object.unit = message.unit;
                                    return object;
                                };
    
                                /**
                                 * Converts this FontSize to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Style.FontSize
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                FontSize.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for FontSize
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Style.FontSize
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                FontSize.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Style.FontSize";
                                };
    
                                return FontSize;
                            })();
    
                            return Style;
                        })();
    
                        Document.Page = (function() {
    
                            /**
                             * Properties of a Page.
                             * @memberof google.cloud.documentai.v1.Document
                             * @interface IPage
                             * @property {number|null} [pageNumber] Page pageNumber
                             * @property {google.cloud.documentai.v1.Document.Page.IImage|null} [image] Page image
                             * @property {Array.<google.cloud.documentai.v1.Document.Page.IMatrix>|null} [transforms] Page transforms
                             * @property {google.cloud.documentai.v1.Document.Page.IDimension|null} [dimension] Page dimension
                             * @property {google.cloud.documentai.v1.Document.Page.ILayout|null} [layout] Page layout
                             * @property {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>|null} [detectedLanguages] Page detectedLanguages
                             * @property {Array.<google.cloud.documentai.v1.Document.Page.IBlock>|null} [blocks] Page blocks
                             * @property {Array.<google.cloud.documentai.v1.Document.Page.IParagraph>|null} [paragraphs] Page paragraphs
                             * @property {Array.<google.cloud.documentai.v1.Document.Page.ILine>|null} [lines] Page lines
                             * @property {Array.<google.cloud.documentai.v1.Document.Page.IToken>|null} [tokens] Page tokens
                             * @property {Array.<google.cloud.documentai.v1.Document.Page.IVisualElement>|null} [visualElements] Page visualElements
                             * @property {Array.<google.cloud.documentai.v1.Document.Page.ITable>|null} [tables] Page tables
                             * @property {Array.<google.cloud.documentai.v1.Document.Page.IFormField>|null} [formFields] Page formFields
                             * @property {Array.<google.cloud.documentai.v1.Document.Page.ISymbol>|null} [symbols] Page symbols
                             * @property {Array.<google.cloud.documentai.v1.Document.Page.IDetectedBarcode>|null} [detectedBarcodes] Page detectedBarcodes
                             * @property {google.cloud.documentai.v1.Document.Page.IImageQualityScores|null} [imageQualityScores] Page imageQualityScores
                             * @property {google.cloud.documentai.v1.Document.IProvenance|null} [provenance] Page provenance
                             */
    
                            /**
                             * Constructs a new Page.
                             * @memberof google.cloud.documentai.v1.Document
                             * @classdesc Represents a Page.
                             * @implements IPage
                             * @constructor
                             * @param {google.cloud.documentai.v1.Document.IPage=} [properties] Properties to set
                             */
                            function Page(properties) {
                                this.transforms = [];
                                this.detectedLanguages = [];
                                this.blocks = [];
                                this.paragraphs = [];
                                this.lines = [];
                                this.tokens = [];
                                this.visualElements = [];
                                this.tables = [];
                                this.formFields = [];
                                this.symbols = [];
                                this.detectedBarcodes = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Page pageNumber.
                             * @member {number} pageNumber
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.pageNumber = 0;
    
                            /**
                             * Page image.
                             * @member {google.cloud.documentai.v1.Document.Page.IImage|null|undefined} image
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.image = null;
    
                            /**
                             * Page transforms.
                             * @member {Array.<google.cloud.documentai.v1.Document.Page.IMatrix>} transforms
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.transforms = $util.emptyArray;
    
                            /**
                             * Page dimension.
                             * @member {google.cloud.documentai.v1.Document.Page.IDimension|null|undefined} dimension
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.dimension = null;
    
                            /**
                             * Page layout.
                             * @member {google.cloud.documentai.v1.Document.Page.ILayout|null|undefined} layout
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.layout = null;
    
                            /**
                             * Page detectedLanguages.
                             * @member {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>} detectedLanguages
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.detectedLanguages = $util.emptyArray;
    
                            /**
                             * Page blocks.
                             * @member {Array.<google.cloud.documentai.v1.Document.Page.IBlock>} blocks
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.blocks = $util.emptyArray;
    
                            /**
                             * Page paragraphs.
                             * @member {Array.<google.cloud.documentai.v1.Document.Page.IParagraph>} paragraphs
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.paragraphs = $util.emptyArray;
    
                            /**
                             * Page lines.
                             * @member {Array.<google.cloud.documentai.v1.Document.Page.ILine>} lines
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.lines = $util.emptyArray;
    
                            /**
                             * Page tokens.
                             * @member {Array.<google.cloud.documentai.v1.Document.Page.IToken>} tokens
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.tokens = $util.emptyArray;
    
                            /**
                             * Page visualElements.
                             * @member {Array.<google.cloud.documentai.v1.Document.Page.IVisualElement>} visualElements
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.visualElements = $util.emptyArray;
    
                            /**
                             * Page tables.
                             * @member {Array.<google.cloud.documentai.v1.Document.Page.ITable>} tables
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.tables = $util.emptyArray;
    
                            /**
                             * Page formFields.
                             * @member {Array.<google.cloud.documentai.v1.Document.Page.IFormField>} formFields
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.formFields = $util.emptyArray;
    
                            /**
                             * Page symbols.
                             * @member {Array.<google.cloud.documentai.v1.Document.Page.ISymbol>} symbols
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.symbols = $util.emptyArray;
    
                            /**
                             * Page detectedBarcodes.
                             * @member {Array.<google.cloud.documentai.v1.Document.Page.IDetectedBarcode>} detectedBarcodes
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.detectedBarcodes = $util.emptyArray;
    
                            /**
                             * Page imageQualityScores.
                             * @member {google.cloud.documentai.v1.Document.Page.IImageQualityScores|null|undefined} imageQualityScores
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.imageQualityScores = null;
    
                            /**
                             * Page provenance.
                             * @member {google.cloud.documentai.v1.Document.IProvenance|null|undefined} provenance
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.provenance = null;
    
                            /**
                             * Creates a new Page instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IPage=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.Document.Page} Page instance
                             */
                            Page.create = function create(properties) {
                                return new Page(properties);
                            };
    
                            /**
                             * Encodes the specified Page message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IPage} message Page message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Page.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.pageNumber != null && Object.hasOwnProperty.call(message, "pageNumber"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.pageNumber);
                                if (message.dimension != null && Object.hasOwnProperty.call(message, "dimension"))
                                    $root.google.cloud.documentai.v1.Document.Page.Dimension.encode(message.dimension, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.layout != null && Object.hasOwnProperty.call(message, "layout"))
                                    $root.google.cloud.documentai.v1.Document.Page.Layout.encode(message.layout, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.detectedLanguages != null && message.detectedLanguages.length)
                                    for (var i = 0; i < message.detectedLanguages.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.encode(message.detectedLanguages[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.blocks != null && message.blocks.length)
                                    for (var i = 0; i < message.blocks.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.Page.Block.encode(message.blocks[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                if (message.paragraphs != null && message.paragraphs.length)
                                    for (var i = 0; i < message.paragraphs.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.Page.Paragraph.encode(message.paragraphs[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                                if (message.lines != null && message.lines.length)
                                    for (var i = 0; i < message.lines.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.Page.Line.encode(message.lines[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                                if (message.tokens != null && message.tokens.length)
                                    for (var i = 0; i < message.tokens.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.Page.Token.encode(message.tokens[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                                if (message.visualElements != null && message.visualElements.length)
                                    for (var i = 0; i < message.visualElements.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.Page.VisualElement.encode(message.visualElements[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                                if (message.tables != null && message.tables.length)
                                    for (var i = 0; i < message.tables.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.Page.Table.encode(message.tables[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                                if (message.formFields != null && message.formFields.length)
                                    for (var i = 0; i < message.formFields.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.Page.FormField.encode(message.formFields[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                                if (message.symbols != null && message.symbols.length)
                                    for (var i = 0; i < message.symbols.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.Page.Symbol.encode(message.symbols[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                                if (message.image != null && Object.hasOwnProperty.call(message, "image"))
                                    $root.google.cloud.documentai.v1.Document.Page.Image.encode(message.image, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                                if (message.transforms != null && message.transforms.length)
                                    for (var i = 0; i < message.transforms.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.Page.Matrix.encode(message.transforms[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                                if (message.detectedBarcodes != null && message.detectedBarcodes.length)
                                    for (var i = 0; i < message.detectedBarcodes.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.Page.DetectedBarcode.encode(message.detectedBarcodes[i], writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                                if (message.provenance != null && Object.hasOwnProperty.call(message, "provenance"))
                                    $root.google.cloud.documentai.v1.Document.Provenance.encode(message.provenance, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                                if (message.imageQualityScores != null && Object.hasOwnProperty.call(message, "imageQualityScores"))
                                    $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores.encode(message.imageQualityScores, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Page message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IPage} message Page message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Page.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Page message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.Document.Page} Page
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Page.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.pageNumber = reader.int32();
                                            break;
                                        }
                                    case 13: {
                                            message.image = $root.google.cloud.documentai.v1.Document.Page.Image.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 14: {
                                            if (!(message.transforms && message.transforms.length))
                                                message.transforms = [];
                                            message.transforms.push($root.google.cloud.documentai.v1.Document.Page.Matrix.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 2: {
                                            message.dimension = $root.google.cloud.documentai.v1.Document.Page.Dimension.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            if (!(message.detectedLanguages && message.detectedLanguages.length))
                                                message.detectedLanguages = [];
                                            message.detectedLanguages.push($root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 5: {
                                            if (!(message.blocks && message.blocks.length))
                                                message.blocks = [];
                                            message.blocks.push($root.google.cloud.documentai.v1.Document.Page.Block.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 6: {
                                            if (!(message.paragraphs && message.paragraphs.length))
                                                message.paragraphs = [];
                                            message.paragraphs.push($root.google.cloud.documentai.v1.Document.Page.Paragraph.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 7: {
                                            if (!(message.lines && message.lines.length))
                                                message.lines = [];
                                            message.lines.push($root.google.cloud.documentai.v1.Document.Page.Line.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 8: {
                                            if (!(message.tokens && message.tokens.length))
                                                message.tokens = [];
                                            message.tokens.push($root.google.cloud.documentai.v1.Document.Page.Token.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 9: {
                                            if (!(message.visualElements && message.visualElements.length))
                                                message.visualElements = [];
                                            message.visualElements.push($root.google.cloud.documentai.v1.Document.Page.VisualElement.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 10: {
                                            if (!(message.tables && message.tables.length))
                                                message.tables = [];
                                            message.tables.push($root.google.cloud.documentai.v1.Document.Page.Table.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 11: {
                                            if (!(message.formFields && message.formFields.length))
                                                message.formFields = [];
                                            message.formFields.push($root.google.cloud.documentai.v1.Document.Page.FormField.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 12: {
                                            if (!(message.symbols && message.symbols.length))
                                                message.symbols = [];
                                            message.symbols.push($root.google.cloud.documentai.v1.Document.Page.Symbol.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 15: {
                                            if (!(message.detectedBarcodes && message.detectedBarcodes.length))
                                                message.detectedBarcodes = [];
                                            message.detectedBarcodes.push($root.google.cloud.documentai.v1.Document.Page.DetectedBarcode.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 17: {
                                            message.imageQualityScores = $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 16: {
                                            message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Page message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.Document.Page} Page
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Page.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Page message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Page.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.pageNumber != null && message.hasOwnProperty("pageNumber"))
                                    if (!$util.isInteger(message.pageNumber))
                                        return "pageNumber: integer expected";
                                if (message.image != null && message.hasOwnProperty("image")) {
                                    var error = $root.google.cloud.documentai.v1.Document.Page.Image.verify(message.image);
                                    if (error)
                                        return "image." + error;
                                }
                                if (message.transforms != null && message.hasOwnProperty("transforms")) {
                                    if (!Array.isArray(message.transforms))
                                        return "transforms: array expected";
                                    for (var i = 0; i < message.transforms.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Matrix.verify(message.transforms[i]);
                                        if (error)
                                            return "transforms." + error;
                                    }
                                }
                                if (message.dimension != null && message.hasOwnProperty("dimension")) {
                                    var error = $root.google.cloud.documentai.v1.Document.Page.Dimension.verify(message.dimension);
                                    if (error)
                                        return "dimension." + error;
                                }
                                if (message.layout != null && message.hasOwnProperty("layout")) {
                                    var error = $root.google.cloud.documentai.v1.Document.Page.Layout.verify(message.layout);
                                    if (error)
                                        return "layout." + error;
                                }
                                if (message.detectedLanguages != null && message.hasOwnProperty("detectedLanguages")) {
                                    if (!Array.isArray(message.detectedLanguages))
                                        return "detectedLanguages: array expected";
                                    for (var i = 0; i < message.detectedLanguages.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.verify(message.detectedLanguages[i]);
                                        if (error)
                                            return "detectedLanguages." + error;
                                    }
                                }
                                if (message.blocks != null && message.hasOwnProperty("blocks")) {
                                    if (!Array.isArray(message.blocks))
                                        return "blocks: array expected";
                                    for (var i = 0; i < message.blocks.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Block.verify(message.blocks[i]);
                                        if (error)
                                            return "blocks." + error;
                                    }
                                }
                                if (message.paragraphs != null && message.hasOwnProperty("paragraphs")) {
                                    if (!Array.isArray(message.paragraphs))
                                        return "paragraphs: array expected";
                                    for (var i = 0; i < message.paragraphs.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Paragraph.verify(message.paragraphs[i]);
                                        if (error)
                                            return "paragraphs." + error;
                                    }
                                }
                                if (message.lines != null && message.hasOwnProperty("lines")) {
                                    if (!Array.isArray(message.lines))
                                        return "lines: array expected";
                                    for (var i = 0; i < message.lines.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Line.verify(message.lines[i]);
                                        if (error)
                                            return "lines." + error;
                                    }
                                }
                                if (message.tokens != null && message.hasOwnProperty("tokens")) {
                                    if (!Array.isArray(message.tokens))
                                        return "tokens: array expected";
                                    for (var i = 0; i < message.tokens.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Token.verify(message.tokens[i]);
                                        if (error)
                                            return "tokens." + error;
                                    }
                                }
                                if (message.visualElements != null && message.hasOwnProperty("visualElements")) {
                                    if (!Array.isArray(message.visualElements))
                                        return "visualElements: array expected";
                                    for (var i = 0; i < message.visualElements.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.VisualElement.verify(message.visualElements[i]);
                                        if (error)
                                            return "visualElements." + error;
                                    }
                                }
                                if (message.tables != null && message.hasOwnProperty("tables")) {
                                    if (!Array.isArray(message.tables))
                                        return "tables: array expected";
                                    for (var i = 0; i < message.tables.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Table.verify(message.tables[i]);
                                        if (error)
                                            return "tables." + error;
                                    }
                                }
                                if (message.formFields != null && message.hasOwnProperty("formFields")) {
                                    if (!Array.isArray(message.formFields))
                                        return "formFields: array expected";
                                    for (var i = 0; i < message.formFields.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.FormField.verify(message.formFields[i]);
                                        if (error)
                                            return "formFields." + error;
                                    }
                                }
                                if (message.symbols != null && message.hasOwnProperty("symbols")) {
                                    if (!Array.isArray(message.symbols))
                                        return "symbols: array expected";
                                    for (var i = 0; i < message.symbols.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Symbol.verify(message.symbols[i]);
                                        if (error)
                                            return "symbols." + error;
                                    }
                                }
                                if (message.detectedBarcodes != null && message.hasOwnProperty("detectedBarcodes")) {
                                    if (!Array.isArray(message.detectedBarcodes))
                                        return "detectedBarcodes: array expected";
                                    for (var i = 0; i < message.detectedBarcodes.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.DetectedBarcode.verify(message.detectedBarcodes[i]);
                                        if (error)
                                            return "detectedBarcodes." + error;
                                    }
                                }
                                if (message.imageQualityScores != null && message.hasOwnProperty("imageQualityScores")) {
                                    var error = $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores.verify(message.imageQualityScores);
                                    if (error)
                                        return "imageQualityScores." + error;
                                }
                                if (message.provenance != null && message.hasOwnProperty("provenance")) {
                                    var error = $root.google.cloud.documentai.v1.Document.Provenance.verify(message.provenance);
                                    if (error)
                                        return "provenance." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a Page message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.Document.Page} Page
                             */
                            Page.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.Document.Page)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.Document.Page();
                                if (object.pageNumber != null)
                                    message.pageNumber = object.pageNumber | 0;
                                if (object.image != null) {
                                    if (typeof object.image !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.image: object expected");
                                    message.image = $root.google.cloud.documentai.v1.Document.Page.Image.fromObject(object.image);
                                }
                                if (object.transforms) {
                                    if (!Array.isArray(object.transforms))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.transforms: array expected");
                                    message.transforms = [];
                                    for (var i = 0; i < object.transforms.length; ++i) {
                                        if (typeof object.transforms[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.transforms: object expected");
                                        message.transforms[i] = $root.google.cloud.documentai.v1.Document.Page.Matrix.fromObject(object.transforms[i]);
                                    }
                                }
                                if (object.dimension != null) {
                                    if (typeof object.dimension !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.dimension: object expected");
                                    message.dimension = $root.google.cloud.documentai.v1.Document.Page.Dimension.fromObject(object.dimension);
                                }
                                if (object.layout != null) {
                                    if (typeof object.layout !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.layout: object expected");
                                    message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.fromObject(object.layout);
                                }
                                if (object.detectedLanguages) {
                                    if (!Array.isArray(object.detectedLanguages))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.detectedLanguages: array expected");
                                    message.detectedLanguages = [];
                                    for (var i = 0; i < object.detectedLanguages.length; ++i) {
                                        if (typeof object.detectedLanguages[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.detectedLanguages: object expected");
                                        message.detectedLanguages[i] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.fromObject(object.detectedLanguages[i]);
                                    }
                                }
                                if (object.blocks) {
                                    if (!Array.isArray(object.blocks))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.blocks: array expected");
                                    message.blocks = [];
                                    for (var i = 0; i < object.blocks.length; ++i) {
                                        if (typeof object.blocks[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.blocks: object expected");
                                        message.blocks[i] = $root.google.cloud.documentai.v1.Document.Page.Block.fromObject(object.blocks[i]);
                                    }
                                }
                                if (object.paragraphs) {
                                    if (!Array.isArray(object.paragraphs))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.paragraphs: array expected");
                                    message.paragraphs = [];
                                    for (var i = 0; i < object.paragraphs.length; ++i) {
                                        if (typeof object.paragraphs[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.paragraphs: object expected");
                                        message.paragraphs[i] = $root.google.cloud.documentai.v1.Document.Page.Paragraph.fromObject(object.paragraphs[i]);
                                    }
                                }
                                if (object.lines) {
                                    if (!Array.isArray(object.lines))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.lines: array expected");
                                    message.lines = [];
                                    for (var i = 0; i < object.lines.length; ++i) {
                                        if (typeof object.lines[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.lines: object expected");
                                        message.lines[i] = $root.google.cloud.documentai.v1.Document.Page.Line.fromObject(object.lines[i]);
                                    }
                                }
                                if (object.tokens) {
                                    if (!Array.isArray(object.tokens))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.tokens: array expected");
                                    message.tokens = [];
                                    for (var i = 0; i < object.tokens.length; ++i) {
                                        if (typeof object.tokens[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.tokens: object expected");
                                        message.tokens[i] = $root.google.cloud.documentai.v1.Document.Page.Token.fromObject(object.tokens[i]);
                                    }
                                }
                                if (object.visualElements) {
                                    if (!Array.isArray(object.visualElements))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.visualElements: array expected");
                                    message.visualElements = [];
                                    for (var i = 0; i < object.visualElements.length; ++i) {
                                        if (typeof object.visualElements[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.visualElements: object expected");
                                        message.visualElements[i] = $root.google.cloud.documentai.v1.Document.Page.VisualElement.fromObject(object.visualElements[i]);
                                    }
                                }
                                if (object.tables) {
                                    if (!Array.isArray(object.tables))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.tables: array expected");
                                    message.tables = [];
                                    for (var i = 0; i < object.tables.length; ++i) {
                                        if (typeof object.tables[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.tables: object expected");
                                        message.tables[i] = $root.google.cloud.documentai.v1.Document.Page.Table.fromObject(object.tables[i]);
                                    }
                                }
                                if (object.formFields) {
                                    if (!Array.isArray(object.formFields))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.formFields: array expected");
                                    message.formFields = [];
                                    for (var i = 0; i < object.formFields.length; ++i) {
                                        if (typeof object.formFields[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.formFields: object expected");
                                        message.formFields[i] = $root.google.cloud.documentai.v1.Document.Page.FormField.fromObject(object.formFields[i]);
                                    }
                                }
                                if (object.symbols) {
                                    if (!Array.isArray(object.symbols))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.symbols: array expected");
                                    message.symbols = [];
                                    for (var i = 0; i < object.symbols.length; ++i) {
                                        if (typeof object.symbols[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.symbols: object expected");
                                        message.symbols[i] = $root.google.cloud.documentai.v1.Document.Page.Symbol.fromObject(object.symbols[i]);
                                    }
                                }
                                if (object.detectedBarcodes) {
                                    if (!Array.isArray(object.detectedBarcodes))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.detectedBarcodes: array expected");
                                    message.detectedBarcodes = [];
                                    for (var i = 0; i < object.detectedBarcodes.length; ++i) {
                                        if (typeof object.detectedBarcodes[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.detectedBarcodes: object expected");
                                        message.detectedBarcodes[i] = $root.google.cloud.documentai.v1.Document.Page.DetectedBarcode.fromObject(object.detectedBarcodes[i]);
                                    }
                                }
                                if (object.imageQualityScores != null) {
                                    if (typeof object.imageQualityScores !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.imageQualityScores: object expected");
                                    message.imageQualityScores = $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores.fromObject(object.imageQualityScores);
                                }
                                if (object.provenance != null) {
                                    if (typeof object.provenance !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.provenance: object expected");
                                    message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.fromObject(object.provenance);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Page message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @static
                             * @param {google.cloud.documentai.v1.Document.Page} message Page
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Page.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.detectedLanguages = [];
                                    object.blocks = [];
                                    object.paragraphs = [];
                                    object.lines = [];
                                    object.tokens = [];
                                    object.visualElements = [];
                                    object.tables = [];
                                    object.formFields = [];
                                    object.symbols = [];
                                    object.transforms = [];
                                    object.detectedBarcodes = [];
                                }
                                if (options.defaults) {
                                    object.pageNumber = 0;
                                    object.dimension = null;
                                    object.layout = null;
                                    object.image = null;
                                    object.provenance = null;
                                    object.imageQualityScores = null;
                                }
                                if (message.pageNumber != null && message.hasOwnProperty("pageNumber"))
                                    object.pageNumber = message.pageNumber;
                                if (message.dimension != null && message.hasOwnProperty("dimension"))
                                    object.dimension = $root.google.cloud.documentai.v1.Document.Page.Dimension.toObject(message.dimension, options);
                                if (message.layout != null && message.hasOwnProperty("layout"))
                                    object.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.toObject(message.layout, options);
                                if (message.detectedLanguages && message.detectedLanguages.length) {
                                    object.detectedLanguages = [];
                                    for (var j = 0; j < message.detectedLanguages.length; ++j)
                                        object.detectedLanguages[j] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.toObject(message.detectedLanguages[j], options);
                                }
                                if (message.blocks && message.blocks.length) {
                                    object.blocks = [];
                                    for (var j = 0; j < message.blocks.length; ++j)
                                        object.blocks[j] = $root.google.cloud.documentai.v1.Document.Page.Block.toObject(message.blocks[j], options);
                                }
                                if (message.paragraphs && message.paragraphs.length) {
                                    object.paragraphs = [];
                                    for (var j = 0; j < message.paragraphs.length; ++j)
                                        object.paragraphs[j] = $root.google.cloud.documentai.v1.Document.Page.Paragraph.toObject(message.paragraphs[j], options);
                                }
                                if (message.lines && message.lines.length) {
                                    object.lines = [];
                                    for (var j = 0; j < message.lines.length; ++j)
                                        object.lines[j] = $root.google.cloud.documentai.v1.Document.Page.Line.toObject(message.lines[j], options);
                                }
                                if (message.tokens && message.tokens.length) {
                                    object.tokens = [];
                                    for (var j = 0; j < message.tokens.length; ++j)
                                        object.tokens[j] = $root.google.cloud.documentai.v1.Document.Page.Token.toObject(message.tokens[j], options);
                                }
                                if (message.visualElements && message.visualElements.length) {
                                    object.visualElements = [];
                                    for (var j = 0; j < message.visualElements.length; ++j)
                                        object.visualElements[j] = $root.google.cloud.documentai.v1.Document.Page.VisualElement.toObject(message.visualElements[j], options);
                                }
                                if (message.tables && message.tables.length) {
                                    object.tables = [];
                                    for (var j = 0; j < message.tables.length; ++j)
                                        object.tables[j] = $root.google.cloud.documentai.v1.Document.Page.Table.toObject(message.tables[j], options);
                                }
                                if (message.formFields && message.formFields.length) {
                                    object.formFields = [];
                                    for (var j = 0; j < message.formFields.length; ++j)
                                        object.formFields[j] = $root.google.cloud.documentai.v1.Document.Page.FormField.toObject(message.formFields[j], options);
                                }
                                if (message.symbols && message.symbols.length) {
                                    object.symbols = [];
                                    for (var j = 0; j < message.symbols.length; ++j)
                                        object.symbols[j] = $root.google.cloud.documentai.v1.Document.Page.Symbol.toObject(message.symbols[j], options);
                                }
                                if (message.image != null && message.hasOwnProperty("image"))
                                    object.image = $root.google.cloud.documentai.v1.Document.Page.Image.toObject(message.image, options);
                                if (message.transforms && message.transforms.length) {
                                    object.transforms = [];
                                    for (var j = 0; j < message.transforms.length; ++j)
                                        object.transforms[j] = $root.google.cloud.documentai.v1.Document.Page.Matrix.toObject(message.transforms[j], options);
                                }
                                if (message.detectedBarcodes && message.detectedBarcodes.length) {
                                    object.detectedBarcodes = [];
                                    for (var j = 0; j < message.detectedBarcodes.length; ++j)
                                        object.detectedBarcodes[j] = $root.google.cloud.documentai.v1.Document.Page.DetectedBarcode.toObject(message.detectedBarcodes[j], options);
                                }
                                if (message.provenance != null && message.hasOwnProperty("provenance"))
                                    object.provenance = $root.google.cloud.documentai.v1.Document.Provenance.toObject(message.provenance, options);
                                if (message.imageQualityScores != null && message.hasOwnProperty("imageQualityScores"))
                                    object.imageQualityScores = $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores.toObject(message.imageQualityScores, options);
                                return object;
                            };
    
                            /**
                             * Converts this Page to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Page.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Page
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Page.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page";
                            };
    
                            Page.Dimension = (function() {
    
                                /**
                                 * Properties of a Dimension.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface IDimension
                                 * @property {number|null} [width] Dimension width
                                 * @property {number|null} [height] Dimension height
                                 * @property {string|null} [unit] Dimension unit
                                 */
    
                                /**
                                 * Constructs a new Dimension.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents a Dimension.
                                 * @implements IDimension
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.IDimension=} [properties] Properties to set
                                 */
                                function Dimension(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * Dimension width.
                                 * @member {number} width
                                 * @memberof google.cloud.documentai.v1.Document.Page.Dimension
                                 * @instance
                                 */
                                Dimension.prototype.width = 0;
    
                                /**
                                 * Dimension height.
                                 * @member {number} height
                                 * @memberof google.cloud.documentai.v1.Document.Page.Dimension
                                 * @instance
                                 */
                                Dimension.prototype.height = 0;
    
                                /**
                                 * Dimension unit.
                                 * @member {string} unit
                                 * @memberof google.cloud.documentai.v1.Document.Page.Dimension
                                 * @instance
                                 */
                                Dimension.prototype.unit = "";
    
                                /**
                                 * Creates a new Dimension instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.Dimension
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IDimension=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.Dimension} Dimension instance
                                 */
                                Dimension.create = function create(properties) {
                                    return new Dimension(properties);
                                };
    
                                /**
                                 * Encodes the specified Dimension message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Dimension.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Dimension
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IDimension} message Dimension message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Dimension.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.width != null && Object.hasOwnProperty.call(message, "width"))
                                        writer.uint32(/* id 1, wireType 5 =*/13).float(message.width);
                                    if (message.height != null && Object.hasOwnProperty.call(message, "height"))
                                        writer.uint32(/* id 2, wireType 5 =*/21).float(message.height);
                                    if (message.unit != null && Object.hasOwnProperty.call(message, "unit"))
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.unit);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified Dimension message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Dimension.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Dimension
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IDimension} message Dimension message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Dimension.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a Dimension message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Dimension
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.Dimension} Dimension
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Dimension.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.Dimension();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.width = reader.float();
                                                break;
                                            }
                                        case 2: {
                                                message.height = reader.float();
                                                break;
                                            }
                                        case 3: {
                                                message.unit = reader.string();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a Dimension message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Dimension
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.Dimension} Dimension
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Dimension.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a Dimension message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.Dimension
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                Dimension.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.width != null && message.hasOwnProperty("width"))
                                        if (typeof message.width !== "number")
                                            return "width: number expected";
                                    if (message.height != null && message.hasOwnProperty("height"))
                                        if (typeof message.height !== "number")
                                            return "height: number expected";
                                    if (message.unit != null && message.hasOwnProperty("unit"))
                                        if (!$util.isString(message.unit))
                                            return "unit: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a Dimension message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Dimension
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.Dimension} Dimension
                                 */
                                Dimension.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.Dimension)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.Dimension();
                                    if (object.width != null)
                                        message.width = Number(object.width);
                                    if (object.height != null)
                                        message.height = Number(object.height);
                                    if (object.unit != null)
                                        message.unit = String(object.unit);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a Dimension message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Dimension
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.Dimension} message Dimension
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                Dimension.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.width = 0;
                                        object.height = 0;
                                        object.unit = "";
                                    }
                                    if (message.width != null && message.hasOwnProperty("width"))
                                        object.width = options.json && !isFinite(message.width) ? String(message.width) : message.width;
                                    if (message.height != null && message.hasOwnProperty("height"))
                                        object.height = options.json && !isFinite(message.height) ? String(message.height) : message.height;
                                    if (message.unit != null && message.hasOwnProperty("unit"))
                                        object.unit = message.unit;
                                    return object;
                                };
    
                                /**
                                 * Converts this Dimension to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.Dimension
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                Dimension.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for Dimension
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.Dimension
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                Dimension.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.Dimension";
                                };
    
                                return Dimension;
                            })();
    
                            Page.Image = (function() {
    
                                /**
                                 * Properties of an Image.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface IImage
                                 * @property {Uint8Array|null} [content] Image content
                                 * @property {string|null} [mimeType] Image mimeType
                                 * @property {number|null} [width] Image width
                                 * @property {number|null} [height] Image height
                                 */
    
                                /**
                                 * Constructs a new Image.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents an Image.
                                 * @implements IImage
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.IImage=} [properties] Properties to set
                                 */
                                function Image(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * Image content.
                                 * @member {Uint8Array} content
                                 * @memberof google.cloud.documentai.v1.Document.Page.Image
                                 * @instance
                                 */
                                Image.prototype.content = $util.newBuffer([]);
    
                                /**
                                 * Image mimeType.
                                 * @member {string} mimeType
                                 * @memberof google.cloud.documentai.v1.Document.Page.Image
                                 * @instance
                                 */
                                Image.prototype.mimeType = "";
    
                                /**
                                 * Image width.
                                 * @member {number} width
                                 * @memberof google.cloud.documentai.v1.Document.Page.Image
                                 * @instance
                                 */
                                Image.prototype.width = 0;
    
                                /**
                                 * Image height.
                                 * @member {number} height
                                 * @memberof google.cloud.documentai.v1.Document.Page.Image
                                 * @instance
                                 */
                                Image.prototype.height = 0;
    
                                /**
                                 * Creates a new Image instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.Image
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IImage=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.Image} Image instance
                                 */
                                Image.create = function create(properties) {
                                    return new Image(properties);
                                };
    
                                /**
                                 * Encodes the specified Image message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Image.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Image
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IImage} message Image message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Image.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.content != null && Object.hasOwnProperty.call(message, "content"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.content);
                                    if (message.mimeType != null && Object.hasOwnProperty.call(message, "mimeType"))
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.mimeType);
                                    if (message.width != null && Object.hasOwnProperty.call(message, "width"))
                                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.width);
                                    if (message.height != null && Object.hasOwnProperty.call(message, "height"))
                                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.height);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified Image message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Image.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Image
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IImage} message Image message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Image.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes an Image message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Image
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.Image} Image
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Image.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.Image();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.content = reader.bytes();
                                                break;
                                            }
                                        case 2: {
                                                message.mimeType = reader.string();
                                                break;
                                            }
                                        case 3: {
                                                message.width = reader.int32();
                                                break;
                                            }
                                        case 4: {
                                                message.height = reader.int32();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes an Image message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Image
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.Image} Image
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Image.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies an Image message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.Image
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                Image.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.content != null && message.hasOwnProperty("content"))
                                        if (!(message.content && typeof message.content.length === "number" || $util.isString(message.content)))
                                            return "content: buffer expected";
                                    if (message.mimeType != null && message.hasOwnProperty("mimeType"))
                                        if (!$util.isString(message.mimeType))
                                            return "mimeType: string expected";
                                    if (message.width != null && message.hasOwnProperty("width"))
                                        if (!$util.isInteger(message.width))
                                            return "width: integer expected";
                                    if (message.height != null && message.hasOwnProperty("height"))
                                        if (!$util.isInteger(message.height))
                                            return "height: integer expected";
                                    return null;
                                };
    
                                /**
                                 * Creates an Image message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Image
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.Image} Image
                                 */
                                Image.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.Image)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.Image();
                                    if (object.content != null)
                                        if (typeof object.content === "string")
                                            $util.base64.decode(object.content, message.content = $util.newBuffer($util.base64.length(object.content)), 0);
                                        else if (object.content.length >= 0)
                                            message.content = object.content;
                                    if (object.mimeType != null)
                                        message.mimeType = String(object.mimeType);
                                    if (object.width != null)
                                        message.width = object.width | 0;
                                    if (object.height != null)
                                        message.height = object.height | 0;
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from an Image message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Image
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.Image} message Image
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                Image.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        if (options.bytes === String)
                                            object.content = "";
                                        else {
                                            object.content = [];
                                            if (options.bytes !== Array)
                                                object.content = $util.newBuffer(object.content);
                                        }
                                        object.mimeType = "";
                                        object.width = 0;
                                        object.height = 0;
                                    }
                                    if (message.content != null && message.hasOwnProperty("content"))
                                        object.content = options.bytes === String ? $util.base64.encode(message.content, 0, message.content.length) : options.bytes === Array ? Array.prototype.slice.call(message.content) : message.content;
                                    if (message.mimeType != null && message.hasOwnProperty("mimeType"))
                                        object.mimeType = message.mimeType;
                                    if (message.width != null && message.hasOwnProperty("width"))
                                        object.width = message.width;
                                    if (message.height != null && message.hasOwnProperty("height"))
                                        object.height = message.height;
                                    return object;
                                };
    
                                /**
                                 * Converts this Image to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.Image
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                Image.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for Image
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.Image
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                Image.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.Image";
                                };
    
                                return Image;
                            })();
    
                            Page.Matrix = (function() {
    
                                /**
                                 * Properties of a Matrix.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface IMatrix
                                 * @property {number|null} [rows] Matrix rows
                                 * @property {number|null} [cols] Matrix cols
                                 * @property {number|null} [type] Matrix type
                                 * @property {Uint8Array|null} [data] Matrix data
                                 */
    
                                /**
                                 * Constructs a new Matrix.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents a Matrix.
                                 * @implements IMatrix
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.IMatrix=} [properties] Properties to set
                                 */
                                function Matrix(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * Matrix rows.
                                 * @member {number} rows
                                 * @memberof google.cloud.documentai.v1.Document.Page.Matrix
                                 * @instance
                                 */
                                Matrix.prototype.rows = 0;
    
                                /**
                                 * Matrix cols.
                                 * @member {number} cols
                                 * @memberof google.cloud.documentai.v1.Document.Page.Matrix
                                 * @instance
                                 */
                                Matrix.prototype.cols = 0;
    
                                /**
                                 * Matrix type.
                                 * @member {number} type
                                 * @memberof google.cloud.documentai.v1.Document.Page.Matrix
                                 * @instance
                                 */
                                Matrix.prototype.type = 0;
    
                                /**
                                 * Matrix data.
                                 * @member {Uint8Array} data
                                 * @memberof google.cloud.documentai.v1.Document.Page.Matrix
                                 * @instance
                                 */
                                Matrix.prototype.data = $util.newBuffer([]);
    
                                /**
                                 * Creates a new Matrix instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.Matrix
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IMatrix=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.Matrix} Matrix instance
                                 */
                                Matrix.create = function create(properties) {
                                    return new Matrix(properties);
                                };
    
                                /**
                                 * Encodes the specified Matrix message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Matrix.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Matrix
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IMatrix} message Matrix message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Matrix.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.rows != null && Object.hasOwnProperty.call(message, "rows"))
                                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.rows);
                                    if (message.cols != null && Object.hasOwnProperty.call(message, "cols"))
                                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.cols);
                                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.type);
                                    if (message.data != null && Object.hasOwnProperty.call(message, "data"))
                                        writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.data);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified Matrix message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Matrix.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Matrix
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IMatrix} message Matrix message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Matrix.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a Matrix message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Matrix
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.Matrix} Matrix
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Matrix.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.Matrix();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.rows = reader.int32();
                                                break;
                                            }
                                        case 2: {
                                                message.cols = reader.int32();
                                                break;
                                            }
                                        case 3: {
                                                message.type = reader.int32();
                                                break;
                                            }
                                        case 4: {
                                                message.data = reader.bytes();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a Matrix message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Matrix
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.Matrix} Matrix
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Matrix.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a Matrix message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.Matrix
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                Matrix.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.rows != null && message.hasOwnProperty("rows"))
                                        if (!$util.isInteger(message.rows))
                                            return "rows: integer expected";
                                    if (message.cols != null && message.hasOwnProperty("cols"))
                                        if (!$util.isInteger(message.cols))
                                            return "cols: integer expected";
                                    if (message.type != null && message.hasOwnProperty("type"))
                                        if (!$util.isInteger(message.type))
                                            return "type: integer expected";
                                    if (message.data != null && message.hasOwnProperty("data"))
                                        if (!(message.data && typeof message.data.length === "number" || $util.isString(message.data)))
                                            return "data: buffer expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a Matrix message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Matrix
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.Matrix} Matrix
                                 */
                                Matrix.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.Matrix)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.Matrix();
                                    if (object.rows != null)
                                        message.rows = object.rows | 0;
                                    if (object.cols != null)
                                        message.cols = object.cols | 0;
                                    if (object.type != null)
                                        message.type = object.type | 0;
                                    if (object.data != null)
                                        if (typeof object.data === "string")
                                            $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);
                                        else if (object.data.length >= 0)
                                            message.data = object.data;
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a Matrix message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Matrix
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.Matrix} message Matrix
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                Matrix.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.rows = 0;
                                        object.cols = 0;
                                        object.type = 0;
                                        if (options.bytes === String)
                                            object.data = "";
                                        else {
                                            object.data = [];
                                            if (options.bytes !== Array)
                                                object.data = $util.newBuffer(object.data);
                                        }
                                    }
                                    if (message.rows != null && message.hasOwnProperty("rows"))
                                        object.rows = message.rows;
                                    if (message.cols != null && message.hasOwnProperty("cols"))
                                        object.cols = message.cols;
                                    if (message.type != null && message.hasOwnProperty("type"))
                                        object.type = message.type;
                                    if (message.data != null && message.hasOwnProperty("data"))
                                        object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;
                                    return object;
                                };
    
                                /**
                                 * Converts this Matrix to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.Matrix
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                Matrix.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for Matrix
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.Matrix
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                Matrix.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.Matrix";
                                };
    
                                return Matrix;
                            })();
    
                            Page.Layout = (function() {
    
                                /**
                                 * Properties of a Layout.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface ILayout
                                 * @property {google.cloud.documentai.v1.Document.ITextAnchor|null} [textAnchor] Layout textAnchor
                                 * @property {number|null} [confidence] Layout confidence
                                 * @property {google.cloud.documentai.v1.IBoundingPoly|null} [boundingPoly] Layout boundingPoly
                                 * @property {google.cloud.documentai.v1.Document.Page.Layout.Orientation|null} [orientation] Layout orientation
                                 */
    
                                /**
                                 * Constructs a new Layout.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents a Layout.
                                 * @implements ILayout
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.ILayout=} [properties] Properties to set
                                 */
                                function Layout(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * Layout textAnchor.
                                 * @member {google.cloud.documentai.v1.Document.ITextAnchor|null|undefined} textAnchor
                                 * @memberof google.cloud.documentai.v1.Document.Page.Layout
                                 * @instance
                                 */
                                Layout.prototype.textAnchor = null;
    
                                /**
                                 * Layout confidence.
                                 * @member {number} confidence
                                 * @memberof google.cloud.documentai.v1.Document.Page.Layout
                                 * @instance
                                 */
                                Layout.prototype.confidence = 0;
    
                                /**
                                 * Layout boundingPoly.
                                 * @member {google.cloud.documentai.v1.IBoundingPoly|null|undefined} boundingPoly
                                 * @memberof google.cloud.documentai.v1.Document.Page.Layout
                                 * @instance
                                 */
                                Layout.prototype.boundingPoly = null;
    
                                /**
                                 * Layout orientation.
                                 * @member {google.cloud.documentai.v1.Document.Page.Layout.Orientation} orientation
                                 * @memberof google.cloud.documentai.v1.Document.Page.Layout
                                 * @instance
                                 */
                                Layout.prototype.orientation = 0;
    
                                /**
                                 * Creates a new Layout instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.Layout
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.ILayout=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.Layout} Layout instance
                                 */
                                Layout.create = function create(properties) {
                                    return new Layout(properties);
                                };
    
                                /**
                                 * Encodes the specified Layout message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Layout.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Layout
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.ILayout} message Layout message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Layout.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.textAnchor != null && Object.hasOwnProperty.call(message, "textAnchor"))
                                        $root.google.cloud.documentai.v1.Document.TextAnchor.encode(message.textAnchor, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.confidence != null && Object.hasOwnProperty.call(message, "confidence"))
                                        writer.uint32(/* id 2, wireType 5 =*/21).float(message.confidence);
                                    if (message.boundingPoly != null && Object.hasOwnProperty.call(message, "boundingPoly"))
                                        $root.google.cloud.documentai.v1.BoundingPoly.encode(message.boundingPoly, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                    if (message.orientation != null && Object.hasOwnProperty.call(message, "orientation"))
                                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.orientation);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified Layout message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Layout.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Layout
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.ILayout} message Layout message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Layout.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a Layout message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Layout
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.Layout} Layout
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Layout.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.Layout();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.textAnchor = $root.google.cloud.documentai.v1.Document.TextAnchor.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 2: {
                                                message.confidence = reader.float();
                                                break;
                                            }
                                        case 3: {
                                                message.boundingPoly = $root.google.cloud.documentai.v1.BoundingPoly.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 4: {
                                                message.orientation = reader.int32();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a Layout message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Layout
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.Layout} Layout
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Layout.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a Layout message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.Layout
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                Layout.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.textAnchor != null && message.hasOwnProperty("textAnchor")) {
                                        var error = $root.google.cloud.documentai.v1.Document.TextAnchor.verify(message.textAnchor);
                                        if (error)
                                            return "textAnchor." + error;
                                    }
                                    if (message.confidence != null && message.hasOwnProperty("confidence"))
                                        if (typeof message.confidence !== "number")
                                            return "confidence: number expected";
                                    if (message.boundingPoly != null && message.hasOwnProperty("boundingPoly")) {
                                        var error = $root.google.cloud.documentai.v1.BoundingPoly.verify(message.boundingPoly);
                                        if (error)
                                            return "boundingPoly." + error;
                                    }
                                    if (message.orientation != null && message.hasOwnProperty("orientation"))
                                        switch (message.orientation) {
                                        default:
                                            return "orientation: enum value expected";
                                        case 0:
                                        case 1:
                                        case 2:
                                        case 3:
                                        case 4:
                                            break;
                                        }
                                    return null;
                                };
    
                                /**
                                 * Creates a Layout message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Layout
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.Layout} Layout
                                 */
                                Layout.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.Layout)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.Layout();
                                    if (object.textAnchor != null) {
                                        if (typeof object.textAnchor !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Layout.textAnchor: object expected");
                                        message.textAnchor = $root.google.cloud.documentai.v1.Document.TextAnchor.fromObject(object.textAnchor);
                                    }
                                    if (object.confidence != null)
                                        message.confidence = Number(object.confidence);
                                    if (object.boundingPoly != null) {
                                        if (typeof object.boundingPoly !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Layout.boundingPoly: object expected");
                                        message.boundingPoly = $root.google.cloud.documentai.v1.BoundingPoly.fromObject(object.boundingPoly);
                                    }
                                    switch (object.orientation) {
                                    default:
                                        if (typeof object.orientation === "number") {
                                            message.orientation = object.orientation;
                                            break;
                                        }
                                        break;
                                    case "ORIENTATION_UNSPECIFIED":
                                    case 0:
                                        message.orientation = 0;
                                        break;
                                    case "PAGE_UP":
                                    case 1:
                                        message.orientation = 1;
                                        break;
                                    case "PAGE_RIGHT":
                                    case 2:
                                        message.orientation = 2;
                                        break;
                                    case "PAGE_DOWN":
                                    case 3:
                                        message.orientation = 3;
                                        break;
                                    case "PAGE_LEFT":
                                    case 4:
                                        message.orientation = 4;
                                        break;
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a Layout message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Layout
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.Layout} message Layout
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                Layout.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.textAnchor = null;
                                        object.confidence = 0;
                                        object.boundingPoly = null;
                                        object.orientation = options.enums === String ? "ORIENTATION_UNSPECIFIED" : 0;
                                    }
                                    if (message.textAnchor != null && message.hasOwnProperty("textAnchor"))
                                        object.textAnchor = $root.google.cloud.documentai.v1.Document.TextAnchor.toObject(message.textAnchor, options);
                                    if (message.confidence != null && message.hasOwnProperty("confidence"))
                                        object.confidence = options.json && !isFinite(message.confidence) ? String(message.confidence) : message.confidence;
                                    if (message.boundingPoly != null && message.hasOwnProperty("boundingPoly"))
                                        object.boundingPoly = $root.google.cloud.documentai.v1.BoundingPoly.toObject(message.boundingPoly, options);
                                    if (message.orientation != null && message.hasOwnProperty("orientation"))
                                        object.orientation = options.enums === String ? $root.google.cloud.documentai.v1.Document.Page.Layout.Orientation[message.orientation] === undefined ? message.orientation : $root.google.cloud.documentai.v1.Document.Page.Layout.Orientation[message.orientation] : message.orientation;
                                    return object;
                                };
    
                                /**
                                 * Converts this Layout to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.Layout
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                Layout.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for Layout
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.Layout
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                Layout.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.Layout";
                                };
    
                                /**
                                 * Orientation enum.
                                 * @name google.cloud.documentai.v1.Document.Page.Layout.Orientation
                                 * @enum {number}
                                 * @property {number} ORIENTATION_UNSPECIFIED=0 ORIENTATION_UNSPECIFIED value
                                 * @property {number} PAGE_UP=1 PAGE_UP value
                                 * @property {number} PAGE_RIGHT=2 PAGE_RIGHT value
                                 * @property {number} PAGE_DOWN=3 PAGE_DOWN value
                                 * @property {number} PAGE_LEFT=4 PAGE_LEFT value
                                 */
                                Layout.Orientation = (function() {
                                    var valuesById = {}, values = Object.create(valuesById);
                                    values[valuesById[0] = "ORIENTATION_UNSPECIFIED"] = 0;
                                    values[valuesById[1] = "PAGE_UP"] = 1;
                                    values[valuesById[2] = "PAGE_RIGHT"] = 2;
                                    values[valuesById[3] = "PAGE_DOWN"] = 3;
                                    values[valuesById[4] = "PAGE_LEFT"] = 4;
                                    return values;
                                })();
    
                                return Layout;
                            })();
    
                            Page.Block = (function() {
    
                                /**
                                 * Properties of a Block.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface IBlock
                                 * @property {google.cloud.documentai.v1.Document.Page.ILayout|null} [layout] Block layout
                                 * @property {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>|null} [detectedLanguages] Block detectedLanguages
                                 * @property {google.cloud.documentai.v1.Document.IProvenance|null} [provenance] Block provenance
                                 */
    
                                /**
                                 * Constructs a new Block.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents a Block.
                                 * @implements IBlock
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.IBlock=} [properties] Properties to set
                                 */
                                function Block(properties) {
                                    this.detectedLanguages = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * Block layout.
                                 * @member {google.cloud.documentai.v1.Document.Page.ILayout|null|undefined} layout
                                 * @memberof google.cloud.documentai.v1.Document.Page.Block
                                 * @instance
                                 */
                                Block.prototype.layout = null;
    
                                /**
                                 * Block detectedLanguages.
                                 * @member {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>} detectedLanguages
                                 * @memberof google.cloud.documentai.v1.Document.Page.Block
                                 * @instance
                                 */
                                Block.prototype.detectedLanguages = $util.emptyArray;
    
                                /**
                                 * Block provenance.
                                 * @member {google.cloud.documentai.v1.Document.IProvenance|null|undefined} provenance
                                 * @memberof google.cloud.documentai.v1.Document.Page.Block
                                 * @instance
                                 */
                                Block.prototype.provenance = null;
    
                                /**
                                 * Creates a new Block instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.Block
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IBlock=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.Block} Block instance
                                 */
                                Block.create = function create(properties) {
                                    return new Block(properties);
                                };
    
                                /**
                                 * Encodes the specified Block message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Block.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Block
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IBlock} message Block message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Block.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.layout != null && Object.hasOwnProperty.call(message, "layout"))
                                        $root.google.cloud.documentai.v1.Document.Page.Layout.encode(message.layout, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.detectedLanguages != null && message.detectedLanguages.length)
                                        for (var i = 0; i < message.detectedLanguages.length; ++i)
                                            $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.encode(message.detectedLanguages[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    if (message.provenance != null && Object.hasOwnProperty.call(message, "provenance"))
                                        $root.google.cloud.documentai.v1.Document.Provenance.encode(message.provenance, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified Block message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Block.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Block
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IBlock} message Block message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Block.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a Block message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Block
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.Block} Block
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Block.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.Block();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 2: {
                                                if (!(message.detectedLanguages && message.detectedLanguages.length))
                                                    message.detectedLanguages = [];
                                                message.detectedLanguages.push($root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.decode(reader, reader.uint32()));
                                                break;
                                            }
                                        case 3: {
                                                message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a Block message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Block
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.Block} Block
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Block.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a Block message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.Block
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                Block.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.layout != null && message.hasOwnProperty("layout")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Layout.verify(message.layout);
                                        if (error)
                                            return "layout." + error;
                                    }
                                    if (message.detectedLanguages != null && message.hasOwnProperty("detectedLanguages")) {
                                        if (!Array.isArray(message.detectedLanguages))
                                            return "detectedLanguages: array expected";
                                        for (var i = 0; i < message.detectedLanguages.length; ++i) {
                                            var error = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.verify(message.detectedLanguages[i]);
                                            if (error)
                                                return "detectedLanguages." + error;
                                        }
                                    }
                                    if (message.provenance != null && message.hasOwnProperty("provenance")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Provenance.verify(message.provenance);
                                        if (error)
                                            return "provenance." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a Block message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Block
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.Block} Block
                                 */
                                Block.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.Block)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.Block();
                                    if (object.layout != null) {
                                        if (typeof object.layout !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Block.layout: object expected");
                                        message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.fromObject(object.layout);
                                    }
                                    if (object.detectedLanguages) {
                                        if (!Array.isArray(object.detectedLanguages))
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Block.detectedLanguages: array expected");
                                        message.detectedLanguages = [];
                                        for (var i = 0; i < object.detectedLanguages.length; ++i) {
                                            if (typeof object.detectedLanguages[i] !== "object")
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.Block.detectedLanguages: object expected");
                                            message.detectedLanguages[i] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.fromObject(object.detectedLanguages[i]);
                                        }
                                    }
                                    if (object.provenance != null) {
                                        if (typeof object.provenance !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Block.provenance: object expected");
                                        message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.fromObject(object.provenance);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a Block message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Block
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.Block} message Block
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                Block.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults)
                                        object.detectedLanguages = [];
                                    if (options.defaults) {
                                        object.layout = null;
                                        object.provenance = null;
                                    }
                                    if (message.layout != null && message.hasOwnProperty("layout"))
                                        object.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.toObject(message.layout, options);
                                    if (message.detectedLanguages && message.detectedLanguages.length) {
                                        object.detectedLanguages = [];
                                        for (var j = 0; j < message.detectedLanguages.length; ++j)
                                            object.detectedLanguages[j] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.toObject(message.detectedLanguages[j], options);
                                    }
                                    if (message.provenance != null && message.hasOwnProperty("provenance"))
                                        object.provenance = $root.google.cloud.documentai.v1.Document.Provenance.toObject(message.provenance, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this Block to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.Block
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                Block.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for Block
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.Block
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                Block.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.Block";
                                };
    
                                return Block;
                            })();
    
                            Page.Paragraph = (function() {
    
                                /**
                                 * Properties of a Paragraph.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface IParagraph
                                 * @property {google.cloud.documentai.v1.Document.Page.ILayout|null} [layout] Paragraph layout
                                 * @property {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>|null} [detectedLanguages] Paragraph detectedLanguages
                                 * @property {google.cloud.documentai.v1.Document.IProvenance|null} [provenance] Paragraph provenance
                                 */
    
                                /**
                                 * Constructs a new Paragraph.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents a Paragraph.
                                 * @implements IParagraph
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.IParagraph=} [properties] Properties to set
                                 */
                                function Paragraph(properties) {
                                    this.detectedLanguages = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * Paragraph layout.
                                 * @member {google.cloud.documentai.v1.Document.Page.ILayout|null|undefined} layout
                                 * @memberof google.cloud.documentai.v1.Document.Page.Paragraph
                                 * @instance
                                 */
                                Paragraph.prototype.layout = null;
    
                                /**
                                 * Paragraph detectedLanguages.
                                 * @member {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>} detectedLanguages
                                 * @memberof google.cloud.documentai.v1.Document.Page.Paragraph
                                 * @instance
                                 */
                                Paragraph.prototype.detectedLanguages = $util.emptyArray;
    
                                /**
                                 * Paragraph provenance.
                                 * @member {google.cloud.documentai.v1.Document.IProvenance|null|undefined} provenance
                                 * @memberof google.cloud.documentai.v1.Document.Page.Paragraph
                                 * @instance
                                 */
                                Paragraph.prototype.provenance = null;
    
                                /**
                                 * Creates a new Paragraph instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.Paragraph
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IParagraph=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.Paragraph} Paragraph instance
                                 */
                                Paragraph.create = function create(properties) {
                                    return new Paragraph(properties);
                                };
    
                                /**
                                 * Encodes the specified Paragraph message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Paragraph.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Paragraph
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IParagraph} message Paragraph message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Paragraph.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.layout != null && Object.hasOwnProperty.call(message, "layout"))
                                        $root.google.cloud.documentai.v1.Document.Page.Layout.encode(message.layout, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.detectedLanguages != null && message.detectedLanguages.length)
                                        for (var i = 0; i < message.detectedLanguages.length; ++i)
                                            $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.encode(message.detectedLanguages[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    if (message.provenance != null && Object.hasOwnProperty.call(message, "provenance"))
                                        $root.google.cloud.documentai.v1.Document.Provenance.encode(message.provenance, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified Paragraph message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Paragraph.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Paragraph
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IParagraph} message Paragraph message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Paragraph.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a Paragraph message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Paragraph
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.Paragraph} Paragraph
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Paragraph.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.Paragraph();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 2: {
                                                if (!(message.detectedLanguages && message.detectedLanguages.length))
                                                    message.detectedLanguages = [];
                                                message.detectedLanguages.push($root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.decode(reader, reader.uint32()));
                                                break;
                                            }
                                        case 3: {
                                                message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a Paragraph message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Paragraph
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.Paragraph} Paragraph
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Paragraph.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a Paragraph message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.Paragraph
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                Paragraph.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.layout != null && message.hasOwnProperty("layout")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Layout.verify(message.layout);
                                        if (error)
                                            return "layout." + error;
                                    }
                                    if (message.detectedLanguages != null && message.hasOwnProperty("detectedLanguages")) {
                                        if (!Array.isArray(message.detectedLanguages))
                                            return "detectedLanguages: array expected";
                                        for (var i = 0; i < message.detectedLanguages.length; ++i) {
                                            var error = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.verify(message.detectedLanguages[i]);
                                            if (error)
                                                return "detectedLanguages." + error;
                                        }
                                    }
                                    if (message.provenance != null && message.hasOwnProperty("provenance")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Provenance.verify(message.provenance);
                                        if (error)
                                            return "provenance." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a Paragraph message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Paragraph
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.Paragraph} Paragraph
                                 */
                                Paragraph.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.Paragraph)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.Paragraph();
                                    if (object.layout != null) {
                                        if (typeof object.layout !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Paragraph.layout: object expected");
                                        message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.fromObject(object.layout);
                                    }
                                    if (object.detectedLanguages) {
                                        if (!Array.isArray(object.detectedLanguages))
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Paragraph.detectedLanguages: array expected");
                                        message.detectedLanguages = [];
                                        for (var i = 0; i < object.detectedLanguages.length; ++i) {
                                            if (typeof object.detectedLanguages[i] !== "object")
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.Paragraph.detectedLanguages: object expected");
                                            message.detectedLanguages[i] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.fromObject(object.detectedLanguages[i]);
                                        }
                                    }
                                    if (object.provenance != null) {
                                        if (typeof object.provenance !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Paragraph.provenance: object expected");
                                        message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.fromObject(object.provenance);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a Paragraph message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Paragraph
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.Paragraph} message Paragraph
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                Paragraph.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults)
                                        object.detectedLanguages = [];
                                    if (options.defaults) {
                                        object.layout = null;
                                        object.provenance = null;
                                    }
                                    if (message.layout != null && message.hasOwnProperty("layout"))
                                        object.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.toObject(message.layout, options);
                                    if (message.detectedLanguages && message.detectedLanguages.length) {
                                        object.detectedLanguages = [];
                                        for (var j = 0; j < message.detectedLanguages.length; ++j)
                                            object.detectedLanguages[j] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.toObject(message.detectedLanguages[j], options);
                                    }
                                    if (message.provenance != null && message.hasOwnProperty("provenance"))
                                        object.provenance = $root.google.cloud.documentai.v1.Document.Provenance.toObject(message.provenance, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this Paragraph to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.Paragraph
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                Paragraph.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for Paragraph
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.Paragraph
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                Paragraph.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.Paragraph";
                                };
    
                                return Paragraph;
                            })();
    
                            Page.Line = (function() {
    
                                /**
                                 * Properties of a Line.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface ILine
                                 * @property {google.cloud.documentai.v1.Document.Page.ILayout|null} [layout] Line layout
                                 * @property {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>|null} [detectedLanguages] Line detectedLanguages
                                 * @property {google.cloud.documentai.v1.Document.IProvenance|null} [provenance] Line provenance
                                 */
    
                                /**
                                 * Constructs a new Line.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents a Line.
                                 * @implements ILine
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.ILine=} [properties] Properties to set
                                 */
                                function Line(properties) {
                                    this.detectedLanguages = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * Line layout.
                                 * @member {google.cloud.documentai.v1.Document.Page.ILayout|null|undefined} layout
                                 * @memberof google.cloud.documentai.v1.Document.Page.Line
                                 * @instance
                                 */
                                Line.prototype.layout = null;
    
                                /**
                                 * Line detectedLanguages.
                                 * @member {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>} detectedLanguages
                                 * @memberof google.cloud.documentai.v1.Document.Page.Line
                                 * @instance
                                 */
                                Line.prototype.detectedLanguages = $util.emptyArray;
    
                                /**
                                 * Line provenance.
                                 * @member {google.cloud.documentai.v1.Document.IProvenance|null|undefined} provenance
                                 * @memberof google.cloud.documentai.v1.Document.Page.Line
                                 * @instance
                                 */
                                Line.prototype.provenance = null;
    
                                /**
                                 * Creates a new Line instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.Line
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.ILine=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.Line} Line instance
                                 */
                                Line.create = function create(properties) {
                                    return new Line(properties);
                                };
    
                                /**
                                 * Encodes the specified Line message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Line.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Line
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.ILine} message Line message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Line.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.layout != null && Object.hasOwnProperty.call(message, "layout"))
                                        $root.google.cloud.documentai.v1.Document.Page.Layout.encode(message.layout, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.detectedLanguages != null && message.detectedLanguages.length)
                                        for (var i = 0; i < message.detectedLanguages.length; ++i)
                                            $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.encode(message.detectedLanguages[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    if (message.provenance != null && Object.hasOwnProperty.call(message, "provenance"))
                                        $root.google.cloud.documentai.v1.Document.Provenance.encode(message.provenance, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified Line message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Line.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Line
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.ILine} message Line message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Line.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a Line message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Line
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.Line} Line
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Line.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.Line();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 2: {
                                                if (!(message.detectedLanguages && message.detectedLanguages.length))
                                                    message.detectedLanguages = [];
                                                message.detectedLanguages.push($root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.decode(reader, reader.uint32()));
                                                break;
                                            }
                                        case 3: {
                                                message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a Line message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Line
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.Line} Line
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Line.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a Line message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.Line
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                Line.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.layout != null && message.hasOwnProperty("layout")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Layout.verify(message.layout);
                                        if (error)
                                            return "layout." + error;
                                    }
                                    if (message.detectedLanguages != null && message.hasOwnProperty("detectedLanguages")) {
                                        if (!Array.isArray(message.detectedLanguages))
                                            return "detectedLanguages: array expected";
                                        for (var i = 0; i < message.detectedLanguages.length; ++i) {
                                            var error = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.verify(message.detectedLanguages[i]);
                                            if (error)
                                                return "detectedLanguages." + error;
                                        }
                                    }
                                    if (message.provenance != null && message.hasOwnProperty("provenance")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Provenance.verify(message.provenance);
                                        if (error)
                                            return "provenance." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a Line message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Line
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.Line} Line
                                 */
                                Line.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.Line)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.Line();
                                    if (object.layout != null) {
                                        if (typeof object.layout !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Line.layout: object expected");
                                        message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.fromObject(object.layout);
                                    }
                                    if (object.detectedLanguages) {
                                        if (!Array.isArray(object.detectedLanguages))
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Line.detectedLanguages: array expected");
                                        message.detectedLanguages = [];
                                        for (var i = 0; i < object.detectedLanguages.length; ++i) {
                                            if (typeof object.detectedLanguages[i] !== "object")
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.Line.detectedLanguages: object expected");
                                            message.detectedLanguages[i] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.fromObject(object.detectedLanguages[i]);
                                        }
                                    }
                                    if (object.provenance != null) {
                                        if (typeof object.provenance !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Line.provenance: object expected");
                                        message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.fromObject(object.provenance);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a Line message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Line
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.Line} message Line
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                Line.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults)
                                        object.detectedLanguages = [];
                                    if (options.defaults) {
                                        object.layout = null;
                                        object.provenance = null;
                                    }
                                    if (message.layout != null && message.hasOwnProperty("layout"))
                                        object.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.toObject(message.layout, options);
                                    if (message.detectedLanguages && message.detectedLanguages.length) {
                                        object.detectedLanguages = [];
                                        for (var j = 0; j < message.detectedLanguages.length; ++j)
                                            object.detectedLanguages[j] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.toObject(message.detectedLanguages[j], options);
                                    }
                                    if (message.provenance != null && message.hasOwnProperty("provenance"))
                                        object.provenance = $root.google.cloud.documentai.v1.Document.Provenance.toObject(message.provenance, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this Line to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.Line
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                Line.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for Line
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.Line
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                Line.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.Line";
                                };
    
                                return Line;
                            })();
    
                            Page.Token = (function() {
    
                                /**
                                 * Properties of a Token.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface IToken
                                 * @property {google.cloud.documentai.v1.Document.Page.ILayout|null} [layout] Token layout
                                 * @property {google.cloud.documentai.v1.Document.Page.Token.IDetectedBreak|null} [detectedBreak] Token detectedBreak
                                 * @property {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>|null} [detectedLanguages] Token detectedLanguages
                                 * @property {google.cloud.documentai.v1.Document.IProvenance|null} [provenance] Token provenance
                                 * @property {google.cloud.documentai.v1.Document.Page.Token.IStyleInfo|null} [styleInfo] Token styleInfo
                                 */
    
                                /**
                                 * Constructs a new Token.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents a Token.
                                 * @implements IToken
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.IToken=} [properties] Properties to set
                                 */
                                function Token(properties) {
                                    this.detectedLanguages = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * Token layout.
                                 * @member {google.cloud.documentai.v1.Document.Page.ILayout|null|undefined} layout
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @instance
                                 */
                                Token.prototype.layout = null;
    
                                /**
                                 * Token detectedBreak.
                                 * @member {google.cloud.documentai.v1.Document.Page.Token.IDetectedBreak|null|undefined} detectedBreak
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @instance
                                 */
                                Token.prototype.detectedBreak = null;
    
                                /**
                                 * Token detectedLanguages.
                                 * @member {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>} detectedLanguages
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @instance
                                 */
                                Token.prototype.detectedLanguages = $util.emptyArray;
    
                                /**
                                 * Token provenance.
                                 * @member {google.cloud.documentai.v1.Document.IProvenance|null|undefined} provenance
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @instance
                                 */
                                Token.prototype.provenance = null;
    
                                /**
                                 * Token styleInfo.
                                 * @member {google.cloud.documentai.v1.Document.Page.Token.IStyleInfo|null|undefined} styleInfo
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @instance
                                 */
                                Token.prototype.styleInfo = null;
    
                                /**
                                 * Creates a new Token instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IToken=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.Token} Token instance
                                 */
                                Token.create = function create(properties) {
                                    return new Token(properties);
                                };
    
                                /**
                                 * Encodes the specified Token message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Token.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IToken} message Token message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Token.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.layout != null && Object.hasOwnProperty.call(message, "layout"))
                                        $root.google.cloud.documentai.v1.Document.Page.Layout.encode(message.layout, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.detectedBreak != null && Object.hasOwnProperty.call(message, "detectedBreak"))
                                        $root.google.cloud.documentai.v1.Document.Page.Token.DetectedBreak.encode(message.detectedBreak, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    if (message.detectedLanguages != null && message.detectedLanguages.length)
                                        for (var i = 0; i < message.detectedLanguages.length; ++i)
                                            $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.encode(message.detectedLanguages[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                    if (message.provenance != null && Object.hasOwnProperty.call(message, "provenance"))
                                        $root.google.cloud.documentai.v1.Document.Provenance.encode(message.provenance, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                    if (message.styleInfo != null && Object.hasOwnProperty.call(message, "styleInfo"))
                                        $root.google.cloud.documentai.v1.Document.Page.Token.StyleInfo.encode(message.styleInfo, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified Token message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Token.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IToken} message Token message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Token.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a Token message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.Token} Token
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Token.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.Token();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 2: {
                                                message.detectedBreak = $root.google.cloud.documentai.v1.Document.Page.Token.DetectedBreak.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 3: {
                                                if (!(message.detectedLanguages && message.detectedLanguages.length))
                                                    message.detectedLanguages = [];
                                                message.detectedLanguages.push($root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.decode(reader, reader.uint32()));
                                                break;
                                            }
                                        case 4: {
                                                message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 5: {
                                                message.styleInfo = $root.google.cloud.documentai.v1.Document.Page.Token.StyleInfo.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a Token message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.Token} Token
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Token.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a Token message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                Token.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.layout != null && message.hasOwnProperty("layout")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Layout.verify(message.layout);
                                        if (error)
                                            return "layout." + error;
                                    }
                                    if (message.detectedBreak != null && message.hasOwnProperty("detectedBreak")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Token.DetectedBreak.verify(message.detectedBreak);
                                        if (error)
                                            return "detectedBreak." + error;
                                    }
                                    if (message.detectedLanguages != null && message.hasOwnProperty("detectedLanguages")) {
                                        if (!Array.isArray(message.detectedLanguages))
                                            return "detectedLanguages: array expected";
                                        for (var i = 0; i < message.detectedLanguages.length; ++i) {
                                            var error = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.verify(message.detectedLanguages[i]);
                                            if (error)
                                                return "detectedLanguages." + error;
                                        }
                                    }
                                    if (message.provenance != null && message.hasOwnProperty("provenance")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Provenance.verify(message.provenance);
                                        if (error)
                                            return "provenance." + error;
                                    }
                                    if (message.styleInfo != null && message.hasOwnProperty("styleInfo")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Token.StyleInfo.verify(message.styleInfo);
                                        if (error)
                                            return "styleInfo." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a Token message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.Token} Token
                                 */
                                Token.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.Token)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.Token();
                                    if (object.layout != null) {
                                        if (typeof object.layout !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Token.layout: object expected");
                                        message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.fromObject(object.layout);
                                    }
                                    if (object.detectedBreak != null) {
                                        if (typeof object.detectedBreak !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Token.detectedBreak: object expected");
                                        message.detectedBreak = $root.google.cloud.documentai.v1.Document.Page.Token.DetectedBreak.fromObject(object.detectedBreak);
                                    }
                                    if (object.detectedLanguages) {
                                        if (!Array.isArray(object.detectedLanguages))
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Token.detectedLanguages: array expected");
                                        message.detectedLanguages = [];
                                        for (var i = 0; i < object.detectedLanguages.length; ++i) {
                                            if (typeof object.detectedLanguages[i] !== "object")
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.Token.detectedLanguages: object expected");
                                            message.detectedLanguages[i] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.fromObject(object.detectedLanguages[i]);
                                        }
                                    }
                                    if (object.provenance != null) {
                                        if (typeof object.provenance !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Token.provenance: object expected");
                                        message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.fromObject(object.provenance);
                                    }
                                    if (object.styleInfo != null) {
                                        if (typeof object.styleInfo !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Token.styleInfo: object expected");
                                        message.styleInfo = $root.google.cloud.documentai.v1.Document.Page.Token.StyleInfo.fromObject(object.styleInfo);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a Token message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.Token} message Token
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                Token.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults)
                                        object.detectedLanguages = [];
                                    if (options.defaults) {
                                        object.layout = null;
                                        object.detectedBreak = null;
                                        object.provenance = null;
                                        object.styleInfo = null;
                                    }
                                    if (message.layout != null && message.hasOwnProperty("layout"))
                                        object.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.toObject(message.layout, options);
                                    if (message.detectedBreak != null && message.hasOwnProperty("detectedBreak"))
                                        object.detectedBreak = $root.google.cloud.documentai.v1.Document.Page.Token.DetectedBreak.toObject(message.detectedBreak, options);
                                    if (message.detectedLanguages && message.detectedLanguages.length) {
                                        object.detectedLanguages = [];
                                        for (var j = 0; j < message.detectedLanguages.length; ++j)
                                            object.detectedLanguages[j] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.toObject(message.detectedLanguages[j], options);
                                    }
                                    if (message.provenance != null && message.hasOwnProperty("provenance"))
                                        object.provenance = $root.google.cloud.documentai.v1.Document.Provenance.toObject(message.provenance, options);
                                    if (message.styleInfo != null && message.hasOwnProperty("styleInfo"))
                                        object.styleInfo = $root.google.cloud.documentai.v1.Document.Page.Token.StyleInfo.toObject(message.styleInfo, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this Token to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                Token.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for Token
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                Token.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.Token";
                                };
    
                                Token.DetectedBreak = (function() {
    
                                    /**
                                     * Properties of a DetectedBreak.
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token
                                     * @interface IDetectedBreak
                                     * @property {google.cloud.documentai.v1.Document.Page.Token.DetectedBreak.Type|null} [type] DetectedBreak type
                                     */
    
                                    /**
                                     * Constructs a new DetectedBreak.
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token
                                     * @classdesc Represents a DetectedBreak.
                                     * @implements IDetectedBreak
                                     * @constructor
                                     * @param {google.cloud.documentai.v1.Document.Page.Token.IDetectedBreak=} [properties] Properties to set
                                     */
                                    function DetectedBreak(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }
    
                                    /**
                                     * DetectedBreak type.
                                     * @member {google.cloud.documentai.v1.Document.Page.Token.DetectedBreak.Type} type
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.DetectedBreak
                                     * @instance
                                     */
                                    DetectedBreak.prototype.type = 0;
    
                                    /**
                                     * Creates a new DetectedBreak instance using the specified properties.
                                     * @function create
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.DetectedBreak
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.Token.IDetectedBreak=} [properties] Properties to set
                                     * @returns {google.cloud.documentai.v1.Document.Page.Token.DetectedBreak} DetectedBreak instance
                                     */
                                    DetectedBreak.create = function create(properties) {
                                        return new DetectedBreak(properties);
                                    };
    
                                    /**
                                     * Encodes the specified DetectedBreak message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Token.DetectedBreak.verify|verify} messages.
                                     * @function encode
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.DetectedBreak
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.Token.IDetectedBreak} message DetectedBreak message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    DetectedBreak.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                                        return writer;
                                    };
    
                                    /**
                                     * Encodes the specified DetectedBreak message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Token.DetectedBreak.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.DetectedBreak
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.Token.IDetectedBreak} message DetectedBreak message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    DetectedBreak.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };
    
                                    /**
                                     * Decodes a DetectedBreak message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.DetectedBreak
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {google.cloud.documentai.v1.Document.Page.Token.DetectedBreak} DetectedBreak
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    DetectedBreak.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.Token.DetectedBreak();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                            case 1: {
                                                    message.type = reader.int32();
                                                    break;
                                                }
                                            default:
                                                reader.skipType(tag & 7);
                                                break;
                                            }
                                        }
                                        return message;
                                    };
    
                                    /**
                                     * Decodes a DetectedBreak message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.DetectedBreak
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {google.cloud.documentai.v1.Document.Page.Token.DetectedBreak} DetectedBreak
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    DetectedBreak.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };
    
                                    /**
                                     * Verifies a DetectedBreak message.
                                     * @function verify
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.DetectedBreak
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    DetectedBreak.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.type != null && message.hasOwnProperty("type"))
                                            switch (message.type) {
                                            default:
                                                return "type: enum value expected";
                                            case 0:
                                            case 1:
                                            case 2:
                                            case 3:
                                                break;
                                            }
                                        return null;
                                    };
    
                                    /**
                                     * Creates a DetectedBreak message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.DetectedBreak
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {google.cloud.documentai.v1.Document.Page.Token.DetectedBreak} DetectedBreak
                                     */
                                    DetectedBreak.fromObject = function fromObject(object) {
                                        if (object instanceof $root.google.cloud.documentai.v1.Document.Page.Token.DetectedBreak)
                                            return object;
                                        var message = new $root.google.cloud.documentai.v1.Document.Page.Token.DetectedBreak();
                                        switch (object.type) {
                                        default:
                                            if (typeof object.type === "number") {
                                                message.type = object.type;
                                                break;
                                            }
                                            break;
                                        case "TYPE_UNSPECIFIED":
                                        case 0:
                                            message.type = 0;
                                            break;
                                        case "SPACE":
                                        case 1:
                                            message.type = 1;
                                            break;
                                        case "WIDE_SPACE":
                                        case 2:
                                            message.type = 2;
                                            break;
                                        case "HYPHEN":
                                        case 3:
                                            message.type = 3;
                                            break;
                                        }
                                        return message;
                                    };
    
                                    /**
                                     * Creates a plain object from a DetectedBreak message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.DetectedBreak
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.Token.DetectedBreak} message DetectedBreak
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    DetectedBreak.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults)
                                            object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                                        if (message.type != null && message.hasOwnProperty("type"))
                                            object.type = options.enums === String ? $root.google.cloud.documentai.v1.Document.Page.Token.DetectedBreak.Type[message.type] === undefined ? message.type : $root.google.cloud.documentai.v1.Document.Page.Token.DetectedBreak.Type[message.type] : message.type;
                                        return object;
                                    };
    
                                    /**
                                     * Converts this DetectedBreak to JSON.
                                     * @function toJSON
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.DetectedBreak
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    DetectedBreak.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };
    
                                    /**
                                     * Gets the default type url for DetectedBreak
                                     * @function getTypeUrl
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.DetectedBreak
                                     * @static
                                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                     * @returns {string} The default type url
                                     */
                                    DetectedBreak.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                        if (typeUrlPrefix === undefined) {
                                            typeUrlPrefix = "type.googleapis.com";
                                        }
                                        return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.Token.DetectedBreak";
                                    };
    
                                    /**
                                     * Type enum.
                                     * @name google.cloud.documentai.v1.Document.Page.Token.DetectedBreak.Type
                                     * @enum {number}
                                     * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
                                     * @property {number} SPACE=1 SPACE value
                                     * @property {number} WIDE_SPACE=2 WIDE_SPACE value
                                     * @property {number} HYPHEN=3 HYPHEN value
                                     */
                                    DetectedBreak.Type = (function() {
                                        var valuesById = {}, values = Object.create(valuesById);
                                        values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                                        values[valuesById[1] = "SPACE"] = 1;
                                        values[valuesById[2] = "WIDE_SPACE"] = 2;
                                        values[valuesById[3] = "HYPHEN"] = 3;
                                        return values;
                                    })();
    
                                    return DetectedBreak;
                                })();
    
                                Token.StyleInfo = (function() {
    
                                    /**
                                     * Properties of a StyleInfo.
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token
                                     * @interface IStyleInfo
                                     * @property {number|null} [fontSize] StyleInfo fontSize
                                     * @property {number|null} [pixelFontSize] StyleInfo pixelFontSize
                                     * @property {number|null} [letterSpacing] StyleInfo letterSpacing
                                     * @property {string|null} [fontType] StyleInfo fontType
                                     * @property {boolean|null} [bold] StyleInfo bold
                                     * @property {boolean|null} [italic] StyleInfo italic
                                     * @property {boolean|null} [underlined] StyleInfo underlined
                                     * @property {boolean|null} [strikeout] StyleInfo strikeout
                                     * @property {boolean|null} [subscript] StyleInfo subscript
                                     * @property {boolean|null} [superscript] StyleInfo superscript
                                     * @property {boolean|null} [smallcaps] StyleInfo smallcaps
                                     * @property {number|null} [fontWeight] StyleInfo fontWeight
                                     * @property {boolean|null} [handwritten] StyleInfo handwritten
                                     * @property {google.type.IColor|null} [textColor] StyleInfo textColor
                                     * @property {google.type.IColor|null} [backgroundColor] StyleInfo backgroundColor
                                     */
    
                                    /**
                                     * Constructs a new StyleInfo.
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token
                                     * @classdesc Represents a StyleInfo.
                                     * @implements IStyleInfo
                                     * @constructor
                                     * @param {google.cloud.documentai.v1.Document.Page.Token.IStyleInfo=} [properties] Properties to set
                                     */
                                    function StyleInfo(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }
    
                                    /**
                                     * StyleInfo fontSize.
                                     * @member {number} fontSize
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.StyleInfo
                                     * @instance
                                     */
                                    StyleInfo.prototype.fontSize = 0;
    
                                    /**
                                     * StyleInfo pixelFontSize.
                                     * @member {number} pixelFontSize
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.StyleInfo
                                     * @instance
                                     */
                                    StyleInfo.prototype.pixelFontSize = 0;
    
                                    /**
                                     * StyleInfo letterSpacing.
                                     * @member {number} letterSpacing
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.StyleInfo
                                     * @instance
                                     */
                                    StyleInfo.prototype.letterSpacing = 0;
    
                                    /**
                                     * StyleInfo fontType.
                                     * @member {string} fontType
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.StyleInfo
                                     * @instance
                                     */
                                    StyleInfo.prototype.fontType = "";
    
                                    /**
                                     * StyleInfo bold.
                                     * @member {boolean} bold
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.StyleInfo
                                     * @instance
                                     */
                                    StyleInfo.prototype.bold = false;
    
                                    /**
                                     * StyleInfo italic.
                                     * @member {boolean} italic
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.StyleInfo
                                     * @instance
                                     */
                                    StyleInfo.prototype.italic = false;
    
                                    /**
                                     * StyleInfo underlined.
                                     * @member {boolean} underlined
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.StyleInfo
                                     * @instance
                                     */
                                    StyleInfo.prototype.underlined = false;
    
                                    /**
                                     * StyleInfo strikeout.
                                     * @member {boolean} strikeout
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.StyleInfo
                                     * @instance
                                     */
                                    StyleInfo.prototype.strikeout = false;
    
                                    /**
                                     * StyleInfo subscript.
                                     * @member {boolean} subscript
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.StyleInfo
                                     * @instance
                                     */
                                    StyleInfo.prototype.subscript = false;
    
                                    /**
                                     * StyleInfo superscript.
                                     * @member {boolean} superscript
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.StyleInfo
                                     * @instance
                                     */
                                    StyleInfo.prototype.superscript = false;
    
                                    /**
                                     * StyleInfo smallcaps.
                                     * @member {boolean} smallcaps
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.StyleInfo
                                     * @instance
                                     */
                                    StyleInfo.prototype.smallcaps = false;
    
                                    /**
                                     * StyleInfo fontWeight.
                                     * @member {number} fontWeight
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.StyleInfo
                                     * @instance
                                     */
                                    StyleInfo.prototype.fontWeight = 0;
    
                                    /**
                                     * StyleInfo handwritten.
                                     * @member {boolean} handwritten
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.StyleInfo
                                     * @instance
                                     */
                                    StyleInfo.prototype.handwritten = false;
    
                                    /**
                                     * StyleInfo textColor.
                                     * @member {google.type.IColor|null|undefined} textColor
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.StyleInfo
                                     * @instance
                                     */
                                    StyleInfo.prototype.textColor = null;
    
                                    /**
                                     * StyleInfo backgroundColor.
                                     * @member {google.type.IColor|null|undefined} backgroundColor
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.StyleInfo
                                     * @instance
                                     */
                                    StyleInfo.prototype.backgroundColor = null;
    
                                    /**
                                     * Creates a new StyleInfo instance using the specified properties.
                                     * @function create
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.StyleInfo
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.Token.IStyleInfo=} [properties] Properties to set
                                     * @returns {google.cloud.documentai.v1.Document.Page.Token.StyleInfo} StyleInfo instance
                                     */
                                    StyleInfo.create = function create(properties) {
                                        return new StyleInfo(properties);
                                    };
    
                                    /**
                                     * Encodes the specified StyleInfo message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Token.StyleInfo.verify|verify} messages.
                                     * @function encode
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.StyleInfo
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.Token.IStyleInfo} message StyleInfo message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    StyleInfo.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.fontSize != null && Object.hasOwnProperty.call(message, "fontSize"))
                                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.fontSize);
                                        if (message.pixelFontSize != null && Object.hasOwnProperty.call(message, "pixelFontSize"))
                                            writer.uint32(/* id 2, wireType 1 =*/17).double(message.pixelFontSize);
                                        if (message.letterSpacing != null && Object.hasOwnProperty.call(message, "letterSpacing"))
                                            writer.uint32(/* id 3, wireType 1 =*/25).double(message.letterSpacing);
                                        if (message.fontType != null && Object.hasOwnProperty.call(message, "fontType"))
                                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.fontType);
                                        if (message.bold != null && Object.hasOwnProperty.call(message, "bold"))
                                            writer.uint32(/* id 5, wireType 0 =*/40).bool(message.bold);
                                        if (message.italic != null && Object.hasOwnProperty.call(message, "italic"))
                                            writer.uint32(/* id 6, wireType 0 =*/48).bool(message.italic);
                                        if (message.underlined != null && Object.hasOwnProperty.call(message, "underlined"))
                                            writer.uint32(/* id 7, wireType 0 =*/56).bool(message.underlined);
                                        if (message.strikeout != null && Object.hasOwnProperty.call(message, "strikeout"))
                                            writer.uint32(/* id 8, wireType 0 =*/64).bool(message.strikeout);
                                        if (message.subscript != null && Object.hasOwnProperty.call(message, "subscript"))
                                            writer.uint32(/* id 9, wireType 0 =*/72).bool(message.subscript);
                                        if (message.superscript != null && Object.hasOwnProperty.call(message, "superscript"))
                                            writer.uint32(/* id 10, wireType 0 =*/80).bool(message.superscript);
                                        if (message.smallcaps != null && Object.hasOwnProperty.call(message, "smallcaps"))
                                            writer.uint32(/* id 11, wireType 0 =*/88).bool(message.smallcaps);
                                        if (message.fontWeight != null && Object.hasOwnProperty.call(message, "fontWeight"))
                                            writer.uint32(/* id 12, wireType 0 =*/96).int32(message.fontWeight);
                                        if (message.handwritten != null && Object.hasOwnProperty.call(message, "handwritten"))
                                            writer.uint32(/* id 13, wireType 0 =*/104).bool(message.handwritten);
                                        if (message.textColor != null && Object.hasOwnProperty.call(message, "textColor"))
                                            $root.google.type.Color.encode(message.textColor, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                                        if (message.backgroundColor != null && Object.hasOwnProperty.call(message, "backgroundColor"))
                                            $root.google.type.Color.encode(message.backgroundColor, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                                        return writer;
                                    };
    
                                    /**
                                     * Encodes the specified StyleInfo message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Token.StyleInfo.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.StyleInfo
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.Token.IStyleInfo} message StyleInfo message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    StyleInfo.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };
    
                                    /**
                                     * Decodes a StyleInfo message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.StyleInfo
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {google.cloud.documentai.v1.Document.Page.Token.StyleInfo} StyleInfo
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    StyleInfo.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.Token.StyleInfo();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                            case 1: {
                                                    message.fontSize = reader.int32();
                                                    break;
                                                }
                                            case 2: {
                                                    message.pixelFontSize = reader.double();
                                                    break;
                                                }
                                            case 3: {
                                                    message.letterSpacing = reader.double();
                                                    break;
                                                }
                                            case 4: {
                                                    message.fontType = reader.string();
                                                    break;
                                                }
                                            case 5: {
                                                    message.bold = reader.bool();
                                                    break;
                                                }
                                            case 6: {
                                                    message.italic = reader.bool();
                                                    break;
                                                }
                                            case 7: {
                                                    message.underlined = reader.bool();
                                                    break;
                                                }
                                            case 8: {
                                                    message.strikeout = reader.bool();
                                                    break;
                                                }
                                            case 9: {
                                                    message.subscript = reader.bool();
                                                    break;
                                                }
                                            case 10: {
                                                    message.superscript = reader.bool();
                                                    break;
                                                }
                                            case 11: {
                                                    message.smallcaps = reader.bool();
                                                    break;
                                                }
                                            case 12: {
                                                    message.fontWeight = reader.int32();
                                                    break;
                                                }
                                            case 13: {
                                                    message.handwritten = reader.bool();
                                                    break;
                                                }
                                            case 14: {
                                                    message.textColor = $root.google.type.Color.decode(reader, reader.uint32());
                                                    break;
                                                }
                                            case 15: {
                                                    message.backgroundColor = $root.google.type.Color.decode(reader, reader.uint32());
                                                    break;
                                                }
                                            default:
                                                reader.skipType(tag & 7);
                                                break;
                                            }
                                        }
                                        return message;
                                    };
    
                                    /**
                                     * Decodes a StyleInfo message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.StyleInfo
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {google.cloud.documentai.v1.Document.Page.Token.StyleInfo} StyleInfo
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    StyleInfo.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };
    
                                    /**
                                     * Verifies a StyleInfo message.
                                     * @function verify
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.StyleInfo
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    StyleInfo.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.fontSize != null && message.hasOwnProperty("fontSize"))
                                            if (!$util.isInteger(message.fontSize))
                                                return "fontSize: integer expected";
                                        if (message.pixelFontSize != null && message.hasOwnProperty("pixelFontSize"))
                                            if (typeof message.pixelFontSize !== "number")
                                                return "pixelFontSize: number expected";
                                        if (message.letterSpacing != null && message.hasOwnProperty("letterSpacing"))
                                            if (typeof message.letterSpacing !== "number")
                                                return "letterSpacing: number expected";
                                        if (message.fontType != null && message.hasOwnProperty("fontType"))
                                            if (!$util.isString(message.fontType))
                                                return "fontType: string expected";
                                        if (message.bold != null && message.hasOwnProperty("bold"))
                                            if (typeof message.bold !== "boolean")
                                                return "bold: boolean expected";
                                        if (message.italic != null && message.hasOwnProperty("italic"))
                                            if (typeof message.italic !== "boolean")
                                                return "italic: boolean expected";
                                        if (message.underlined != null && message.hasOwnProperty("underlined"))
                                            if (typeof message.underlined !== "boolean")
                                                return "underlined: boolean expected";
                                        if (message.strikeout != null && message.hasOwnProperty("strikeout"))
                                            if (typeof message.strikeout !== "boolean")
                                                return "strikeout: boolean expected";
                                        if (message.subscript != null && message.hasOwnProperty("subscript"))
                                            if (typeof message.subscript !== "boolean")
                                                return "subscript: boolean expected";
                                        if (message.superscript != null && message.hasOwnProperty("superscript"))
                                            if (typeof message.superscript !== "boolean")
                                                return "superscript: boolean expected";
                                        if (message.smallcaps != null && message.hasOwnProperty("smallcaps"))
                                            if (typeof message.smallcaps !== "boolean")
                                                return "smallcaps: boolean expected";
                                        if (message.fontWeight != null && message.hasOwnProperty("fontWeight"))
                                            if (!$util.isInteger(message.fontWeight))
                                                return "fontWeight: integer expected";
                                        if (message.handwritten != null && message.hasOwnProperty("handwritten"))
                                            if (typeof message.handwritten !== "boolean")
                                                return "handwritten: boolean expected";
                                        if (message.textColor != null && message.hasOwnProperty("textColor")) {
                                            var error = $root.google.type.Color.verify(message.textColor);
                                            if (error)
                                                return "textColor." + error;
                                        }
                                        if (message.backgroundColor != null && message.hasOwnProperty("backgroundColor")) {
                                            var error = $root.google.type.Color.verify(message.backgroundColor);
                                            if (error)
                                                return "backgroundColor." + error;
                                        }
                                        return null;
                                    };
    
                                    /**
                                     * Creates a StyleInfo message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.StyleInfo
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {google.cloud.documentai.v1.Document.Page.Token.StyleInfo} StyleInfo
                                     */
                                    StyleInfo.fromObject = function fromObject(object) {
                                        if (object instanceof $root.google.cloud.documentai.v1.Document.Page.Token.StyleInfo)
                                            return object;
                                        var message = new $root.google.cloud.documentai.v1.Document.Page.Token.StyleInfo();
                                        if (object.fontSize != null)
                                            message.fontSize = object.fontSize | 0;
                                        if (object.pixelFontSize != null)
                                            message.pixelFontSize = Number(object.pixelFontSize);
                                        if (object.letterSpacing != null)
                                            message.letterSpacing = Number(object.letterSpacing);
                                        if (object.fontType != null)
                                            message.fontType = String(object.fontType);
                                        if (object.bold != null)
                                            message.bold = Boolean(object.bold);
                                        if (object.italic != null)
                                            message.italic = Boolean(object.italic);
                                        if (object.underlined != null)
                                            message.underlined = Boolean(object.underlined);
                                        if (object.strikeout != null)
                                            message.strikeout = Boolean(object.strikeout);
                                        if (object.subscript != null)
                                            message.subscript = Boolean(object.subscript);
                                        if (object.superscript != null)
                                            message.superscript = Boolean(object.superscript);
                                        if (object.smallcaps != null)
                                            message.smallcaps = Boolean(object.smallcaps);
                                        if (object.fontWeight != null)
                                            message.fontWeight = object.fontWeight | 0;
                                        if (object.handwritten != null)
                                            message.handwritten = Boolean(object.handwritten);
                                        if (object.textColor != null) {
                                            if (typeof object.textColor !== "object")
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.Token.StyleInfo.textColor: object expected");
                                            message.textColor = $root.google.type.Color.fromObject(object.textColor);
                                        }
                                        if (object.backgroundColor != null) {
                                            if (typeof object.backgroundColor !== "object")
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.Token.StyleInfo.backgroundColor: object expected");
                                            message.backgroundColor = $root.google.type.Color.fromObject(object.backgroundColor);
                                        }
                                        return message;
                                    };
    
                                    /**
                                     * Creates a plain object from a StyleInfo message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.StyleInfo
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.Token.StyleInfo} message StyleInfo
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    StyleInfo.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.fontSize = 0;
                                            object.pixelFontSize = 0;
                                            object.letterSpacing = 0;
                                            object.fontType = "";
                                            object.bold = false;
                                            object.italic = false;
                                            object.underlined = false;
                                            object.strikeout = false;
                                            object.subscript = false;
                                            object.superscript = false;
                                            object.smallcaps = false;
                                            object.fontWeight = 0;
                                            object.handwritten = false;
                                            object.textColor = null;
                                            object.backgroundColor = null;
                                        }
                                        if (message.fontSize != null && message.hasOwnProperty("fontSize"))
                                            object.fontSize = message.fontSize;
                                        if (message.pixelFontSize != null && message.hasOwnProperty("pixelFontSize"))
                                            object.pixelFontSize = options.json && !isFinite(message.pixelFontSize) ? String(message.pixelFontSize) : message.pixelFontSize;
                                        if (message.letterSpacing != null && message.hasOwnProperty("letterSpacing"))
                                            object.letterSpacing = options.json && !isFinite(message.letterSpacing) ? String(message.letterSpacing) : message.letterSpacing;
                                        if (message.fontType != null && message.hasOwnProperty("fontType"))
                                            object.fontType = message.fontType;
                                        if (message.bold != null && message.hasOwnProperty("bold"))
                                            object.bold = message.bold;
                                        if (message.italic != null && message.hasOwnProperty("italic"))
                                            object.italic = message.italic;
                                        if (message.underlined != null && message.hasOwnProperty("underlined"))
                                            object.underlined = message.underlined;
                                        if (message.strikeout != null && message.hasOwnProperty("strikeout"))
                                            object.strikeout = message.strikeout;
                                        if (message.subscript != null && message.hasOwnProperty("subscript"))
                                            object.subscript = message.subscript;
                                        if (message.superscript != null && message.hasOwnProperty("superscript"))
                                            object.superscript = message.superscript;
                                        if (message.smallcaps != null && message.hasOwnProperty("smallcaps"))
                                            object.smallcaps = message.smallcaps;
                                        if (message.fontWeight != null && message.hasOwnProperty("fontWeight"))
                                            object.fontWeight = message.fontWeight;
                                        if (message.handwritten != null && message.hasOwnProperty("handwritten"))
                                            object.handwritten = message.handwritten;
                                        if (message.textColor != null && message.hasOwnProperty("textColor"))
                                            object.textColor = $root.google.type.Color.toObject(message.textColor, options);
                                        if (message.backgroundColor != null && message.hasOwnProperty("backgroundColor"))
                                            object.backgroundColor = $root.google.type.Color.toObject(message.backgroundColor, options);
                                        return object;
                                    };
    
                                    /**
                                     * Converts this StyleInfo to JSON.
                                     * @function toJSON
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.StyleInfo
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    StyleInfo.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };
    
                                    /**
                                     * Gets the default type url for StyleInfo
                                     * @function getTypeUrl
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.StyleInfo
                                     * @static
                                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                     * @returns {string} The default type url
                                     */
                                    StyleInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                        if (typeUrlPrefix === undefined) {
                                            typeUrlPrefix = "type.googleapis.com";
                                        }
                                        return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.Token.StyleInfo";
                                    };
    
                                    return StyleInfo;
                                })();
    
                                return Token;
                            })();
    
                            Page.Symbol = (function() {
    
                                /**
                                 * Properties of a Symbol.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface ISymbol
                                 * @property {google.cloud.documentai.v1.Document.Page.ILayout|null} [layout] Symbol layout
                                 * @property {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>|null} [detectedLanguages] Symbol detectedLanguages
                                 */
    
                                /**
                                 * Constructs a new Symbol.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents a Symbol.
                                 * @implements ISymbol
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.ISymbol=} [properties] Properties to set
                                 */
                                function Symbol(properties) {
                                    this.detectedLanguages = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * Symbol layout.
                                 * @member {google.cloud.documentai.v1.Document.Page.ILayout|null|undefined} layout
                                 * @memberof google.cloud.documentai.v1.Document.Page.Symbol
                                 * @instance
                                 */
                                Symbol.prototype.layout = null;
    
                                /**
                                 * Symbol detectedLanguages.
                                 * @member {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>} detectedLanguages
                                 * @memberof google.cloud.documentai.v1.Document.Page.Symbol
                                 * @instance
                                 */
                                Symbol.prototype.detectedLanguages = $util.emptyArray;
    
                                /**
                                 * Creates a new Symbol instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.Symbol
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.ISymbol=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.Symbol} Symbol instance
                                 */
                                Symbol.create = function create(properties) {
                                    return new Symbol(properties);
                                };
    
                                /**
                                 * Encodes the specified Symbol message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Symbol.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Symbol
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.ISymbol} message Symbol message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Symbol.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.layout != null && Object.hasOwnProperty.call(message, "layout"))
                                        $root.google.cloud.documentai.v1.Document.Page.Layout.encode(message.layout, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.detectedLanguages != null && message.detectedLanguages.length)
                                        for (var i = 0; i < message.detectedLanguages.length; ++i)
                                            $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.encode(message.detectedLanguages[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified Symbol message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Symbol.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Symbol
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.ISymbol} message Symbol message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Symbol.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a Symbol message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Symbol
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.Symbol} Symbol
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Symbol.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.Symbol();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 2: {
                                                if (!(message.detectedLanguages && message.detectedLanguages.length))
                                                    message.detectedLanguages = [];
                                                message.detectedLanguages.push($root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.decode(reader, reader.uint32()));
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a Symbol message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Symbol
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.Symbol} Symbol
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Symbol.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a Symbol message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.Symbol
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                Symbol.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.layout != null && message.hasOwnProperty("layout")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Layout.verify(message.layout);
                                        if (error)
                                            return "layout." + error;
                                    }
                                    if (message.detectedLanguages != null && message.hasOwnProperty("detectedLanguages")) {
                                        if (!Array.isArray(message.detectedLanguages))
                                            return "detectedLanguages: array expected";
                                        for (var i = 0; i < message.detectedLanguages.length; ++i) {
                                            var error = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.verify(message.detectedLanguages[i]);
                                            if (error)
                                                return "detectedLanguages." + error;
                                        }
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a Symbol message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Symbol
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.Symbol} Symbol
                                 */
                                Symbol.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.Symbol)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.Symbol();
                                    if (object.layout != null) {
                                        if (typeof object.layout !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Symbol.layout: object expected");
                                        message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.fromObject(object.layout);
                                    }
                                    if (object.detectedLanguages) {
                                        if (!Array.isArray(object.detectedLanguages))
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Symbol.detectedLanguages: array expected");
                                        message.detectedLanguages = [];
                                        for (var i = 0; i < object.detectedLanguages.length; ++i) {
                                            if (typeof object.detectedLanguages[i] !== "object")
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.Symbol.detectedLanguages: object expected");
                                            message.detectedLanguages[i] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.fromObject(object.detectedLanguages[i]);
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a Symbol message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Symbol
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.Symbol} message Symbol
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                Symbol.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults)
                                        object.detectedLanguages = [];
                                    if (options.defaults)
                                        object.layout = null;
                                    if (message.layout != null && message.hasOwnProperty("layout"))
                                        object.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.toObject(message.layout, options);
                                    if (message.detectedLanguages && message.detectedLanguages.length) {
                                        object.detectedLanguages = [];
                                        for (var j = 0; j < message.detectedLanguages.length; ++j)
                                            object.detectedLanguages[j] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.toObject(message.detectedLanguages[j], options);
                                    }
                                    return object;
                                };
    
                                /**
                                 * Converts this Symbol to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.Symbol
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                Symbol.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for Symbol
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.Symbol
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                Symbol.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.Symbol";
                                };
    
                                return Symbol;
                            })();
    
                            Page.VisualElement = (function() {
    
                                /**
                                 * Properties of a VisualElement.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface IVisualElement
                                 * @property {google.cloud.documentai.v1.Document.Page.ILayout|null} [layout] VisualElement layout
                                 * @property {string|null} [type] VisualElement type
                                 * @property {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>|null} [detectedLanguages] VisualElement detectedLanguages
                                 */
    
                                /**
                                 * Constructs a new VisualElement.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents a VisualElement.
                                 * @implements IVisualElement
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.IVisualElement=} [properties] Properties to set
                                 */
                                function VisualElement(properties) {
                                    this.detectedLanguages = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * VisualElement layout.
                                 * @member {google.cloud.documentai.v1.Document.Page.ILayout|null|undefined} layout
                                 * @memberof google.cloud.documentai.v1.Document.Page.VisualElement
                                 * @instance
                                 */
                                VisualElement.prototype.layout = null;
    
                                /**
                                 * VisualElement type.
                                 * @member {string} type
                                 * @memberof google.cloud.documentai.v1.Document.Page.VisualElement
                                 * @instance
                                 */
                                VisualElement.prototype.type = "";
    
                                /**
                                 * VisualElement detectedLanguages.
                                 * @member {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>} detectedLanguages
                                 * @memberof google.cloud.documentai.v1.Document.Page.VisualElement
                                 * @instance
                                 */
                                VisualElement.prototype.detectedLanguages = $util.emptyArray;
    
                                /**
                                 * Creates a new VisualElement instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.VisualElement
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IVisualElement=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.VisualElement} VisualElement instance
                                 */
                                VisualElement.create = function create(properties) {
                                    return new VisualElement(properties);
                                };
    
                                /**
                                 * Encodes the specified VisualElement message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.VisualElement.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.VisualElement
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IVisualElement} message VisualElement message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                VisualElement.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.layout != null && Object.hasOwnProperty.call(message, "layout"))
                                        $root.google.cloud.documentai.v1.Document.Page.Layout.encode(message.layout, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.type);
                                    if (message.detectedLanguages != null && message.detectedLanguages.length)
                                        for (var i = 0; i < message.detectedLanguages.length; ++i)
                                            $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.encode(message.detectedLanguages[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified VisualElement message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.VisualElement.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.VisualElement
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IVisualElement} message VisualElement message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                VisualElement.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a VisualElement message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.VisualElement
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.VisualElement} VisualElement
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                VisualElement.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.VisualElement();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 2: {
                                                message.type = reader.string();
                                                break;
                                            }
                                        case 3: {
                                                if (!(message.detectedLanguages && message.detectedLanguages.length))
                                                    message.detectedLanguages = [];
                                                message.detectedLanguages.push($root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.decode(reader, reader.uint32()));
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a VisualElement message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.VisualElement
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.VisualElement} VisualElement
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                VisualElement.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a VisualElement message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.VisualElement
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                VisualElement.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.layout != null && message.hasOwnProperty("layout")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Layout.verify(message.layout);
                                        if (error)
                                            return "layout." + error;
                                    }
                                    if (message.type != null && message.hasOwnProperty("type"))
                                        if (!$util.isString(message.type))
                                            return "type: string expected";
                                    if (message.detectedLanguages != null && message.hasOwnProperty("detectedLanguages")) {
                                        if (!Array.isArray(message.detectedLanguages))
                                            return "detectedLanguages: array expected";
                                        for (var i = 0; i < message.detectedLanguages.length; ++i) {
                                            var error = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.verify(message.detectedLanguages[i]);
                                            if (error)
                                                return "detectedLanguages." + error;
                                        }
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a VisualElement message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.VisualElement
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.VisualElement} VisualElement
                                 */
                                VisualElement.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.VisualElement)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.VisualElement();
                                    if (object.layout != null) {
                                        if (typeof object.layout !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.VisualElement.layout: object expected");
                                        message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.fromObject(object.layout);
                                    }
                                    if (object.type != null)
                                        message.type = String(object.type);
                                    if (object.detectedLanguages) {
                                        if (!Array.isArray(object.detectedLanguages))
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.VisualElement.detectedLanguages: array expected");
                                        message.detectedLanguages = [];
                                        for (var i = 0; i < object.detectedLanguages.length; ++i) {
                                            if (typeof object.detectedLanguages[i] !== "object")
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.VisualElement.detectedLanguages: object expected");
                                            message.detectedLanguages[i] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.fromObject(object.detectedLanguages[i]);
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a VisualElement message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.VisualElement
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.VisualElement} message VisualElement
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                VisualElement.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults)
                                        object.detectedLanguages = [];
                                    if (options.defaults) {
                                        object.layout = null;
                                        object.type = "";
                                    }
                                    if (message.layout != null && message.hasOwnProperty("layout"))
                                        object.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.toObject(message.layout, options);
                                    if (message.type != null && message.hasOwnProperty("type"))
                                        object.type = message.type;
                                    if (message.detectedLanguages && message.detectedLanguages.length) {
                                        object.detectedLanguages = [];
                                        for (var j = 0; j < message.detectedLanguages.length; ++j)
                                            object.detectedLanguages[j] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.toObject(message.detectedLanguages[j], options);
                                    }
                                    return object;
                                };
    
                                /**
                                 * Converts this VisualElement to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.VisualElement
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                VisualElement.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for VisualElement
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.VisualElement
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                VisualElement.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.VisualElement";
                                };
    
                                return VisualElement;
                            })();
    
                            Page.Table = (function() {
    
                                /**
                                 * Properties of a Table.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface ITable
                                 * @property {google.cloud.documentai.v1.Document.Page.ILayout|null} [layout] Table layout
                                 * @property {Array.<google.cloud.documentai.v1.Document.Page.Table.ITableRow>|null} [headerRows] Table headerRows
                                 * @property {Array.<google.cloud.documentai.v1.Document.Page.Table.ITableRow>|null} [bodyRows] Table bodyRows
                                 * @property {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>|null} [detectedLanguages] Table detectedLanguages
                                 * @property {google.cloud.documentai.v1.Document.IProvenance|null} [provenance] Table provenance
                                 */
    
                                /**
                                 * Constructs a new Table.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents a Table.
                                 * @implements ITable
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.ITable=} [properties] Properties to set
                                 */
                                function Table(properties) {
                                    this.headerRows = [];
                                    this.bodyRows = [];
                                    this.detectedLanguages = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * Table layout.
                                 * @member {google.cloud.documentai.v1.Document.Page.ILayout|null|undefined} layout
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @instance
                                 */
                                Table.prototype.layout = null;
    
                                /**
                                 * Table headerRows.
                                 * @member {Array.<google.cloud.documentai.v1.Document.Page.Table.ITableRow>} headerRows
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @instance
                                 */
                                Table.prototype.headerRows = $util.emptyArray;
    
                                /**
                                 * Table bodyRows.
                                 * @member {Array.<google.cloud.documentai.v1.Document.Page.Table.ITableRow>} bodyRows
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @instance
                                 */
                                Table.prototype.bodyRows = $util.emptyArray;
    
                                /**
                                 * Table detectedLanguages.
                                 * @member {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>} detectedLanguages
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @instance
                                 */
                                Table.prototype.detectedLanguages = $util.emptyArray;
    
                                /**
                                 * Table provenance.
                                 * @member {google.cloud.documentai.v1.Document.IProvenance|null|undefined} provenance
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @instance
                                 */
                                Table.prototype.provenance = null;
    
                                /**
                                 * Creates a new Table instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.ITable=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.Table} Table instance
                                 */
                                Table.create = function create(properties) {
                                    return new Table(properties);
                                };
    
                                /**
                                 * Encodes the specified Table message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Table.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.ITable} message Table message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Table.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.layout != null && Object.hasOwnProperty.call(message, "layout"))
                                        $root.google.cloud.documentai.v1.Document.Page.Layout.encode(message.layout, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.headerRows != null && message.headerRows.length)
                                        for (var i = 0; i < message.headerRows.length; ++i)
                                            $root.google.cloud.documentai.v1.Document.Page.Table.TableRow.encode(message.headerRows[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    if (message.bodyRows != null && message.bodyRows.length)
                                        for (var i = 0; i < message.bodyRows.length; ++i)
                                            $root.google.cloud.documentai.v1.Document.Page.Table.TableRow.encode(message.bodyRows[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                    if (message.detectedLanguages != null && message.detectedLanguages.length)
                                        for (var i = 0; i < message.detectedLanguages.length; ++i)
                                            $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.encode(message.detectedLanguages[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                    if (message.provenance != null && Object.hasOwnProperty.call(message, "provenance"))
                                        $root.google.cloud.documentai.v1.Document.Provenance.encode(message.provenance, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified Table message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Table.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.ITable} message Table message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Table.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a Table message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.Table} Table
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Table.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.Table();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 2: {
                                                if (!(message.headerRows && message.headerRows.length))
                                                    message.headerRows = [];
                                                message.headerRows.push($root.google.cloud.documentai.v1.Document.Page.Table.TableRow.decode(reader, reader.uint32()));
                                                break;
                                            }
                                        case 3: {
                                                if (!(message.bodyRows && message.bodyRows.length))
                                                    message.bodyRows = [];
                                                message.bodyRows.push($root.google.cloud.documentai.v1.Document.Page.Table.TableRow.decode(reader, reader.uint32()));
                                                break;
                                            }
                                        case 4: {
                                                if (!(message.detectedLanguages && message.detectedLanguages.length))
                                                    message.detectedLanguages = [];
                                                message.detectedLanguages.push($root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.decode(reader, reader.uint32()));
                                                break;
                                            }
                                        case 5: {
                                                message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a Table message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.Table} Table
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Table.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a Table message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                Table.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.layout != null && message.hasOwnProperty("layout")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Layout.verify(message.layout);
                                        if (error)
                                            return "layout." + error;
                                    }
                                    if (message.headerRows != null && message.hasOwnProperty("headerRows")) {
                                        if (!Array.isArray(message.headerRows))
                                            return "headerRows: array expected";
                                        for (var i = 0; i < message.headerRows.length; ++i) {
                                            var error = $root.google.cloud.documentai.v1.Document.Page.Table.TableRow.verify(message.headerRows[i]);
                                            if (error)
                                                return "headerRows." + error;
                                        }
                                    }
                                    if (message.bodyRows != null && message.hasOwnProperty("bodyRows")) {
                                        if (!Array.isArray(message.bodyRows))
                                            return "bodyRows: array expected";
                                        for (var i = 0; i < message.bodyRows.length; ++i) {
                                            var error = $root.google.cloud.documentai.v1.Document.Page.Table.TableRow.verify(message.bodyRows[i]);
                                            if (error)
                                                return "bodyRows." + error;
                                        }
                                    }
                                    if (message.detectedLanguages != null && message.hasOwnProperty("detectedLanguages")) {
                                        if (!Array.isArray(message.detectedLanguages))
                                            return "detectedLanguages: array expected";
                                        for (var i = 0; i < message.detectedLanguages.length; ++i) {
                                            var error = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.verify(message.detectedLanguages[i]);
                                            if (error)
                                                return "detectedLanguages." + error;
                                        }
                                    }
                                    if (message.provenance != null && message.hasOwnProperty("provenance")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Provenance.verify(message.provenance);
                                        if (error)
                                            return "provenance." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a Table message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.Table} Table
                                 */
                                Table.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.Table)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.Table();
                                    if (object.layout != null) {
                                        if (typeof object.layout !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Table.layout: object expected");
                                        message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.fromObject(object.layout);
                                    }
                                    if (object.headerRows) {
                                        if (!Array.isArray(object.headerRows))
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Table.headerRows: array expected");
                                        message.headerRows = [];
                                        for (var i = 0; i < object.headerRows.length; ++i) {
                                            if (typeof object.headerRows[i] !== "object")
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.Table.headerRows: object expected");
                                            message.headerRows[i] = $root.google.cloud.documentai.v1.Document.Page.Table.TableRow.fromObject(object.headerRows[i]);
                                        }
                                    }
                                    if (object.bodyRows) {
                                        if (!Array.isArray(object.bodyRows))
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Table.bodyRows: array expected");
                                        message.bodyRows = [];
                                        for (var i = 0; i < object.bodyRows.length; ++i) {
                                            if (typeof object.bodyRows[i] !== "object")
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.Table.bodyRows: object expected");
                                            message.bodyRows[i] = $root.google.cloud.documentai.v1.Document.Page.Table.TableRow.fromObject(object.bodyRows[i]);
                                        }
                                    }
                                    if (object.detectedLanguages) {
                                        if (!Array.isArray(object.detectedLanguages))
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Table.detectedLanguages: array expected");
                                        message.detectedLanguages = [];
                                        for (var i = 0; i < object.detectedLanguages.length; ++i) {
                                            if (typeof object.detectedLanguages[i] !== "object")
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.Table.detectedLanguages: object expected");
                                            message.detectedLanguages[i] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.fromObject(object.detectedLanguages[i]);
                                        }
                                    }
                                    if (object.provenance != null) {
                                        if (typeof object.provenance !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Table.provenance: object expected");
                                        message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.fromObject(object.provenance);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a Table message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.Table} message Table
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                Table.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults) {
                                        object.headerRows = [];
                                        object.bodyRows = [];
                                        object.detectedLanguages = [];
                                    }
                                    if (options.defaults) {
                                        object.layout = null;
                                        object.provenance = null;
                                    }
                                    if (message.layout != null && message.hasOwnProperty("layout"))
                                        object.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.toObject(message.layout, options);
                                    if (message.headerRows && message.headerRows.length) {
                                        object.headerRows = [];
                                        for (var j = 0; j < message.headerRows.length; ++j)
                                            object.headerRows[j] = $root.google.cloud.documentai.v1.Document.Page.Table.TableRow.toObject(message.headerRows[j], options);
                                    }
                                    if (message.bodyRows && message.bodyRows.length) {
                                        object.bodyRows = [];
                                        for (var j = 0; j < message.bodyRows.length; ++j)
                                            object.bodyRows[j] = $root.google.cloud.documentai.v1.Document.Page.Table.TableRow.toObject(message.bodyRows[j], options);
                                    }
                                    if (message.detectedLanguages && message.detectedLanguages.length) {
                                        object.detectedLanguages = [];
                                        for (var j = 0; j < message.detectedLanguages.length; ++j)
                                            object.detectedLanguages[j] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.toObject(message.detectedLanguages[j], options);
                                    }
                                    if (message.provenance != null && message.hasOwnProperty("provenance"))
                                        object.provenance = $root.google.cloud.documentai.v1.Document.Provenance.toObject(message.provenance, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this Table to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                Table.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for Table
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                Table.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.Table";
                                };
    
                                Table.TableRow = (function() {
    
                                    /**
                                     * Properties of a TableRow.
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table
                                     * @interface ITableRow
                                     * @property {Array.<google.cloud.documentai.v1.Document.Page.Table.ITableCell>|null} [cells] TableRow cells
                                     */
    
                                    /**
                                     * Constructs a new TableRow.
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table
                                     * @classdesc Represents a TableRow.
                                     * @implements ITableRow
                                     * @constructor
                                     * @param {google.cloud.documentai.v1.Document.Page.Table.ITableRow=} [properties] Properties to set
                                     */
                                    function TableRow(properties) {
                                        this.cells = [];
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }
    
                                    /**
                                     * TableRow cells.
                                     * @member {Array.<google.cloud.documentai.v1.Document.Page.Table.ITableCell>} cells
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableRow
                                     * @instance
                                     */
                                    TableRow.prototype.cells = $util.emptyArray;
    
                                    /**
                                     * Creates a new TableRow instance using the specified properties.
                                     * @function create
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableRow
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.Table.ITableRow=} [properties] Properties to set
                                     * @returns {google.cloud.documentai.v1.Document.Page.Table.TableRow} TableRow instance
                                     */
                                    TableRow.create = function create(properties) {
                                        return new TableRow(properties);
                                    };
    
                                    /**
                                     * Encodes the specified TableRow message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Table.TableRow.verify|verify} messages.
                                     * @function encode
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableRow
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.Table.ITableRow} message TableRow message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    TableRow.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.cells != null && message.cells.length)
                                            for (var i = 0; i < message.cells.length; ++i)
                                                $root.google.cloud.documentai.v1.Document.Page.Table.TableCell.encode(message.cells[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                        return writer;
                                    };
    
                                    /**
                                     * Encodes the specified TableRow message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Table.TableRow.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableRow
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.Table.ITableRow} message TableRow message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    TableRow.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };
    
                                    /**
                                     * Decodes a TableRow message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableRow
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {google.cloud.documentai.v1.Document.Page.Table.TableRow} TableRow
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    TableRow.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.Table.TableRow();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                            case 1: {
                                                    if (!(message.cells && message.cells.length))
                                                        message.cells = [];
                                                    message.cells.push($root.google.cloud.documentai.v1.Document.Page.Table.TableCell.decode(reader, reader.uint32()));
                                                    break;
                                                }
                                            default:
                                                reader.skipType(tag & 7);
                                                break;
                                            }
                                        }
                                        return message;
                                    };
    
                                    /**
                                     * Decodes a TableRow message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableRow
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {google.cloud.documentai.v1.Document.Page.Table.TableRow} TableRow
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    TableRow.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };
    
                                    /**
                                     * Verifies a TableRow message.
                                     * @function verify
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableRow
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    TableRow.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.cells != null && message.hasOwnProperty("cells")) {
                                            if (!Array.isArray(message.cells))
                                                return "cells: array expected";
                                            for (var i = 0; i < message.cells.length; ++i) {
                                                var error = $root.google.cloud.documentai.v1.Document.Page.Table.TableCell.verify(message.cells[i]);
                                                if (error)
                                                    return "cells." + error;
                                            }
                                        }
                                        return null;
                                    };
    
                                    /**
                                     * Creates a TableRow message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableRow
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {google.cloud.documentai.v1.Document.Page.Table.TableRow} TableRow
                                     */
                                    TableRow.fromObject = function fromObject(object) {
                                        if (object instanceof $root.google.cloud.documentai.v1.Document.Page.Table.TableRow)
                                            return object;
                                        var message = new $root.google.cloud.documentai.v1.Document.Page.Table.TableRow();
                                        if (object.cells) {
                                            if (!Array.isArray(object.cells))
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.Table.TableRow.cells: array expected");
                                            message.cells = [];
                                            for (var i = 0; i < object.cells.length; ++i) {
                                                if (typeof object.cells[i] !== "object")
                                                    throw TypeError(".google.cloud.documentai.v1.Document.Page.Table.TableRow.cells: object expected");
                                                message.cells[i] = $root.google.cloud.documentai.v1.Document.Page.Table.TableCell.fromObject(object.cells[i]);
                                            }
                                        }
                                        return message;
                                    };
    
                                    /**
                                     * Creates a plain object from a TableRow message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableRow
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.Table.TableRow} message TableRow
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    TableRow.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.arrays || options.defaults)
                                            object.cells = [];
                                        if (message.cells && message.cells.length) {
                                            object.cells = [];
                                            for (var j = 0; j < message.cells.length; ++j)
                                                object.cells[j] = $root.google.cloud.documentai.v1.Document.Page.Table.TableCell.toObject(message.cells[j], options);
                                        }
                                        return object;
                                    };
    
                                    /**
                                     * Converts this TableRow to JSON.
                                     * @function toJSON
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableRow
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    TableRow.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };
    
                                    /**
                                     * Gets the default type url for TableRow
                                     * @function getTypeUrl
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableRow
                                     * @static
                                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                     * @returns {string} The default type url
                                     */
                                    TableRow.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                        if (typeUrlPrefix === undefined) {
                                            typeUrlPrefix = "type.googleapis.com";
                                        }
                                        return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.Table.TableRow";
                                    };
    
                                    return TableRow;
                                })();
    
                                Table.TableCell = (function() {
    
                                    /**
                                     * Properties of a TableCell.
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table
                                     * @interface ITableCell
                                     * @property {google.cloud.documentai.v1.Document.Page.ILayout|null} [layout] TableCell layout
                                     * @property {number|null} [rowSpan] TableCell rowSpan
                                     * @property {number|null} [colSpan] TableCell colSpan
                                     * @property {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>|null} [detectedLanguages] TableCell detectedLanguages
                                     */
    
                                    /**
                                     * Constructs a new TableCell.
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table
                                     * @classdesc Represents a TableCell.
                                     * @implements ITableCell
                                     * @constructor
                                     * @param {google.cloud.documentai.v1.Document.Page.Table.ITableCell=} [properties] Properties to set
                                     */
                                    function TableCell(properties) {
                                        this.detectedLanguages = [];
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }
    
                                    /**
                                     * TableCell layout.
                                     * @member {google.cloud.documentai.v1.Document.Page.ILayout|null|undefined} layout
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableCell
                                     * @instance
                                     */
                                    TableCell.prototype.layout = null;
    
                                    /**
                                     * TableCell rowSpan.
                                     * @member {number} rowSpan
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableCell
                                     * @instance
                                     */
                                    TableCell.prototype.rowSpan = 0;
    
                                    /**
                                     * TableCell colSpan.
                                     * @member {number} colSpan
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableCell
                                     * @instance
                                     */
                                    TableCell.prototype.colSpan = 0;
    
                                    /**
                                     * TableCell detectedLanguages.
                                     * @member {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>} detectedLanguages
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableCell
                                     * @instance
                                     */
                                    TableCell.prototype.detectedLanguages = $util.emptyArray;
    
                                    /**
                                     * Creates a new TableCell instance using the specified properties.
                                     * @function create
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableCell
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.Table.ITableCell=} [properties] Properties to set
                                     * @returns {google.cloud.documentai.v1.Document.Page.Table.TableCell} TableCell instance
                                     */
                                    TableCell.create = function create(properties) {
                                        return new TableCell(properties);
                                    };
    
                                    /**
                                     * Encodes the specified TableCell message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Table.TableCell.verify|verify} messages.
                                     * @function encode
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableCell
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.Table.ITableCell} message TableCell message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    TableCell.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.layout != null && Object.hasOwnProperty.call(message, "layout"))
                                            $root.google.cloud.documentai.v1.Document.Page.Layout.encode(message.layout, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                        if (message.rowSpan != null && Object.hasOwnProperty.call(message, "rowSpan"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.rowSpan);
                                        if (message.colSpan != null && Object.hasOwnProperty.call(message, "colSpan"))
                                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.colSpan);
                                        if (message.detectedLanguages != null && message.detectedLanguages.length)
                                            for (var i = 0; i < message.detectedLanguages.length; ++i)
                                                $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.encode(message.detectedLanguages[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                        return writer;
                                    };
    
                                    /**
                                     * Encodes the specified TableCell message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Table.TableCell.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableCell
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.Table.ITableCell} message TableCell message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    TableCell.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };
    
                                    /**
                                     * Decodes a TableCell message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableCell
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {google.cloud.documentai.v1.Document.Page.Table.TableCell} TableCell
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    TableCell.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.Table.TableCell();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                            case 1: {
                                                    message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.decode(reader, reader.uint32());
                                                    break;
                                                }
                                            case 2: {
                                                    message.rowSpan = reader.int32();
                                                    break;
                                                }
                                            case 3: {
                                                    message.colSpan = reader.int32();
                                                    break;
                                                }
                                            case 4: {
                                                    if (!(message.detectedLanguages && message.detectedLanguages.length))
                                                        message.detectedLanguages = [];
                                                    message.detectedLanguages.push($root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.decode(reader, reader.uint32()));
                                                    break;
                                                }
                                            default:
                                                reader.skipType(tag & 7);
                                                break;
                                            }
                                        }
                                        return message;
                                    };
    
                                    /**
                                     * Decodes a TableCell message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableCell
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {google.cloud.documentai.v1.Document.Page.Table.TableCell} TableCell
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    TableCell.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };
    
                                    /**
                                     * Verifies a TableCell message.
                                     * @function verify
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableCell
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    TableCell.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.layout != null && message.hasOwnProperty("layout")) {
                                            var error = $root.google.cloud.documentai.v1.Document.Page.Layout.verify(message.layout);
                                            if (error)
                                                return "layout." + error;
                                        }
                                        if (message.rowSpan != null && message.hasOwnProperty("rowSpan"))
                                            if (!$util.isInteger(message.rowSpan))
                                                return "rowSpan: integer expected";
                                        if (message.colSpan != null && message.hasOwnProperty("colSpan"))
                                            if (!$util.isInteger(message.colSpan))
                                                return "colSpan: integer expected";
                                        if (message.detectedLanguages != null && message.hasOwnProperty("detectedLanguages")) {
                                            if (!Array.isArray(message.detectedLanguages))
                                                return "detectedLanguages: array expected";
                                            for (var i = 0; i < message.detectedLanguages.length; ++i) {
                                                var error = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.verify(message.detectedLanguages[i]);
                                                if (error)
                                                    return "detectedLanguages." + error;
                                            }
                                        }
                                        return null;
                                    };
    
                                    /**
                                     * Creates a TableCell message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableCell
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {google.cloud.documentai.v1.Document.Page.Table.TableCell} TableCell
                                     */
                                    TableCell.fromObject = function fromObject(object) {
                                        if (object instanceof $root.google.cloud.documentai.v1.Document.Page.Table.TableCell)
                                            return object;
                                        var message = new $root.google.cloud.documentai.v1.Document.Page.Table.TableCell();
                                        if (object.layout != null) {
                                            if (typeof object.layout !== "object")
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.Table.TableCell.layout: object expected");
                                            message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.fromObject(object.layout);
                                        }
                                        if (object.rowSpan != null)
                                            message.rowSpan = object.rowSpan | 0;
                                        if (object.colSpan != null)
                                            message.colSpan = object.colSpan | 0;
                                        if (object.detectedLanguages) {
                                            if (!Array.isArray(object.detectedLanguages))
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.Table.TableCell.detectedLanguages: array expected");
                                            message.detectedLanguages = [];
                                            for (var i = 0; i < object.detectedLanguages.length; ++i) {
                                                if (typeof object.detectedLanguages[i] !== "object")
                                                    throw TypeError(".google.cloud.documentai.v1.Document.Page.Table.TableCell.detectedLanguages: object expected");
                                                message.detectedLanguages[i] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.fromObject(object.detectedLanguages[i]);
                                            }
                                        }
                                        return message;
                                    };
    
                                    /**
                                     * Creates a plain object from a TableCell message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableCell
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.Table.TableCell} message TableCell
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    TableCell.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.arrays || options.defaults)
                                            object.detectedLanguages = [];
                                        if (options.defaults) {
                                            object.layout = null;
                                            object.rowSpan = 0;
                                            object.colSpan = 0;
                                        }
                                        if (message.layout != null && message.hasOwnProperty("layout"))
                                            object.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.toObject(message.layout, options);
                                        if (message.rowSpan != null && message.hasOwnProperty("rowSpan"))
                                            object.rowSpan = message.rowSpan;
                                        if (message.colSpan != null && message.hasOwnProperty("colSpan"))
                                            object.colSpan = message.colSpan;
                                        if (message.detectedLanguages && message.detectedLanguages.length) {
                                            object.detectedLanguages = [];
                                            for (var j = 0; j < message.detectedLanguages.length; ++j)
                                                object.detectedLanguages[j] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.toObject(message.detectedLanguages[j], options);
                                        }
                                        return object;
                                    };
    
                                    /**
                                     * Converts this TableCell to JSON.
                                     * @function toJSON
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableCell
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    TableCell.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };
    
                                    /**
                                     * Gets the default type url for TableCell
                                     * @function getTypeUrl
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableCell
                                     * @static
                                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                     * @returns {string} The default type url
                                     */
                                    TableCell.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                        if (typeUrlPrefix === undefined) {
                                            typeUrlPrefix = "type.googleapis.com";
                                        }
                                        return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.Table.TableCell";
                                    };
    
                                    return TableCell;
                                })();
    
                                return Table;
                            })();
    
                            Page.FormField = (function() {
    
                                /**
                                 * Properties of a FormField.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface IFormField
                                 * @property {google.cloud.documentai.v1.Document.Page.ILayout|null} [fieldName] FormField fieldName
                                 * @property {google.cloud.documentai.v1.Document.Page.ILayout|null} [fieldValue] FormField fieldValue
                                 * @property {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>|null} [nameDetectedLanguages] FormField nameDetectedLanguages
                                 * @property {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>|null} [valueDetectedLanguages] FormField valueDetectedLanguages
                                 * @property {string|null} [valueType] FormField valueType
                                 * @property {string|null} [correctedKeyText] FormField correctedKeyText
                                 * @property {string|null} [correctedValueText] FormField correctedValueText
                                 * @property {google.cloud.documentai.v1.Document.IProvenance|null} [provenance] FormField provenance
                                 */
    
                                /**
                                 * Constructs a new FormField.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents a FormField.
                                 * @implements IFormField
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.IFormField=} [properties] Properties to set
                                 */
                                function FormField(properties) {
                                    this.nameDetectedLanguages = [];
                                    this.valueDetectedLanguages = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * FormField fieldName.
                                 * @member {google.cloud.documentai.v1.Document.Page.ILayout|null|undefined} fieldName
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @instance
                                 */
                                FormField.prototype.fieldName = null;
    
                                /**
                                 * FormField fieldValue.
                                 * @member {google.cloud.documentai.v1.Document.Page.ILayout|null|undefined} fieldValue
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @instance
                                 */
                                FormField.prototype.fieldValue = null;
    
                                /**
                                 * FormField nameDetectedLanguages.
                                 * @member {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>} nameDetectedLanguages
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @instance
                                 */
                                FormField.prototype.nameDetectedLanguages = $util.emptyArray;
    
                                /**
                                 * FormField valueDetectedLanguages.
                                 * @member {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>} valueDetectedLanguages
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @instance
                                 */
                                FormField.prototype.valueDetectedLanguages = $util.emptyArray;
    
                                /**
                                 * FormField valueType.
                                 * @member {string} valueType
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @instance
                                 */
                                FormField.prototype.valueType = "";
    
                                /**
                                 * FormField correctedKeyText.
                                 * @member {string} correctedKeyText
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @instance
                                 */
                                FormField.prototype.correctedKeyText = "";
    
                                /**
                                 * FormField correctedValueText.
                                 * @member {string} correctedValueText
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @instance
                                 */
                                FormField.prototype.correctedValueText = "";
    
                                /**
                                 * FormField provenance.
                                 * @member {google.cloud.documentai.v1.Document.IProvenance|null|undefined} provenance
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @instance
                                 */
                                FormField.prototype.provenance = null;
    
                                /**
                                 * Creates a new FormField instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IFormField=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.FormField} FormField instance
                                 */
                                FormField.create = function create(properties) {
                                    return new FormField(properties);
                                };
    
                                /**
                                 * Encodes the specified FormField message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.FormField.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IFormField} message FormField message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                FormField.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.fieldName != null && Object.hasOwnProperty.call(message, "fieldName"))
                                        $root.google.cloud.documentai.v1.Document.Page.Layout.encode(message.fieldName, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.fieldValue != null && Object.hasOwnProperty.call(message, "fieldValue"))
                                        $root.google.cloud.documentai.v1.Document.Page.Layout.encode(message.fieldValue, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    if (message.nameDetectedLanguages != null && message.nameDetectedLanguages.length)
                                        for (var i = 0; i < message.nameDetectedLanguages.length; ++i)
                                            $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.encode(message.nameDetectedLanguages[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                    if (message.valueDetectedLanguages != null && message.valueDetectedLanguages.length)
                                        for (var i = 0; i < message.valueDetectedLanguages.length; ++i)
                                            $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.encode(message.valueDetectedLanguages[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                    if (message.valueType != null && Object.hasOwnProperty.call(message, "valueType"))
                                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.valueType);
                                    if (message.correctedKeyText != null && Object.hasOwnProperty.call(message, "correctedKeyText"))
                                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.correctedKeyText);
                                    if (message.correctedValueText != null && Object.hasOwnProperty.call(message, "correctedValueText"))
                                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.correctedValueText);
                                    if (message.provenance != null && Object.hasOwnProperty.call(message, "provenance"))
                                        $root.google.cloud.documentai.v1.Document.Provenance.encode(message.provenance, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified FormField message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.FormField.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IFormField} message FormField message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                FormField.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a FormField message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.FormField} FormField
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                FormField.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.FormField();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.fieldName = $root.google.cloud.documentai.v1.Document.Page.Layout.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 2: {
                                                message.fieldValue = $root.google.cloud.documentai.v1.Document.Page.Layout.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 3: {
                                                if (!(message.nameDetectedLanguages && message.nameDetectedLanguages.length))
                                                    message.nameDetectedLanguages = [];
                                                message.nameDetectedLanguages.push($root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.decode(reader, reader.uint32()));
                                                break;
                                            }
                                        case 4: {
                                                if (!(message.valueDetectedLanguages && message.valueDetectedLanguages.length))
                                                    message.valueDetectedLanguages = [];
                                                message.valueDetectedLanguages.push($root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.decode(reader, reader.uint32()));
                                                break;
                                            }
                                        case 5: {
                                                message.valueType = reader.string();
                                                break;
                                            }
                                        case 6: {
                                                message.correctedKeyText = reader.string();
                                                break;
                                            }
                                        case 7: {
                                                message.correctedValueText = reader.string();
                                                break;
                                            }
                                        case 8: {
                                                message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a FormField message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.FormField} FormField
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                FormField.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a FormField message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                FormField.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.fieldName != null && message.hasOwnProperty("fieldName")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Layout.verify(message.fieldName);
                                        if (error)
                                            return "fieldName." + error;
                                    }
                                    if (message.fieldValue != null && message.hasOwnProperty("fieldValue")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Layout.verify(message.fieldValue);
                                        if (error)
                                            return "fieldValue." + error;
                                    }
                                    if (message.nameDetectedLanguages != null && message.hasOwnProperty("nameDetectedLanguages")) {
                                        if (!Array.isArray(message.nameDetectedLanguages))
                                            return "nameDetectedLanguages: array expected";
                                        for (var i = 0; i < message.nameDetectedLanguages.length; ++i) {
                                            var error = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.verify(message.nameDetectedLanguages[i]);
                                            if (error)
                                                return "nameDetectedLanguages." + error;
                                        }
                                    }
                                    if (message.valueDetectedLanguages != null && message.hasOwnProperty("valueDetectedLanguages")) {
                                        if (!Array.isArray(message.valueDetectedLanguages))
                                            return "valueDetectedLanguages: array expected";
                                        for (var i = 0; i < message.valueDetectedLanguages.length; ++i) {
                                            var error = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.verify(message.valueDetectedLanguages[i]);
                                            if (error)
                                                return "valueDetectedLanguages." + error;
                                        }
                                    }
                                    if (message.valueType != null && message.hasOwnProperty("valueType"))
                                        if (!$util.isString(message.valueType))
                                            return "valueType: string expected";
                                    if (message.correctedKeyText != null && message.hasOwnProperty("correctedKeyText"))
                                        if (!$util.isString(message.correctedKeyText))
                                            return "correctedKeyText: string expected";
                                    if (message.correctedValueText != null && message.hasOwnProperty("correctedValueText"))
                                        if (!$util.isString(message.correctedValueText))
                                            return "correctedValueText: string expected";
                                    if (message.provenance != null && message.hasOwnProperty("provenance")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Provenance.verify(message.provenance);
                                        if (error)
                                            return "provenance." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a FormField message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.FormField} FormField
                                 */
                                FormField.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.FormField)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.FormField();
                                    if (object.fieldName != null) {
                                        if (typeof object.fieldName !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.FormField.fieldName: object expected");
                                        message.fieldName = $root.google.cloud.documentai.v1.Document.Page.Layout.fromObject(object.fieldName);
                                    }
                                    if (object.fieldValue != null) {
                                        if (typeof object.fieldValue !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.FormField.fieldValue: object expected");
                                        message.fieldValue = $root.google.cloud.documentai.v1.Document.Page.Layout.fromObject(object.fieldValue);
                                    }
                                    if (object.nameDetectedLanguages) {
                                        if (!Array.isArray(object.nameDetectedLanguages))
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.FormField.nameDetectedLanguages: array expected");
                                        message.nameDetectedLanguages = [];
                                        for (var i = 0; i < object.nameDetectedLanguages.length; ++i) {
                                            if (typeof object.nameDetectedLanguages[i] !== "object")
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.FormField.nameDetectedLanguages: object expected");
                                            message.nameDetectedLanguages[i] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.fromObject(object.nameDetectedLanguages[i]);
                                        }
                                    }
                                    if (object.valueDetectedLanguages) {
                                        if (!Array.isArray(object.valueDetectedLanguages))
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.FormField.valueDetectedLanguages: array expected");
                                        message.valueDetectedLanguages = [];
                                        for (var i = 0; i < object.valueDetectedLanguages.length; ++i) {
                                            if (typeof object.valueDetectedLanguages[i] !== "object")
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.FormField.valueDetectedLanguages: object expected");
                                            message.valueDetectedLanguages[i] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.fromObject(object.valueDetectedLanguages[i]);
                                        }
                                    }
                                    if (object.valueType != null)
                                        message.valueType = String(object.valueType);
                                    if (object.correctedKeyText != null)
                                        message.correctedKeyText = String(object.correctedKeyText);
                                    if (object.correctedValueText != null)
                                        message.correctedValueText = String(object.correctedValueText);
                                    if (object.provenance != null) {
                                        if (typeof object.provenance !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.FormField.provenance: object expected");
                                        message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.fromObject(object.provenance);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a FormField message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.FormField} message FormField
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                FormField.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults) {
                                        object.nameDetectedLanguages = [];
                                        object.valueDetectedLanguages = [];
                                    }
                                    if (options.defaults) {
                                        object.fieldName = null;
                                        object.fieldValue = null;
                                        object.valueType = "";
                                        object.correctedKeyText = "";
                                        object.correctedValueText = "";
                                        object.provenance = null;
                                    }
                                    if (message.fieldName != null && message.hasOwnProperty("fieldName"))
                                        object.fieldName = $root.google.cloud.documentai.v1.Document.Page.Layout.toObject(message.fieldName, options);
                                    if (message.fieldValue != null && message.hasOwnProperty("fieldValue"))
                                        object.fieldValue = $root.google.cloud.documentai.v1.Document.Page.Layout.toObject(message.fieldValue, options);
                                    if (message.nameDetectedLanguages && message.nameDetectedLanguages.length) {
                                        object.nameDetectedLanguages = [];
                                        for (var j = 0; j < message.nameDetectedLanguages.length; ++j)
                                            object.nameDetectedLanguages[j] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.toObject(message.nameDetectedLanguages[j], options);
                                    }
                                    if (message.valueDetectedLanguages && message.valueDetectedLanguages.length) {
                                        object.valueDetectedLanguages = [];
                                        for (var j = 0; j < message.valueDetectedLanguages.length; ++j)
                                            object.valueDetectedLanguages[j] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.toObject(message.valueDetectedLanguages[j], options);
                                    }
                                    if (message.valueType != null && message.hasOwnProperty("valueType"))
                                        object.valueType = message.valueType;
                                    if (message.correctedKeyText != null && message.hasOwnProperty("correctedKeyText"))
                                        object.correctedKeyText = message.correctedKeyText;
                                    if (message.correctedValueText != null && message.hasOwnProperty("correctedValueText"))
                                        object.correctedValueText = message.correctedValueText;
                                    if (message.provenance != null && message.hasOwnProperty("provenance"))
                                        object.provenance = $root.google.cloud.documentai.v1.Document.Provenance.toObject(message.provenance, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this FormField to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                FormField.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for FormField
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                FormField.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.FormField";
                                };
    
                                return FormField;
                            })();
    
                            Page.DetectedBarcode = (function() {
    
                                /**
                                 * Properties of a DetectedBarcode.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface IDetectedBarcode
                                 * @property {google.cloud.documentai.v1.Document.Page.ILayout|null} [layout] DetectedBarcode layout
                                 * @property {google.cloud.documentai.v1.IBarcode|null} [barcode] DetectedBarcode barcode
                                 */
    
                                /**
                                 * Constructs a new DetectedBarcode.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents a DetectedBarcode.
                                 * @implements IDetectedBarcode
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.IDetectedBarcode=} [properties] Properties to set
                                 */
                                function DetectedBarcode(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * DetectedBarcode layout.
                                 * @member {google.cloud.documentai.v1.Document.Page.ILayout|null|undefined} layout
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedBarcode
                                 * @instance
                                 */
                                DetectedBarcode.prototype.layout = null;
    
                                /**
                                 * DetectedBarcode barcode.
                                 * @member {google.cloud.documentai.v1.IBarcode|null|undefined} barcode
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedBarcode
                                 * @instance
                                 */
                                DetectedBarcode.prototype.barcode = null;
    
                                /**
                                 * Creates a new DetectedBarcode instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedBarcode
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IDetectedBarcode=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.DetectedBarcode} DetectedBarcode instance
                                 */
                                DetectedBarcode.create = function create(properties) {
                                    return new DetectedBarcode(properties);
                                };
    
                                /**
                                 * Encodes the specified DetectedBarcode message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.DetectedBarcode.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedBarcode
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IDetectedBarcode} message DetectedBarcode message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                DetectedBarcode.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.layout != null && Object.hasOwnProperty.call(message, "layout"))
                                        $root.google.cloud.documentai.v1.Document.Page.Layout.encode(message.layout, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.barcode != null && Object.hasOwnProperty.call(message, "barcode"))
                                        $root.google.cloud.documentai.v1.Barcode.encode(message.barcode, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified DetectedBarcode message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.DetectedBarcode.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedBarcode
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IDetectedBarcode} message DetectedBarcode message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                DetectedBarcode.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a DetectedBarcode message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedBarcode
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.DetectedBarcode} DetectedBarcode
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                DetectedBarcode.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.DetectedBarcode();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 2: {
                                                message.barcode = $root.google.cloud.documentai.v1.Barcode.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a DetectedBarcode message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedBarcode
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.DetectedBarcode} DetectedBarcode
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                DetectedBarcode.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a DetectedBarcode message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedBarcode
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                DetectedBarcode.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.layout != null && message.hasOwnProperty("layout")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Layout.verify(message.layout);
                                        if (error)
                                            return "layout." + error;
                                    }
                                    if (message.barcode != null && message.hasOwnProperty("barcode")) {
                                        var error = $root.google.cloud.documentai.v1.Barcode.verify(message.barcode);
                                        if (error)
                                            return "barcode." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a DetectedBarcode message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedBarcode
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.DetectedBarcode} DetectedBarcode
                                 */
                                DetectedBarcode.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.DetectedBarcode)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.DetectedBarcode();
                                    if (object.layout != null) {
                                        if (typeof object.layout !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.DetectedBarcode.layout: object expected");
                                        message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.fromObject(object.layout);
                                    }
                                    if (object.barcode != null) {
                                        if (typeof object.barcode !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.DetectedBarcode.barcode: object expected");
                                        message.barcode = $root.google.cloud.documentai.v1.Barcode.fromObject(object.barcode);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a DetectedBarcode message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedBarcode
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.DetectedBarcode} message DetectedBarcode
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                DetectedBarcode.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.layout = null;
                                        object.barcode = null;
                                    }
                                    if (message.layout != null && message.hasOwnProperty("layout"))
                                        object.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.toObject(message.layout, options);
                                    if (message.barcode != null && message.hasOwnProperty("barcode"))
                                        object.barcode = $root.google.cloud.documentai.v1.Barcode.toObject(message.barcode, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this DetectedBarcode to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedBarcode
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                DetectedBarcode.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for DetectedBarcode
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedBarcode
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                DetectedBarcode.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.DetectedBarcode";
                                };
    
                                return DetectedBarcode;
                            })();
    
                            Page.DetectedLanguage = (function() {
    
                                /**
                                 * Properties of a DetectedLanguage.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface IDetectedLanguage
                                 * @property {string|null} [languageCode] DetectedLanguage languageCode
                                 * @property {number|null} [confidence] DetectedLanguage confidence
                                 */
    
                                /**
                                 * Constructs a new DetectedLanguage.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents a DetectedLanguage.
                                 * @implements IDetectedLanguage
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.IDetectedLanguage=} [properties] Properties to set
                                 */
                                function DetectedLanguage(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * DetectedLanguage languageCode.
                                 * @member {string} languageCode
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedLanguage
                                 * @instance
                                 */
                                DetectedLanguage.prototype.languageCode = "";
    
                                /**
                                 * DetectedLanguage confidence.
                                 * @member {number} confidence
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedLanguage
                                 * @instance
                                 */
                                DetectedLanguage.prototype.confidence = 0;
    
                                /**
                                 * Creates a new DetectedLanguage instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedLanguage
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IDetectedLanguage=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.DetectedLanguage} DetectedLanguage instance
                                 */
                                DetectedLanguage.create = function create(properties) {
                                    return new DetectedLanguage(properties);
                                };
    
                                /**
                                 * Encodes the specified DetectedLanguage message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.DetectedLanguage.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedLanguage
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IDetectedLanguage} message DetectedLanguage message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                DetectedLanguage.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.languageCode != null && Object.hasOwnProperty.call(message, "languageCode"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.languageCode);
                                    if (message.confidence != null && Object.hasOwnProperty.call(message, "confidence"))
                                        writer.uint32(/* id 2, wireType 5 =*/21).float(message.confidence);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified DetectedLanguage message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.DetectedLanguage.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedLanguage
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IDetectedLanguage} message DetectedLanguage message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                DetectedLanguage.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a DetectedLanguage message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedLanguage
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.DetectedLanguage} DetectedLanguage
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                DetectedLanguage.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.languageCode = reader.string();
                                                break;
                                            }
                                        case 2: {
                                                message.confidence = reader.float();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a DetectedLanguage message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedLanguage
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.DetectedLanguage} DetectedLanguage
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                DetectedLanguage.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a DetectedLanguage message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedLanguage
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                DetectedLanguage.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                        if (!$util.isString(message.languageCode))
                                            return "languageCode: string expected";
                                    if (message.confidence != null && message.hasOwnProperty("confidence"))
                                        if (typeof message.confidence !== "number")
                                            return "confidence: number expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a DetectedLanguage message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedLanguage
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.DetectedLanguage} DetectedLanguage
                                 */
                                DetectedLanguage.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage();
                                    if (object.languageCode != null)
                                        message.languageCode = String(object.languageCode);
                                    if (object.confidence != null)
                                        message.confidence = Number(object.confidence);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a DetectedLanguage message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedLanguage
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.DetectedLanguage} message DetectedLanguage
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                DetectedLanguage.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.languageCode = "";
                                        object.confidence = 0;
                                    }
                                    if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                        object.languageCode = message.languageCode;
                                    if (message.confidence != null && message.hasOwnProperty("confidence"))
                                        object.confidence = options.json && !isFinite(message.confidence) ? String(message.confidence) : message.confidence;
                                    return object;
                                };
    
                                /**
                                 * Converts this DetectedLanguage to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedLanguage
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                DetectedLanguage.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for DetectedLanguage
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedLanguage
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                DetectedLanguage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.DetectedLanguage";
                                };
    
                                return DetectedLanguage;
                            })();
    
                            Page.ImageQualityScores = (function() {
    
                                /**
                                 * Properties of an ImageQualityScores.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface IImageQualityScores
                                 * @property {number|null} [qualityScore] ImageQualityScores qualityScore
                                 * @property {Array.<google.cloud.documentai.v1.Document.Page.ImageQualityScores.IDetectedDefect>|null} [detectedDefects] ImageQualityScores detectedDefects
                                 */
    
                                /**
                                 * Constructs a new ImageQualityScores.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents an ImageQualityScores.
                                 * @implements IImageQualityScores
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.IImageQualityScores=} [properties] Properties to set
                                 */
                                function ImageQualityScores(properties) {
                                    this.detectedDefects = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * ImageQualityScores qualityScore.
                                 * @member {number} qualityScore
                                 * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores
                                 * @instance
                                 */
                                ImageQualityScores.prototype.qualityScore = 0;
    
                                /**
                                 * ImageQualityScores detectedDefects.
                                 * @member {Array.<google.cloud.documentai.v1.Document.Page.ImageQualityScores.IDetectedDefect>} detectedDefects
                                 * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores
                                 * @instance
                                 */
                                ImageQualityScores.prototype.detectedDefects = $util.emptyArray;
    
                                /**
                                 * Creates a new ImageQualityScores instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IImageQualityScores=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.ImageQualityScores} ImageQualityScores instance
                                 */
                                ImageQualityScores.create = function create(properties) {
                                    return new ImageQualityScores(properties);
                                };
    
                                /**
                                 * Encodes the specified ImageQualityScores message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.ImageQualityScores.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IImageQualityScores} message ImageQualityScores message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                ImageQualityScores.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.qualityScore != null && Object.hasOwnProperty.call(message, "qualityScore"))
                                        writer.uint32(/* id 1, wireType 5 =*/13).float(message.qualityScore);
                                    if (message.detectedDefects != null && message.detectedDefects.length)
                                        for (var i = 0; i < message.detectedDefects.length; ++i)
                                            $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect.encode(message.detectedDefects[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified ImageQualityScores message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.ImageQualityScores.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IImageQualityScores} message ImageQualityScores message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                ImageQualityScores.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes an ImageQualityScores message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.ImageQualityScores} ImageQualityScores
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                ImageQualityScores.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.qualityScore = reader.float();
                                                break;
                                            }
                                        case 2: {
                                                if (!(message.detectedDefects && message.detectedDefects.length))
                                                    message.detectedDefects = [];
                                                message.detectedDefects.push($root.google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect.decode(reader, reader.uint32()));
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes an ImageQualityScores message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.ImageQualityScores} ImageQualityScores
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                ImageQualityScores.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies an ImageQualityScores message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                ImageQualityScores.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.qualityScore != null && message.hasOwnProperty("qualityScore"))
                                        if (typeof message.qualityScore !== "number")
                                            return "qualityScore: number expected";
                                    if (message.detectedDefects != null && message.hasOwnProperty("detectedDefects")) {
                                        if (!Array.isArray(message.detectedDefects))
                                            return "detectedDefects: array expected";
                                        for (var i = 0; i < message.detectedDefects.length; ++i) {
                                            var error = $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect.verify(message.detectedDefects[i]);
                                            if (error)
                                                return "detectedDefects." + error;
                                        }
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates an ImageQualityScores message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.ImageQualityScores} ImageQualityScores
                                 */
                                ImageQualityScores.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores();
                                    if (object.qualityScore != null)
                                        message.qualityScore = Number(object.qualityScore);
                                    if (object.detectedDefects) {
                                        if (!Array.isArray(object.detectedDefects))
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.ImageQualityScores.detectedDefects: array expected");
                                        message.detectedDefects = [];
                                        for (var i = 0; i < object.detectedDefects.length; ++i) {
                                            if (typeof object.detectedDefects[i] !== "object")
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.ImageQualityScores.detectedDefects: object expected");
                                            message.detectedDefects[i] = $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect.fromObject(object.detectedDefects[i]);
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from an ImageQualityScores message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.ImageQualityScores} message ImageQualityScores
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                ImageQualityScores.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults)
                                        object.detectedDefects = [];
                                    if (options.defaults)
                                        object.qualityScore = 0;
                                    if (message.qualityScore != null && message.hasOwnProperty("qualityScore"))
                                        object.qualityScore = options.json && !isFinite(message.qualityScore) ? String(message.qualityScore) : message.qualityScore;
                                    if (message.detectedDefects && message.detectedDefects.length) {
                                        object.detectedDefects = [];
                                        for (var j = 0; j < message.detectedDefects.length; ++j)
                                            object.detectedDefects[j] = $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect.toObject(message.detectedDefects[j], options);
                                    }
                                    return object;
                                };
    
                                /**
                                 * Converts this ImageQualityScores to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                ImageQualityScores.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for ImageQualityScores
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                ImageQualityScores.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.ImageQualityScores";
                                };
    
                                ImageQualityScores.DetectedDefect = (function() {
    
                                    /**
                                     * Properties of a DetectedDefect.
                                     * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores
                                     * @interface IDetectedDefect
                                     * @property {string|null} [type] DetectedDefect type
                                     * @property {number|null} [confidence] DetectedDefect confidence
                                     */
    
                                    /**
                                     * Constructs a new DetectedDefect.
                                     * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores
                                     * @classdesc Represents a DetectedDefect.
                                     * @implements IDetectedDefect
                                     * @constructor
                                     * @param {google.cloud.documentai.v1.Document.Page.ImageQualityScores.IDetectedDefect=} [properties] Properties to set
                                     */
                                    function DetectedDefect(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }
    
                                    /**
                                     * DetectedDefect type.
                                     * @member {string} type
                                     * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect
                                     * @instance
                                     */
                                    DetectedDefect.prototype.type = "";
    
                                    /**
                                     * DetectedDefect confidence.
                                     * @member {number} confidence
                                     * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect
                                     * @instance
                                     */
                                    DetectedDefect.prototype.confidence = 0;
    
                                    /**
                                     * Creates a new DetectedDefect instance using the specified properties.
                                     * @function create
                                     * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.ImageQualityScores.IDetectedDefect=} [properties] Properties to set
                                     * @returns {google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect} DetectedDefect instance
                                     */
                                    DetectedDefect.create = function create(properties) {
                                        return new DetectedDefect(properties);
                                    };
    
                                    /**
                                     * Encodes the specified DetectedDefect message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect.verify|verify} messages.
                                     * @function encode
                                     * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.ImageQualityScores.IDetectedDefect} message DetectedDefect message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    DetectedDefect.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                                        if (message.confidence != null && Object.hasOwnProperty.call(message, "confidence"))
                                            writer.uint32(/* id 2, wireType 5 =*/21).float(message.confidence);
                                        return writer;
                                    };
    
                                    /**
                                     * Encodes the specified DetectedDefect message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.ImageQualityScores.IDetectedDefect} message DetectedDefect message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    DetectedDefect.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };
    
                                    /**
                                     * Decodes a DetectedDefect message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect} DetectedDefect
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    DetectedDefect.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                            case 1: {
                                                    message.type = reader.string();
                                                    break;
                                                }
                                            case 2: {
                                                    message.confidence = reader.float();
                                                    break;
                                                }
                                            default:
                                                reader.skipType(tag & 7);
                                                break;
                                            }
                                        }
                                        return message;
                                    };
    
                                    /**
                                     * Decodes a DetectedDefect message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect} DetectedDefect
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    DetectedDefect.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };
    
                                    /**
                                     * Verifies a DetectedDefect message.
                                     * @function verify
                                     * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    DetectedDefect.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.type != null && message.hasOwnProperty("type"))
                                            if (!$util.isString(message.type))
                                                return "type: string expected";
                                        if (message.confidence != null && message.hasOwnProperty("confidence"))
                                            if (typeof message.confidence !== "number")
                                                return "confidence: number expected";
                                        return null;
                                    };
    
                                    /**
                                     * Creates a DetectedDefect message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect} DetectedDefect
                                     */
                                    DetectedDefect.fromObject = function fromObject(object) {
                                        if (object instanceof $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect)
                                            return object;
                                        var message = new $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect();
                                        if (object.type != null)
                                            message.type = String(object.type);
                                        if (object.confidence != null)
                                            message.confidence = Number(object.confidence);
                                        return message;
                                    };
    
                                    /**
                                     * Creates a plain object from a DetectedDefect message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect} message DetectedDefect
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    DetectedDefect.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.type = "";
                                            object.confidence = 0;
                                        }
                                        if (message.type != null && message.hasOwnProperty("type"))
                                            object.type = message.type;
                                        if (message.confidence != null && message.hasOwnProperty("confidence"))
                                            object.confidence = options.json && !isFinite(message.confidence) ? String(message.confidence) : message.confidence;
                                        return object;
                                    };
    
                                    /**
                                     * Converts this DetectedDefect to JSON.
                                     * @function toJSON
                                     * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    DetectedDefect.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };
    
                                    /**
                                     * Gets the default type url for DetectedDefect
                                     * @function getTypeUrl
                                     * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect
                                     * @static
                                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                     * @returns {string} The default type url
                                     */
                                    DetectedDefect.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                        if (typeUrlPrefix === undefined) {
                                            typeUrlPrefix = "type.googleapis.com";
                                        }
                                        return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect";
                                    };
    
                                    return DetectedDefect;
                                })();
    
                                return ImageQualityScores;
                            })();
    
                            return Page;
                        })();
    
                        Document.Entity = (function() {
    
                            /**
                             * Properties of an Entity.
                             * @memberof google.cloud.documentai.v1.Document
                             * @interface IEntity
                             * @property {google.cloud.documentai.v1.Document.ITextAnchor|null} [textAnchor] Entity textAnchor
                             * @property {string|null} [type] Entity type
                             * @property {string|null} [mentionText] Entity mentionText
                             * @property {string|null} [mentionId] Entity mentionId
                             * @property {number|null} [confidence] Entity confidence
                             * @property {google.cloud.documentai.v1.Document.IPageAnchor|null} [pageAnchor] Entity pageAnchor
                             * @property {string|null} [id] Entity id
                             * @property {google.cloud.documentai.v1.Document.Entity.INormalizedValue|null} [normalizedValue] Entity normalizedValue
                             * @property {Array.<google.cloud.documentai.v1.Document.IEntity>|null} [properties] Entity properties
                             * @property {google.cloud.documentai.v1.Document.IProvenance|null} [provenance] Entity provenance
                             * @property {boolean|null} [redacted] Entity redacted
                             */
    
                            /**
                             * Constructs a new Entity.
                             * @memberof google.cloud.documentai.v1.Document
                             * @classdesc Represents an Entity.
                             * @implements IEntity
                             * @constructor
                             * @param {google.cloud.documentai.v1.Document.IEntity=} [properties] Properties to set
                             */
                            function Entity(properties) {
                                this.properties = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Entity textAnchor.
                             * @member {google.cloud.documentai.v1.Document.ITextAnchor|null|undefined} textAnchor
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @instance
                             */
                            Entity.prototype.textAnchor = null;
    
                            /**
                             * Entity type.
                             * @member {string} type
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @instance
                             */
                            Entity.prototype.type = "";
    
                            /**
                             * Entity mentionText.
                             * @member {string} mentionText
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @instance
                             */
                            Entity.prototype.mentionText = "";
    
                            /**
                             * Entity mentionId.
                             * @member {string} mentionId
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @instance
                             */
                            Entity.prototype.mentionId = "";
    
                            /**
                             * Entity confidence.
                             * @member {number} confidence
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @instance
                             */
                            Entity.prototype.confidence = 0;
    
                            /**
                             * Entity pageAnchor.
                             * @member {google.cloud.documentai.v1.Document.IPageAnchor|null|undefined} pageAnchor
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @instance
                             */
                            Entity.prototype.pageAnchor = null;
    
                            /**
                             * Entity id.
                             * @member {string} id
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @instance
                             */
                            Entity.prototype.id = "";
    
                            /**
                             * Entity normalizedValue.
                             * @member {google.cloud.documentai.v1.Document.Entity.INormalizedValue|null|undefined} normalizedValue
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @instance
                             */
                            Entity.prototype.normalizedValue = null;
    
                            /**
                             * Entity properties.
                             * @member {Array.<google.cloud.documentai.v1.Document.IEntity>} properties
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @instance
                             */
                            Entity.prototype.properties = $util.emptyArray;
    
                            /**
                             * Entity provenance.
                             * @member {google.cloud.documentai.v1.Document.IProvenance|null|undefined} provenance
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @instance
                             */
                            Entity.prototype.provenance = null;
    
                            /**
                             * Entity redacted.
                             * @member {boolean} redacted
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @instance
                             */
                            Entity.prototype.redacted = false;
    
                            /**
                             * Creates a new Entity instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IEntity=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.Document.Entity} Entity instance
                             */
                            Entity.create = function create(properties) {
                                return new Entity(properties);
                            };
    
                            /**
                             * Encodes the specified Entity message. Does not implicitly {@link google.cloud.documentai.v1.Document.Entity.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IEntity} message Entity message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Entity.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.textAnchor != null && Object.hasOwnProperty.call(message, "textAnchor"))
                                    $root.google.cloud.documentai.v1.Document.TextAnchor.encode(message.textAnchor, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.type);
                                if (message.mentionText != null && Object.hasOwnProperty.call(message, "mentionText"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.mentionText);
                                if (message.mentionId != null && Object.hasOwnProperty.call(message, "mentionId"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.mentionId);
                                if (message.confidence != null && Object.hasOwnProperty.call(message, "confidence"))
                                    writer.uint32(/* id 5, wireType 5 =*/45).float(message.confidence);
                                if (message.pageAnchor != null && Object.hasOwnProperty.call(message, "pageAnchor"))
                                    $root.google.cloud.documentai.v1.Document.PageAnchor.encode(message.pageAnchor, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                                if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                    writer.uint32(/* id 7, wireType 2 =*/58).string(message.id);
                                if (message.normalizedValue != null && Object.hasOwnProperty.call(message, "normalizedValue"))
                                    $root.google.cloud.documentai.v1.Document.Entity.NormalizedValue.encode(message.normalizedValue, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                                if (message.properties != null && message.properties.length)
                                    for (var i = 0; i < message.properties.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.Entity.encode(message.properties[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                                if (message.provenance != null && Object.hasOwnProperty.call(message, "provenance"))
                                    $root.google.cloud.documentai.v1.Document.Provenance.encode(message.provenance, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                                if (message.redacted != null && Object.hasOwnProperty.call(message, "redacted"))
                                    writer.uint32(/* id 12, wireType 0 =*/96).bool(message.redacted);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Entity message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Entity.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IEntity} message Entity message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Entity.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an Entity message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.Document.Entity} Entity
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Entity.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Entity();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.textAnchor = $root.google.cloud.documentai.v1.Document.TextAnchor.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.type = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.mentionText = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.mentionId = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.confidence = reader.float();
                                            break;
                                        }
                                    case 6: {
                                            message.pageAnchor = $root.google.cloud.documentai.v1.Document.PageAnchor.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 7: {
                                            message.id = reader.string();
                                            break;
                                        }
                                    case 9: {
                                            message.normalizedValue = $root.google.cloud.documentai.v1.Document.Entity.NormalizedValue.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 10: {
                                            if (!(message.properties && message.properties.length))
                                                message.properties = [];
                                            message.properties.push($root.google.cloud.documentai.v1.Document.Entity.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 11: {
                                            message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 12: {
                                            message.redacted = reader.bool();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an Entity message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.Document.Entity} Entity
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Entity.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an Entity message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Entity.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.textAnchor != null && message.hasOwnProperty("textAnchor")) {
                                    var error = $root.google.cloud.documentai.v1.Document.TextAnchor.verify(message.textAnchor);
                                    if (error)
                                        return "textAnchor." + error;
                                }
                                if (message.type != null && message.hasOwnProperty("type"))
                                    if (!$util.isString(message.type))
                                        return "type: string expected";
                                if (message.mentionText != null && message.hasOwnProperty("mentionText"))
                                    if (!$util.isString(message.mentionText))
                                        return "mentionText: string expected";
                                if (message.mentionId != null && message.hasOwnProperty("mentionId"))
                                    if (!$util.isString(message.mentionId))
                                        return "mentionId: string expected";
                                if (message.confidence != null && message.hasOwnProperty("confidence"))
                                    if (typeof message.confidence !== "number")
                                        return "confidence: number expected";
                                if (message.pageAnchor != null && message.hasOwnProperty("pageAnchor")) {
                                    var error = $root.google.cloud.documentai.v1.Document.PageAnchor.verify(message.pageAnchor);
                                    if (error)
                                        return "pageAnchor." + error;
                                }
                                if (message.id != null && message.hasOwnProperty("id"))
                                    if (!$util.isString(message.id))
                                        return "id: string expected";
                                if (message.normalizedValue != null && message.hasOwnProperty("normalizedValue")) {
                                    var error = $root.google.cloud.documentai.v1.Document.Entity.NormalizedValue.verify(message.normalizedValue);
                                    if (error)
                                        return "normalizedValue." + error;
                                }
                                if (message.properties != null && message.hasOwnProperty("properties")) {
                                    if (!Array.isArray(message.properties))
                                        return "properties: array expected";
                                    for (var i = 0; i < message.properties.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.Entity.verify(message.properties[i]);
                                        if (error)
                                            return "properties." + error;
                                    }
                                }
                                if (message.provenance != null && message.hasOwnProperty("provenance")) {
                                    var error = $root.google.cloud.documentai.v1.Document.Provenance.verify(message.provenance);
                                    if (error)
                                        return "provenance." + error;
                                }
                                if (message.redacted != null && message.hasOwnProperty("redacted"))
                                    if (typeof message.redacted !== "boolean")
                                        return "redacted: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates an Entity message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.Document.Entity} Entity
                             */
                            Entity.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.Document.Entity)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.Document.Entity();
                                if (object.textAnchor != null) {
                                    if (typeof object.textAnchor !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Entity.textAnchor: object expected");
                                    message.textAnchor = $root.google.cloud.documentai.v1.Document.TextAnchor.fromObject(object.textAnchor);
                                }
                                if (object.type != null)
                                    message.type = String(object.type);
                                if (object.mentionText != null)
                                    message.mentionText = String(object.mentionText);
                                if (object.mentionId != null)
                                    message.mentionId = String(object.mentionId);
                                if (object.confidence != null)
                                    message.confidence = Number(object.confidence);
                                if (object.pageAnchor != null) {
                                    if (typeof object.pageAnchor !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Entity.pageAnchor: object expected");
                                    message.pageAnchor = $root.google.cloud.documentai.v1.Document.PageAnchor.fromObject(object.pageAnchor);
                                }
                                if (object.id != null)
                                    message.id = String(object.id);
                                if (object.normalizedValue != null) {
                                    if (typeof object.normalizedValue !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Entity.normalizedValue: object expected");
                                    message.normalizedValue = $root.google.cloud.documentai.v1.Document.Entity.NormalizedValue.fromObject(object.normalizedValue);
                                }
                                if (object.properties) {
                                    if (!Array.isArray(object.properties))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Entity.properties: array expected");
                                    message.properties = [];
                                    for (var i = 0; i < object.properties.length; ++i) {
                                        if (typeof object.properties[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Entity.properties: object expected");
                                        message.properties[i] = $root.google.cloud.documentai.v1.Document.Entity.fromObject(object.properties[i]);
                                    }
                                }
                                if (object.provenance != null) {
                                    if (typeof object.provenance !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Entity.provenance: object expected");
                                    message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.fromObject(object.provenance);
                                }
                                if (object.redacted != null)
                                    message.redacted = Boolean(object.redacted);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an Entity message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @static
                             * @param {google.cloud.documentai.v1.Document.Entity} message Entity
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Entity.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.properties = [];
                                if (options.defaults) {
                                    object.textAnchor = null;
                                    object.type = "";
                                    object.mentionText = "";
                                    object.mentionId = "";
                                    object.confidence = 0;
                                    object.pageAnchor = null;
                                    object.id = "";
                                    object.normalizedValue = null;
                                    object.provenance = null;
                                    object.redacted = false;
                                }
                                if (message.textAnchor != null && message.hasOwnProperty("textAnchor"))
                                    object.textAnchor = $root.google.cloud.documentai.v1.Document.TextAnchor.toObject(message.textAnchor, options);
                                if (message.type != null && message.hasOwnProperty("type"))
                                    object.type = message.type;
                                if (message.mentionText != null && message.hasOwnProperty("mentionText"))
                                    object.mentionText = message.mentionText;
                                if (message.mentionId != null && message.hasOwnProperty("mentionId"))
                                    object.mentionId = message.mentionId;
                                if (message.confidence != null && message.hasOwnProperty("confidence"))
                                    object.confidence = options.json && !isFinite(message.confidence) ? String(message.confidence) : message.confidence;
                                if (message.pageAnchor != null && message.hasOwnProperty("pageAnchor"))
                                    object.pageAnchor = $root.google.cloud.documentai.v1.Document.PageAnchor.toObject(message.pageAnchor, options);
                                if (message.id != null && message.hasOwnProperty("id"))
                                    object.id = message.id;
                                if (message.normalizedValue != null && message.hasOwnProperty("normalizedValue"))
                                    object.normalizedValue = $root.google.cloud.documentai.v1.Document.Entity.NormalizedValue.toObject(message.normalizedValue, options);
                                if (message.properties && message.properties.length) {
                                    object.properties = [];
                                    for (var j = 0; j < message.properties.length; ++j)
                                        object.properties[j] = $root.google.cloud.documentai.v1.Document.Entity.toObject(message.properties[j], options);
                                }
                                if (message.provenance != null && message.hasOwnProperty("provenance"))
                                    object.provenance = $root.google.cloud.documentai.v1.Document.Provenance.toObject(message.provenance, options);
                                if (message.redacted != null && message.hasOwnProperty("redacted"))
                                    object.redacted = message.redacted;
                                return object;
                            };
    
                            /**
                             * Converts this Entity to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Entity.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Entity
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Entity.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Entity";
                            };
    
                            Entity.NormalizedValue = (function() {
    
                                /**
                                 * Properties of a NormalizedValue.
                                 * @memberof google.cloud.documentai.v1.Document.Entity
                                 * @interface INormalizedValue
                                 * @property {google.type.IMoney|null} [moneyValue] NormalizedValue moneyValue
                                 * @property {google.type.IDate|null} [dateValue] NormalizedValue dateValue
                                 * @property {google.type.IDateTime|null} [datetimeValue] NormalizedValue datetimeValue
                                 * @property {google.type.IPostalAddress|null} [addressValue] NormalizedValue addressValue
                                 * @property {boolean|null} [booleanValue] NormalizedValue booleanValue
                                 * @property {number|null} [integerValue] NormalizedValue integerValue
                                 * @property {number|null} [floatValue] NormalizedValue floatValue
                                 * @property {string|null} [text] NormalizedValue text
                                 */
    
                                /**
                                 * Constructs a new NormalizedValue.
                                 * @memberof google.cloud.documentai.v1.Document.Entity
                                 * @classdesc Represents a NormalizedValue.
                                 * @implements INormalizedValue
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Entity.INormalizedValue=} [properties] Properties to set
                                 */
                                function NormalizedValue(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * NormalizedValue moneyValue.
                                 * @member {google.type.IMoney|null|undefined} moneyValue
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @instance
                                 */
                                NormalizedValue.prototype.moneyValue = null;
    
                                /**
                                 * NormalizedValue dateValue.
                                 * @member {google.type.IDate|null|undefined} dateValue
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @instance
                                 */
                                NormalizedValue.prototype.dateValue = null;
    
                                /**
                                 * NormalizedValue datetimeValue.
                                 * @member {google.type.IDateTime|null|undefined} datetimeValue
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @instance
                                 */
                                NormalizedValue.prototype.datetimeValue = null;
    
                                /**
                                 * NormalizedValue addressValue.
                                 * @member {google.type.IPostalAddress|null|undefined} addressValue
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @instance
                                 */
                                NormalizedValue.prototype.addressValue = null;
    
                                /**
                                 * NormalizedValue booleanValue.
                                 * @member {boolean|null|undefined} booleanValue
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @instance
                                 */
                                NormalizedValue.prototype.booleanValue = null;
    
                                /**
                                 * NormalizedValue integerValue.
                                 * @member {number|null|undefined} integerValue
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @instance
                                 */
                                NormalizedValue.prototype.integerValue = null;
    
                                /**
                                 * NormalizedValue floatValue.
                                 * @member {number|null|undefined} floatValue
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @instance
                                 */
                                NormalizedValue.prototype.floatValue = null;
    
                                /**
                                 * NormalizedValue text.
                                 * @member {string} text
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @instance
                                 */
                                NormalizedValue.prototype.text = "";
    
                                // OneOf field names bound to virtual getters and setters
                                var $oneOfFields;
    
                                /**
                                 * NormalizedValue structuredValue.
                                 * @member {"moneyValue"|"dateValue"|"datetimeValue"|"addressValue"|"booleanValue"|"integerValue"|"floatValue"|undefined} structuredValue
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @instance
                                 */
                                Object.defineProperty(NormalizedValue.prototype, "structuredValue", {
                                    get: $util.oneOfGetter($oneOfFields = ["moneyValue", "dateValue", "datetimeValue", "addressValue", "booleanValue", "integerValue", "floatValue"]),
                                    set: $util.oneOfSetter($oneOfFields)
                                });
    
                                /**
                                 * Creates a new NormalizedValue instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Entity.INormalizedValue=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Entity.NormalizedValue} NormalizedValue instance
                                 */
                                NormalizedValue.create = function create(properties) {
                                    return new NormalizedValue(properties);
                                };
    
                                /**
                                 * Encodes the specified NormalizedValue message. Does not implicitly {@link google.cloud.documentai.v1.Document.Entity.NormalizedValue.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Entity.INormalizedValue} message NormalizedValue message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                NormalizedValue.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.text != null && Object.hasOwnProperty.call(message, "text"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.text);
                                    if (message.moneyValue != null && Object.hasOwnProperty.call(message, "moneyValue"))
                                        $root.google.type.Money.encode(message.moneyValue, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    if (message.dateValue != null && Object.hasOwnProperty.call(message, "dateValue"))
                                        $root.google.type.Date.encode(message.dateValue, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                    if (message.datetimeValue != null && Object.hasOwnProperty.call(message, "datetimeValue"))
                                        $root.google.type.DateTime.encode(message.datetimeValue, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                    if (message.addressValue != null && Object.hasOwnProperty.call(message, "addressValue"))
                                        $root.google.type.PostalAddress.encode(message.addressValue, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                    if (message.booleanValue != null && Object.hasOwnProperty.call(message, "booleanValue"))
                                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.booleanValue);
                                    if (message.integerValue != null && Object.hasOwnProperty.call(message, "integerValue"))
                                        writer.uint32(/* id 7, wireType 0 =*/56).int32(message.integerValue);
                                    if (message.floatValue != null && Object.hasOwnProperty.call(message, "floatValue"))
                                        writer.uint32(/* id 8, wireType 5 =*/69).float(message.floatValue);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified NormalizedValue message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Entity.NormalizedValue.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Entity.INormalizedValue} message NormalizedValue message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                NormalizedValue.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a NormalizedValue message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Entity.NormalizedValue} NormalizedValue
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                NormalizedValue.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Entity.NormalizedValue();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 2: {
                                                message.moneyValue = $root.google.type.Money.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 3: {
                                                message.dateValue = $root.google.type.Date.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 4: {
                                                message.datetimeValue = $root.google.type.DateTime.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 5: {
                                                message.addressValue = $root.google.type.PostalAddress.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 6: {
                                                message.booleanValue = reader.bool();
                                                break;
                                            }
                                        case 7: {
                                                message.integerValue = reader.int32();
                                                break;
                                            }
                                        case 8: {
                                                message.floatValue = reader.float();
                                                break;
                                            }
                                        case 1: {
                                                message.text = reader.string();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a NormalizedValue message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Entity.NormalizedValue} NormalizedValue
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                NormalizedValue.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a NormalizedValue message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                NormalizedValue.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    var properties = {};
                                    if (message.moneyValue != null && message.hasOwnProperty("moneyValue")) {
                                        properties.structuredValue = 1;
                                        {
                                            var error = $root.google.type.Money.verify(message.moneyValue);
                                            if (error)
                                                return "moneyValue." + error;
                                        }
                                    }
                                    if (message.dateValue != null && message.hasOwnProperty("dateValue")) {
                                        if (properties.structuredValue === 1)
                                            return "structuredValue: multiple values";
                                        properties.structuredValue = 1;
                                        {
                                            var error = $root.google.type.Date.verify(message.dateValue);
                                            if (error)
                                                return "dateValue." + error;
                                        }
                                    }
                                    if (message.datetimeValue != null && message.hasOwnProperty("datetimeValue")) {
                                        if (properties.structuredValue === 1)
                                            return "structuredValue: multiple values";
                                        properties.structuredValue = 1;
                                        {
                                            var error = $root.google.type.DateTime.verify(message.datetimeValue);
                                            if (error)
                                                return "datetimeValue." + error;
                                        }
                                    }
                                    if (message.addressValue != null && message.hasOwnProperty("addressValue")) {
                                        if (properties.structuredValue === 1)
                                            return "structuredValue: multiple values";
                                        properties.structuredValue = 1;
                                        {
                                            var error = $root.google.type.PostalAddress.verify(message.addressValue);
                                            if (error)
                                                return "addressValue." + error;
                                        }
                                    }
                                    if (message.booleanValue != null && message.hasOwnProperty("booleanValue")) {
                                        if (properties.structuredValue === 1)
                                            return "structuredValue: multiple values";
                                        properties.structuredValue = 1;
                                        if (typeof message.booleanValue !== "boolean")
                                            return "booleanValue: boolean expected";
                                    }
                                    if (message.integerValue != null && message.hasOwnProperty("integerValue")) {
                                        if (properties.structuredValue === 1)
                                            return "structuredValue: multiple values";
                                        properties.structuredValue = 1;
                                        if (!$util.isInteger(message.integerValue))
                                            return "integerValue: integer expected";
                                    }
                                    if (message.floatValue != null && message.hasOwnProperty("floatValue")) {
                                        if (properties.structuredValue === 1)
                                            return "structuredValue: multiple values";
                                        properties.structuredValue = 1;
                                        if (typeof message.floatValue !== "number")
                                            return "floatValue: number expected";
                                    }
                                    if (message.text != null && message.hasOwnProperty("text"))
                                        if (!$util.isString(message.text))
                                            return "text: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a NormalizedValue message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Entity.NormalizedValue} NormalizedValue
                                 */
                                NormalizedValue.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Entity.NormalizedValue)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Entity.NormalizedValue();
                                    if (object.moneyValue != null) {
                                        if (typeof object.moneyValue !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Entity.NormalizedValue.moneyValue: object expected");
                                        message.moneyValue = $root.google.type.Money.fromObject(object.moneyValue);
                                    }
                                    if (object.dateValue != null) {
                                        if (typeof object.dateValue !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Entity.NormalizedValue.dateValue: object expected");
                                        message.dateValue = $root.google.type.Date.fromObject(object.dateValue);
                                    }
                                    if (object.datetimeValue != null) {
                                        if (typeof object.datetimeValue !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Entity.NormalizedValue.datetimeValue: object expected");
                                        message.datetimeValue = $root.google.type.DateTime.fromObject(object.datetimeValue);
                                    }
                                    if (object.addressValue != null) {
                                        if (typeof object.addressValue !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Entity.NormalizedValue.addressValue: object expected");
                                        message.addressValue = $root.google.type.PostalAddress.fromObject(object.addressValue);
                                    }
                                    if (object.booleanValue != null)
                                        message.booleanValue = Boolean(object.booleanValue);
                                    if (object.integerValue != null)
                                        message.integerValue = object.integerValue | 0;
                                    if (object.floatValue != null)
                                        message.floatValue = Number(object.floatValue);
                                    if (object.text != null)
                                        message.text = String(object.text);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a NormalizedValue message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Entity.NormalizedValue} message NormalizedValue
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                NormalizedValue.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults)
                                        object.text = "";
                                    if (message.text != null && message.hasOwnProperty("text"))
                                        object.text = message.text;
                                    if (message.moneyValue != null && message.hasOwnProperty("moneyValue")) {
                                        object.moneyValue = $root.google.type.Money.toObject(message.moneyValue, options);
                                        if (options.oneofs)
                                            object.structuredValue = "moneyValue";
                                    }
                                    if (message.dateValue != null && message.hasOwnProperty("dateValue")) {
                                        object.dateValue = $root.google.type.Date.toObject(message.dateValue, options);
                                        if (options.oneofs)
                                            object.structuredValue = "dateValue";
                                    }
                                    if (message.datetimeValue != null && message.hasOwnProperty("datetimeValue")) {
                                        object.datetimeValue = $root.google.type.DateTime.toObject(message.datetimeValue, options);
                                        if (options.oneofs)
                                            object.structuredValue = "datetimeValue";
                                    }
                                    if (message.addressValue != null && message.hasOwnProperty("addressValue")) {
                                        object.addressValue = $root.google.type.PostalAddress.toObject(message.addressValue, options);
                                        if (options.oneofs)
                                            object.structuredValue = "addressValue";
                                    }
                                    if (message.booleanValue != null && message.hasOwnProperty("booleanValue")) {
                                        object.booleanValue = message.booleanValue;
                                        if (options.oneofs)
                                            object.structuredValue = "booleanValue";
                                    }
                                    if (message.integerValue != null && message.hasOwnProperty("integerValue")) {
                                        object.integerValue = message.integerValue;
                                        if (options.oneofs)
                                            object.structuredValue = "integerValue";
                                    }
                                    if (message.floatValue != null && message.hasOwnProperty("floatValue")) {
                                        object.floatValue = options.json && !isFinite(message.floatValue) ? String(message.floatValue) : message.floatValue;
                                        if (options.oneofs)
                                            object.structuredValue = "floatValue";
                                    }
                                    return object;
                                };
    
                                /**
                                 * Converts this NormalizedValue to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                NormalizedValue.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for NormalizedValue
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                NormalizedValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Entity.NormalizedValue";
                                };
    
                                return NormalizedValue;
                            })();
    
                            return Entity;
                        })();
    
                        Document.EntityRelation = (function() {
    
                            /**
                             * Properties of an EntityRelation.
                             * @memberof google.cloud.documentai.v1.Document
                             * @interface IEntityRelation
                             * @property {string|null} [subjectId] EntityRelation subjectId
                             * @property {string|null} [objectId] EntityRelation objectId
                             * @property {string|null} [relation] EntityRelation relation
                             */
    
                            /**
                             * Constructs a new EntityRelation.
                             * @memberof google.cloud.documentai.v1.Document
                             * @classdesc Represents an EntityRelation.
                             * @implements IEntityRelation
                             * @constructor
                             * @param {google.cloud.documentai.v1.Document.IEntityRelation=} [properties] Properties to set
                             */
                            function EntityRelation(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * EntityRelation subjectId.
                             * @member {string} subjectId
                             * @memberof google.cloud.documentai.v1.Document.EntityRelation
                             * @instance
                             */
                            EntityRelation.prototype.subjectId = "";
    
                            /**
                             * EntityRelation objectId.
                             * @member {string} objectId
                             * @memberof google.cloud.documentai.v1.Document.EntityRelation
                             * @instance
                             */
                            EntityRelation.prototype.objectId = "";
    
                            /**
                             * EntityRelation relation.
                             * @member {string} relation
                             * @memberof google.cloud.documentai.v1.Document.EntityRelation
                             * @instance
                             */
                            EntityRelation.prototype.relation = "";
    
                            /**
                             * Creates a new EntityRelation instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.Document.EntityRelation
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IEntityRelation=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.Document.EntityRelation} EntityRelation instance
                             */
                            EntityRelation.create = function create(properties) {
                                return new EntityRelation(properties);
                            };
    
                            /**
                             * Encodes the specified EntityRelation message. Does not implicitly {@link google.cloud.documentai.v1.Document.EntityRelation.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.Document.EntityRelation
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IEntityRelation} message EntityRelation message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            EntityRelation.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.subjectId != null && Object.hasOwnProperty.call(message, "subjectId"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.subjectId);
                                if (message.objectId != null && Object.hasOwnProperty.call(message, "objectId"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.objectId);
                                if (message.relation != null && Object.hasOwnProperty.call(message, "relation"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.relation);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified EntityRelation message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.EntityRelation.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.EntityRelation
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IEntityRelation} message EntityRelation message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            EntityRelation.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an EntityRelation message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.Document.EntityRelation
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.Document.EntityRelation} EntityRelation
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            EntityRelation.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.EntityRelation();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.subjectId = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.objectId = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.relation = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an EntityRelation message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.EntityRelation
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.Document.EntityRelation} EntityRelation
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            EntityRelation.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an EntityRelation message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.Document.EntityRelation
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            EntityRelation.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.subjectId != null && message.hasOwnProperty("subjectId"))
                                    if (!$util.isString(message.subjectId))
                                        return "subjectId: string expected";
                                if (message.objectId != null && message.hasOwnProperty("objectId"))
                                    if (!$util.isString(message.objectId))
                                        return "objectId: string expected";
                                if (message.relation != null && message.hasOwnProperty("relation"))
                                    if (!$util.isString(message.relation))
                                        return "relation: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an EntityRelation message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.Document.EntityRelation
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.Document.EntityRelation} EntityRelation
                             */
                            EntityRelation.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.Document.EntityRelation)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.Document.EntityRelation();
                                if (object.subjectId != null)
                                    message.subjectId = String(object.subjectId);
                                if (object.objectId != null)
                                    message.objectId = String(object.objectId);
                                if (object.relation != null)
                                    message.relation = String(object.relation);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an EntityRelation message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.Document.EntityRelation
                             * @static
                             * @param {google.cloud.documentai.v1.Document.EntityRelation} message EntityRelation
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            EntityRelation.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.subjectId = "";
                                    object.objectId = "";
                                    object.relation = "";
                                }
                                if (message.subjectId != null && message.hasOwnProperty("subjectId"))
                                    object.subjectId = message.subjectId;
                                if (message.objectId != null && message.hasOwnProperty("objectId"))
                                    object.objectId = message.objectId;
                                if (message.relation != null && message.hasOwnProperty("relation"))
                                    object.relation = message.relation;
                                return object;
                            };
    
                            /**
                             * Converts this EntityRelation to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.Document.EntityRelation
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            EntityRelation.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for EntityRelation
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.Document.EntityRelation
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            EntityRelation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.Document.EntityRelation";
                            };
    
                            return EntityRelation;
                        })();
    
                        Document.TextAnchor = (function() {
    
                            /**
                             * Properties of a TextAnchor.
                             * @memberof google.cloud.documentai.v1.Document
                             * @interface ITextAnchor
                             * @property {Array.<google.cloud.documentai.v1.Document.TextAnchor.ITextSegment>|null} [textSegments] TextAnchor textSegments
                             * @property {string|null} [content] TextAnchor content
                             */
    
                            /**
                             * Constructs a new TextAnchor.
                             * @memberof google.cloud.documentai.v1.Document
                             * @classdesc Represents a TextAnchor.
                             * @implements ITextAnchor
                             * @constructor
                             * @param {google.cloud.documentai.v1.Document.ITextAnchor=} [properties] Properties to set
                             */
                            function TextAnchor(properties) {
                                this.textSegments = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * TextAnchor textSegments.
                             * @member {Array.<google.cloud.documentai.v1.Document.TextAnchor.ITextSegment>} textSegments
                             * @memberof google.cloud.documentai.v1.Document.TextAnchor
                             * @instance
                             */
                            TextAnchor.prototype.textSegments = $util.emptyArray;
    
                            /**
                             * TextAnchor content.
                             * @member {string} content
                             * @memberof google.cloud.documentai.v1.Document.TextAnchor
                             * @instance
                             */
                            TextAnchor.prototype.content = "";
    
                            /**
                             * Creates a new TextAnchor instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.Document.TextAnchor
                             * @static
                             * @param {google.cloud.documentai.v1.Document.ITextAnchor=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.Document.TextAnchor} TextAnchor instance
                             */
                            TextAnchor.create = function create(properties) {
                                return new TextAnchor(properties);
                            };
    
                            /**
                             * Encodes the specified TextAnchor message. Does not implicitly {@link google.cloud.documentai.v1.Document.TextAnchor.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.Document.TextAnchor
                             * @static
                             * @param {google.cloud.documentai.v1.Document.ITextAnchor} message TextAnchor message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TextAnchor.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.textSegments != null && message.textSegments.length)
                                    for (var i = 0; i < message.textSegments.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.TextAnchor.TextSegment.encode(message.textSegments[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.content != null && Object.hasOwnProperty.call(message, "content"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.content);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified TextAnchor message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.TextAnchor.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.TextAnchor
                             * @static
                             * @param {google.cloud.documentai.v1.Document.ITextAnchor} message TextAnchor message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TextAnchor.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a TextAnchor message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.Document.TextAnchor
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.Document.TextAnchor} TextAnchor
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TextAnchor.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.TextAnchor();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.textSegments && message.textSegments.length))
                                                message.textSegments = [];
                                            message.textSegments.push($root.google.cloud.documentai.v1.Document.TextAnchor.TextSegment.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 2: {
                                            message.content = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a TextAnchor message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.TextAnchor
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.Document.TextAnchor} TextAnchor
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TextAnchor.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a TextAnchor message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.Document.TextAnchor
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            TextAnchor.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.textSegments != null && message.hasOwnProperty("textSegments")) {
                                    if (!Array.isArray(message.textSegments))
                                        return "textSegments: array expected";
                                    for (var i = 0; i < message.textSegments.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.TextAnchor.TextSegment.verify(message.textSegments[i]);
                                        if (error)
                                            return "textSegments." + error;
                                    }
                                }
                                if (message.content != null && message.hasOwnProperty("content"))
                                    if (!$util.isString(message.content))
                                        return "content: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a TextAnchor message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.Document.TextAnchor
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.Document.TextAnchor} TextAnchor
                             */
                            TextAnchor.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.Document.TextAnchor)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.Document.TextAnchor();
                                if (object.textSegments) {
                                    if (!Array.isArray(object.textSegments))
                                        throw TypeError(".google.cloud.documentai.v1.Document.TextAnchor.textSegments: array expected");
                                    message.textSegments = [];
                                    for (var i = 0; i < object.textSegments.length; ++i) {
                                        if (typeof object.textSegments[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.TextAnchor.textSegments: object expected");
                                        message.textSegments[i] = $root.google.cloud.documentai.v1.Document.TextAnchor.TextSegment.fromObject(object.textSegments[i]);
                                    }
                                }
                                if (object.content != null)
                                    message.content = String(object.content);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a TextAnchor message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.Document.TextAnchor
                             * @static
                             * @param {google.cloud.documentai.v1.Document.TextAnchor} message TextAnchor
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            TextAnchor.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.textSegments = [];
                                if (options.defaults)
                                    object.content = "";
                                if (message.textSegments && message.textSegments.length) {
                                    object.textSegments = [];
                                    for (var j = 0; j < message.textSegments.length; ++j)
                                        object.textSegments[j] = $root.google.cloud.documentai.v1.Document.TextAnchor.TextSegment.toObject(message.textSegments[j], options);
                                }
                                if (message.content != null && message.hasOwnProperty("content"))
                                    object.content = message.content;
                                return object;
                            };
    
                            /**
                             * Converts this TextAnchor to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.Document.TextAnchor
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            TextAnchor.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for TextAnchor
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.Document.TextAnchor
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            TextAnchor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.Document.TextAnchor";
                            };
    
                            TextAnchor.TextSegment = (function() {
    
                                /**
                                 * Properties of a TextSegment.
                                 * @memberof google.cloud.documentai.v1.Document.TextAnchor
                                 * @interface ITextSegment
                                 * @property {number|Long|null} [startIndex] TextSegment startIndex
                                 * @property {number|Long|null} [endIndex] TextSegment endIndex
                                 */
    
                                /**
                                 * Constructs a new TextSegment.
                                 * @memberof google.cloud.documentai.v1.Document.TextAnchor
                                 * @classdesc Represents a TextSegment.
                                 * @implements ITextSegment
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.TextAnchor.ITextSegment=} [properties] Properties to set
                                 */
                                function TextSegment(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * TextSegment startIndex.
                                 * @member {number|Long} startIndex
                                 * @memberof google.cloud.documentai.v1.Document.TextAnchor.TextSegment
                                 * @instance
                                 */
                                TextSegment.prototype.startIndex = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                                /**
                                 * TextSegment endIndex.
                                 * @member {number|Long} endIndex
                                 * @memberof google.cloud.documentai.v1.Document.TextAnchor.TextSegment
                                 * @instance
                                 */
                                TextSegment.prototype.endIndex = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                                /**
                                 * Creates a new TextSegment instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.TextAnchor.TextSegment
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.TextAnchor.ITextSegment=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.TextAnchor.TextSegment} TextSegment instance
                                 */
                                TextSegment.create = function create(properties) {
                                    return new TextSegment(properties);
                                };
    
                                /**
                                 * Encodes the specified TextSegment message. Does not implicitly {@link google.cloud.documentai.v1.Document.TextAnchor.TextSegment.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.TextAnchor.TextSegment
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.TextAnchor.ITextSegment} message TextSegment message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                TextSegment.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.startIndex != null && Object.hasOwnProperty.call(message, "startIndex"))
                                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.startIndex);
                                    if (message.endIndex != null && Object.hasOwnProperty.call(message, "endIndex"))
                                        writer.uint32(/* id 2, wireType 0 =*/16).int64(message.endIndex);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified TextSegment message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.TextAnchor.TextSegment.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.TextAnchor.TextSegment
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.TextAnchor.ITextSegment} message TextSegment message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                TextSegment.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a TextSegment message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.TextAnchor.TextSegment
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.TextAnchor.TextSegment} TextSegment
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                TextSegment.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.TextAnchor.TextSegment();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.startIndex = reader.int64();
                                                break;
                                            }
                                        case 2: {
                                                message.endIndex = reader.int64();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a TextSegment message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.TextAnchor.TextSegment
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.TextAnchor.TextSegment} TextSegment
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                TextSegment.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a TextSegment message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.TextAnchor.TextSegment
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                TextSegment.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.startIndex != null && message.hasOwnProperty("startIndex"))
                                        if (!$util.isInteger(message.startIndex) && !(message.startIndex && $util.isInteger(message.startIndex.low) && $util.isInteger(message.startIndex.high)))
                                            return "startIndex: integer|Long expected";
                                    if (message.endIndex != null && message.hasOwnProperty("endIndex"))
                                        if (!$util.isInteger(message.endIndex) && !(message.endIndex && $util.isInteger(message.endIndex.low) && $util.isInteger(message.endIndex.high)))
                                            return "endIndex: integer|Long expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a TextSegment message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.TextAnchor.TextSegment
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.TextAnchor.TextSegment} TextSegment
                                 */
                                TextSegment.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.TextAnchor.TextSegment)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.TextAnchor.TextSegment();
                                    if (object.startIndex != null)
                                        if ($util.Long)
                                            (message.startIndex = $util.Long.fromValue(object.startIndex)).unsigned = false;
                                        else if (typeof object.startIndex === "string")
                                            message.startIndex = parseInt(object.startIndex, 10);
                                        else if (typeof object.startIndex === "number")
                                            message.startIndex = object.startIndex;
                                        else if (typeof object.startIndex === "object")
                                            message.startIndex = new $util.LongBits(object.startIndex.low >>> 0, object.startIndex.high >>> 0).toNumber();
                                    if (object.endIndex != null)
                                        if ($util.Long)
                                            (message.endIndex = $util.Long.fromValue(object.endIndex)).unsigned = false;
                                        else if (typeof object.endIndex === "string")
                                            message.endIndex = parseInt(object.endIndex, 10);
                                        else if (typeof object.endIndex === "number")
                                            message.endIndex = object.endIndex;
                                        else if (typeof object.endIndex === "object")
                                            message.endIndex = new $util.LongBits(object.endIndex.low >>> 0, object.endIndex.high >>> 0).toNumber();
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a TextSegment message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.TextAnchor.TextSegment
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.TextAnchor.TextSegment} message TextSegment
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                TextSegment.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        if ($util.Long) {
                                            var long = new $util.Long(0, 0, false);
                                            object.startIndex = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                        } else
                                            object.startIndex = options.longs === String ? "0" : 0;
                                        if ($util.Long) {
                                            var long = new $util.Long(0, 0, false);
                                            object.endIndex = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                        } else
                                            object.endIndex = options.longs === String ? "0" : 0;
                                    }
                                    if (message.startIndex != null && message.hasOwnProperty("startIndex"))
                                        if (typeof message.startIndex === "number")
                                            object.startIndex = options.longs === String ? String(message.startIndex) : message.startIndex;
                                        else
                                            object.startIndex = options.longs === String ? $util.Long.prototype.toString.call(message.startIndex) : options.longs === Number ? new $util.LongBits(message.startIndex.low >>> 0, message.startIndex.high >>> 0).toNumber() : message.startIndex;
                                    if (message.endIndex != null && message.hasOwnProperty("endIndex"))
                                        if (typeof message.endIndex === "number")
                                            object.endIndex = options.longs === String ? String(message.endIndex) : message.endIndex;
                                        else
                                            object.endIndex = options.longs === String ? $util.Long.prototype.toString.call(message.endIndex) : options.longs === Number ? new $util.LongBits(message.endIndex.low >>> 0, message.endIndex.high >>> 0).toNumber() : message.endIndex;
                                    return object;
                                };
    
                                /**
                                 * Converts this TextSegment to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.TextAnchor.TextSegment
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                TextSegment.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for TextSegment
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.TextAnchor.TextSegment
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                TextSegment.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.TextAnchor.TextSegment";
                                };
    
                                return TextSegment;
                            })();
    
                            return TextAnchor;
                        })();
    
                        Document.PageAnchor = (function() {
    
                            /**
                             * Properties of a PageAnchor.
                             * @memberof google.cloud.documentai.v1.Document
                             * @interface IPageAnchor
                             * @property {Array.<google.cloud.documentai.v1.Document.PageAnchor.IPageRef>|null} [pageRefs] PageAnchor pageRefs
                             */
    
                            /**
                             * Constructs a new PageAnchor.
                             * @memberof google.cloud.documentai.v1.Document
                             * @classdesc Represents a PageAnchor.
                             * @implements IPageAnchor
                             * @constructor
                             * @param {google.cloud.documentai.v1.Document.IPageAnchor=} [properties] Properties to set
                             */
                            function PageAnchor(properties) {
                                this.pageRefs = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * PageAnchor pageRefs.
                             * @member {Array.<google.cloud.documentai.v1.Document.PageAnchor.IPageRef>} pageRefs
                             * @memberof google.cloud.documentai.v1.Document.PageAnchor
                             * @instance
                             */
                            PageAnchor.prototype.pageRefs = $util.emptyArray;
    
                            /**
                             * Creates a new PageAnchor instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.Document.PageAnchor
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IPageAnchor=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.Document.PageAnchor} PageAnchor instance
                             */
                            PageAnchor.create = function create(properties) {
                                return new PageAnchor(properties);
                            };
    
                            /**
                             * Encodes the specified PageAnchor message. Does not implicitly {@link google.cloud.documentai.v1.Document.PageAnchor.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.Document.PageAnchor
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IPageAnchor} message PageAnchor message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PageAnchor.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.pageRefs != null && message.pageRefs.length)
                                    for (var i = 0; i < message.pageRefs.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.PageAnchor.PageRef.encode(message.pageRefs[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified PageAnchor message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.PageAnchor.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.PageAnchor
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IPageAnchor} message PageAnchor message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PageAnchor.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a PageAnchor message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.Document.PageAnchor
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.Document.PageAnchor} PageAnchor
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PageAnchor.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.PageAnchor();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.pageRefs && message.pageRefs.length))
                                                message.pageRefs = [];
                                            message.pageRefs.push($root.google.cloud.documentai.v1.Document.PageAnchor.PageRef.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a PageAnchor message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.PageAnchor
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.Document.PageAnchor} PageAnchor
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PageAnchor.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a PageAnchor message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.Document.PageAnchor
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            PageAnchor.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.pageRefs != null && message.hasOwnProperty("pageRefs")) {
                                    if (!Array.isArray(message.pageRefs))
                                        return "pageRefs: array expected";
                                    for (var i = 0; i < message.pageRefs.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.PageAnchor.PageRef.verify(message.pageRefs[i]);
                                        if (error)
                                            return "pageRefs." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a PageAnchor message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.Document.PageAnchor
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.Document.PageAnchor} PageAnchor
                             */
                            PageAnchor.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.Document.PageAnchor)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.Document.PageAnchor();
                                if (object.pageRefs) {
                                    if (!Array.isArray(object.pageRefs))
                                        throw TypeError(".google.cloud.documentai.v1.Document.PageAnchor.pageRefs: array expected");
                                    message.pageRefs = [];
                                    for (var i = 0; i < object.pageRefs.length; ++i) {
                                        if (typeof object.pageRefs[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.PageAnchor.pageRefs: object expected");
                                        message.pageRefs[i] = $root.google.cloud.documentai.v1.Document.PageAnchor.PageRef.fromObject(object.pageRefs[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a PageAnchor message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.Document.PageAnchor
                             * @static
                             * @param {google.cloud.documentai.v1.Document.PageAnchor} message PageAnchor
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            PageAnchor.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.pageRefs = [];
                                if (message.pageRefs && message.pageRefs.length) {
                                    object.pageRefs = [];
                                    for (var j = 0; j < message.pageRefs.length; ++j)
                                        object.pageRefs[j] = $root.google.cloud.documentai.v1.Document.PageAnchor.PageRef.toObject(message.pageRefs[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this PageAnchor to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.Document.PageAnchor
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            PageAnchor.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for PageAnchor
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.Document.PageAnchor
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            PageAnchor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.Document.PageAnchor";
                            };
    
                            PageAnchor.PageRef = (function() {
    
                                /**
                                 * Properties of a PageRef.
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor
                                 * @interface IPageRef
                                 * @property {number|Long|null} [page] PageRef page
                                 * @property {google.cloud.documentai.v1.Document.PageAnchor.PageRef.LayoutType|null} [layoutType] PageRef layoutType
                                 * @property {string|null} [layoutId] PageRef layoutId
                                 * @property {google.cloud.documentai.v1.IBoundingPoly|null} [boundingPoly] PageRef boundingPoly
                                 * @property {number|null} [confidence] PageRef confidence
                                 */
    
                                /**
                                 * Constructs a new PageRef.
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor
                                 * @classdesc Represents a PageRef.
                                 * @implements IPageRef
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.PageAnchor.IPageRef=} [properties] Properties to set
                                 */
                                function PageRef(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * PageRef page.
                                 * @member {number|Long} page
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @instance
                                 */
                                PageRef.prototype.page = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                                /**
                                 * PageRef layoutType.
                                 * @member {google.cloud.documentai.v1.Document.PageAnchor.PageRef.LayoutType} layoutType
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @instance
                                 */
                                PageRef.prototype.layoutType = 0;
    
                                /**
                                 * PageRef layoutId.
                                 * @member {string} layoutId
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @instance
                                 */
                                PageRef.prototype.layoutId = "";
    
                                /**
                                 * PageRef boundingPoly.
                                 * @member {google.cloud.documentai.v1.IBoundingPoly|null|undefined} boundingPoly
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @instance
                                 */
                                PageRef.prototype.boundingPoly = null;
    
                                /**
                                 * PageRef confidence.
                                 * @member {number} confidence
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @instance
                                 */
                                PageRef.prototype.confidence = 0;
    
                                /**
                                 * Creates a new PageRef instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.PageAnchor.IPageRef=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.PageAnchor.PageRef} PageRef instance
                                 */
                                PageRef.create = function create(properties) {
                                    return new PageRef(properties);
                                };
    
                                /**
                                 * Encodes the specified PageRef message. Does not implicitly {@link google.cloud.documentai.v1.Document.PageAnchor.PageRef.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.PageAnchor.IPageRef} message PageRef message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                PageRef.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.page != null && Object.hasOwnProperty.call(message, "page"))
                                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.page);
                                    if (message.layoutType != null && Object.hasOwnProperty.call(message, "layoutType"))
                                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.layoutType);
                                    if (message.layoutId != null && Object.hasOwnProperty.call(message, "layoutId"))
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.layoutId);
                                    if (message.boundingPoly != null && Object.hasOwnProperty.call(message, "boundingPoly"))
                                        $root.google.cloud.documentai.v1.BoundingPoly.encode(message.boundingPoly, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                    if (message.confidence != null && Object.hasOwnProperty.call(message, "confidence"))
                                        writer.uint32(/* id 5, wireType 5 =*/45).float(message.confidence);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified PageRef message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.PageAnchor.PageRef.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.PageAnchor.IPageRef} message PageRef message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                PageRef.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a PageRef message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.PageAnchor.PageRef} PageRef
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                PageRef.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.PageAnchor.PageRef();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.page = reader.int64();
                                                break;
                                            }
                                        case 2: {
                                                message.layoutType = reader.int32();
                                                break;
                                            }
                                        case 3: {
                                                message.layoutId = reader.string();
                                                break;
                                            }
                                        case 4: {
                                                message.boundingPoly = $root.google.cloud.documentai.v1.BoundingPoly.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 5: {
                                                message.confidence = reader.float();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a PageRef message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.PageAnchor.PageRef} PageRef
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                PageRef.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a PageRef message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                PageRef.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.page != null && message.hasOwnProperty("page"))
                                        if (!$util.isInteger(message.page) && !(message.page && $util.isInteger(message.page.low) && $util.isInteger(message.page.high)))
                                            return "page: integer|Long expected";
                                    if (message.layoutType != null && message.hasOwnProperty("layoutType"))
                                        switch (message.layoutType) {
                                        default:
                                            return "layoutType: enum value expected";
                                        case 0:
                                        case 1:
                                        case 2:
                                        case 3:
                                        case 4:
                                        case 5:
                                        case 6:
                                        case 7:
                                            break;
                                        }
                                    if (message.layoutId != null && message.hasOwnProperty("layoutId"))
                                        if (!$util.isString(message.layoutId))
                                            return "layoutId: string expected";
                                    if (message.boundingPoly != null && message.hasOwnProperty("boundingPoly")) {
                                        var error = $root.google.cloud.documentai.v1.BoundingPoly.verify(message.boundingPoly);
                                        if (error)
                                            return "boundingPoly." + error;
                                    }
                                    if (message.confidence != null && message.hasOwnProperty("confidence"))
                                        if (typeof message.confidence !== "number")
                                            return "confidence: number expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a PageRef message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.PageAnchor.PageRef} PageRef
                                 */
                                PageRef.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.PageAnchor.PageRef)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.PageAnchor.PageRef();
                                    if (object.page != null)
                                        if ($util.Long)
                                            (message.page = $util.Long.fromValue(object.page)).unsigned = false;
                                        else if (typeof object.page === "string")
                                            message.page = parseInt(object.page, 10);
                                        else if (typeof object.page === "number")
                                            message.page = object.page;
                                        else if (typeof object.page === "object")
                                            message.page = new $util.LongBits(object.page.low >>> 0, object.page.high >>> 0).toNumber();
                                    switch (object.layoutType) {
                                    default:
                                        if (typeof object.layoutType === "number") {
                                            message.layoutType = object.layoutType;
                                            break;
                                        }
                                        break;
                                    case "LAYOUT_TYPE_UNSPECIFIED":
                                    case 0:
                                        message.layoutType = 0;
                                        break;
                                    case "BLOCK":
                                    case 1:
                                        message.layoutType = 1;
                                        break;
                                    case "PARAGRAPH":
                                    case 2:
                                        message.layoutType = 2;
                                        break;
                                    case "LINE":
                                    case 3:
                                        message.layoutType = 3;
                                        break;
                                    case "TOKEN":
                                    case 4:
                                        message.layoutType = 4;
                                        break;
                                    case "VISUAL_ELEMENT":
                                    case 5:
                                        message.layoutType = 5;
                                        break;
                                    case "TABLE":
                                    case 6:
                                        message.layoutType = 6;
                                        break;
                                    case "FORM_FIELD":
                                    case 7:
                                        message.layoutType = 7;
                                        break;
                                    }
                                    if (object.layoutId != null)
                                        message.layoutId = String(object.layoutId);
                                    if (object.boundingPoly != null) {
                                        if (typeof object.boundingPoly !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.PageAnchor.PageRef.boundingPoly: object expected");
                                        message.boundingPoly = $root.google.cloud.documentai.v1.BoundingPoly.fromObject(object.boundingPoly);
                                    }
                                    if (object.confidence != null)
                                        message.confidence = Number(object.confidence);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a PageRef message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.PageAnchor.PageRef} message PageRef
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                PageRef.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        if ($util.Long) {
                                            var long = new $util.Long(0, 0, false);
                                            object.page = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                        } else
                                            object.page = options.longs === String ? "0" : 0;
                                        object.layoutType = options.enums === String ? "LAYOUT_TYPE_UNSPECIFIED" : 0;
                                        object.layoutId = "";
                                        object.boundingPoly = null;
                                        object.confidence = 0;
                                    }
                                    if (message.page != null && message.hasOwnProperty("page"))
                                        if (typeof message.page === "number")
                                            object.page = options.longs === String ? String(message.page) : message.page;
                                        else
                                            object.page = options.longs === String ? $util.Long.prototype.toString.call(message.page) : options.longs === Number ? new $util.LongBits(message.page.low >>> 0, message.page.high >>> 0).toNumber() : message.page;
                                    if (message.layoutType != null && message.hasOwnProperty("layoutType"))
                                        object.layoutType = options.enums === String ? $root.google.cloud.documentai.v1.Document.PageAnchor.PageRef.LayoutType[message.layoutType] === undefined ? message.layoutType : $root.google.cloud.documentai.v1.Document.PageAnchor.PageRef.LayoutType[message.layoutType] : message.layoutType;
                                    if (message.layoutId != null && message.hasOwnProperty("layoutId"))
                                        object.layoutId = message.layoutId;
                                    if (message.boundingPoly != null && message.hasOwnProperty("boundingPoly"))
                                        object.boundingPoly = $root.google.cloud.documentai.v1.BoundingPoly.toObject(message.boundingPoly, options);
                                    if (message.confidence != null && message.hasOwnProperty("confidence"))
                                        object.confidence = options.json && !isFinite(message.confidence) ? String(message.confidence) : message.confidence;
                                    return object;
                                };
    
                                /**
                                 * Converts this PageRef to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                PageRef.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for PageRef
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                PageRef.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.PageAnchor.PageRef";
                                };
    
                                /**
                                 * LayoutType enum.
                                 * @name google.cloud.documentai.v1.Document.PageAnchor.PageRef.LayoutType
                                 * @enum {number}
                                 * @property {number} LAYOUT_TYPE_UNSPECIFIED=0 LAYOUT_TYPE_UNSPECIFIED value
                                 * @property {number} BLOCK=1 BLOCK value
                                 * @property {number} PARAGRAPH=2 PARAGRAPH value
                                 * @property {number} LINE=3 LINE value
                                 * @property {number} TOKEN=4 TOKEN value
                                 * @property {number} VISUAL_ELEMENT=5 VISUAL_ELEMENT value
                                 * @property {number} TABLE=6 TABLE value
                                 * @property {number} FORM_FIELD=7 FORM_FIELD value
                                 */
                                PageRef.LayoutType = (function() {
                                    var valuesById = {}, values = Object.create(valuesById);
                                    values[valuesById[0] = "LAYOUT_TYPE_UNSPECIFIED"] = 0;
                                    values[valuesById[1] = "BLOCK"] = 1;
                                    values[valuesById[2] = "PARAGRAPH"] = 2;
                                    values[valuesById[3] = "LINE"] = 3;
                                    values[valuesById[4] = "TOKEN"] = 4;
                                    values[valuesById[5] = "VISUAL_ELEMENT"] = 5;
                                    values[valuesById[6] = "TABLE"] = 6;
                                    values[valuesById[7] = "FORM_FIELD"] = 7;
                                    return values;
                                })();
    
                                return PageRef;
                            })();
    
                            return PageAnchor;
                        })();
    
                        Document.Provenance = (function() {
    
                            /**
                             * Properties of a Provenance.
                             * @memberof google.cloud.documentai.v1.Document
                             * @interface IProvenance
                             * @property {number|null} [revision] Provenance revision
                             * @property {number|null} [id] Provenance id
                             * @property {Array.<google.cloud.documentai.v1.Document.Provenance.IParent>|null} [parents] Provenance parents
                             * @property {google.cloud.documentai.v1.Document.Provenance.OperationType|null} [type] Provenance type
                             */
    
                            /**
                             * Constructs a new Provenance.
                             * @memberof google.cloud.documentai.v1.Document
                             * @classdesc Represents a Provenance.
                             * @implements IProvenance
                             * @constructor
                             * @param {google.cloud.documentai.v1.Document.IProvenance=} [properties] Properties to set
                             */
                            function Provenance(properties) {
                                this.parents = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Provenance revision.
                             * @member {number} revision
                             * @memberof google.cloud.documentai.v1.Document.Provenance
                             * @instance
                             */
                            Provenance.prototype.revision = 0;
    
                            /**
                             * Provenance id.
                             * @member {number} id
                             * @memberof google.cloud.documentai.v1.Document.Provenance
                             * @instance
                             */
                            Provenance.prototype.id = 0;
    
                            /**
                             * Provenance parents.
                             * @member {Array.<google.cloud.documentai.v1.Document.Provenance.IParent>} parents
                             * @memberof google.cloud.documentai.v1.Document.Provenance
                             * @instance
                             */
                            Provenance.prototype.parents = $util.emptyArray;
    
                            /**
                             * Provenance type.
                             * @member {google.cloud.documentai.v1.Document.Provenance.OperationType} type
                             * @memberof google.cloud.documentai.v1.Document.Provenance
                             * @instance
                             */
                            Provenance.prototype.type = 0;
    
                            /**
                             * Creates a new Provenance instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.Document.Provenance
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IProvenance=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.Document.Provenance} Provenance instance
                             */
                            Provenance.create = function create(properties) {
                                return new Provenance(properties);
                            };
    
                            /**
                             * Encodes the specified Provenance message. Does not implicitly {@link google.cloud.documentai.v1.Document.Provenance.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.Document.Provenance
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IProvenance} message Provenance message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Provenance.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.revision != null && Object.hasOwnProperty.call(message, "revision"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.revision);
                                if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.id);
                                if (message.parents != null && message.parents.length)
                                    for (var i = 0; i < message.parents.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.Provenance.Parent.encode(message.parents[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.type);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Provenance message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Provenance.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.Provenance
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IProvenance} message Provenance message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Provenance.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Provenance message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.Document.Provenance
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.Document.Provenance} Provenance
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Provenance.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Provenance();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.revision = reader.int32();
                                            break;
                                        }
                                    case 2: {
                                            message.id = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.parents && message.parents.length))
                                                message.parents = [];
                                            message.parents.push($root.google.cloud.documentai.v1.Document.Provenance.Parent.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 4: {
                                            message.type = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Provenance message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.Provenance
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.Document.Provenance} Provenance
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Provenance.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Provenance message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.Document.Provenance
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Provenance.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.revision != null && message.hasOwnProperty("revision"))
                                    if (!$util.isInteger(message.revision))
                                        return "revision: integer expected";
                                if (message.id != null && message.hasOwnProperty("id"))
                                    if (!$util.isInteger(message.id))
                                        return "id: integer expected";
                                if (message.parents != null && message.hasOwnProperty("parents")) {
                                    if (!Array.isArray(message.parents))
                                        return "parents: array expected";
                                    for (var i = 0; i < message.parents.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.Provenance.Parent.verify(message.parents[i]);
                                        if (error)
                                            return "parents." + error;
                                    }
                                }
                                if (message.type != null && message.hasOwnProperty("type"))
                                    switch (message.type) {
                                    default:
                                        return "type: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 7:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a Provenance message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.Document.Provenance
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.Document.Provenance} Provenance
                             */
                            Provenance.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.Document.Provenance)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.Document.Provenance();
                                if (object.revision != null)
                                    message.revision = object.revision | 0;
                                if (object.id != null)
                                    message.id = object.id | 0;
                                if (object.parents) {
                                    if (!Array.isArray(object.parents))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Provenance.parents: array expected");
                                    message.parents = [];
                                    for (var i = 0; i < object.parents.length; ++i) {
                                        if (typeof object.parents[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Provenance.parents: object expected");
                                        message.parents[i] = $root.google.cloud.documentai.v1.Document.Provenance.Parent.fromObject(object.parents[i]);
                                    }
                                }
                                switch (object.type) {
                                default:
                                    if (typeof object.type === "number") {
                                        message.type = object.type;
                                        break;
                                    }
                                    break;
                                case "OPERATION_TYPE_UNSPECIFIED":
                                case 0:
                                    message.type = 0;
                                    break;
                                case "ADD":
                                case 1:
                                    message.type = 1;
                                    break;
                                case "REMOVE":
                                case 2:
                                    message.type = 2;
                                    break;
                                case "UPDATE":
                                case 7:
                                    message.type = 7;
                                    break;
                                case "REPLACE":
                                case 3:
                                    message.type = 3;
                                    break;
                                case "EVAL_REQUESTED":
                                case 4:
                                    message.type = 4;
                                    break;
                                case "EVAL_APPROVED":
                                case 5:
                                    message.type = 5;
                                    break;
                                case "EVAL_SKIPPED":
                                case 6:
                                    message.type = 6;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Provenance message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.Document.Provenance
                             * @static
                             * @param {google.cloud.documentai.v1.Document.Provenance} message Provenance
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Provenance.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.parents = [];
                                if (options.defaults) {
                                    object.revision = 0;
                                    object.id = 0;
                                    object.type = options.enums === String ? "OPERATION_TYPE_UNSPECIFIED" : 0;
                                }
                                if (message.revision != null && message.hasOwnProperty("revision"))
                                    object.revision = message.revision;
                                if (message.id != null && message.hasOwnProperty("id"))
                                    object.id = message.id;
                                if (message.parents && message.parents.length) {
                                    object.parents = [];
                                    for (var j = 0; j < message.parents.length; ++j)
                                        object.parents[j] = $root.google.cloud.documentai.v1.Document.Provenance.Parent.toObject(message.parents[j], options);
                                }
                                if (message.type != null && message.hasOwnProperty("type"))
                                    object.type = options.enums === String ? $root.google.cloud.documentai.v1.Document.Provenance.OperationType[message.type] === undefined ? message.type : $root.google.cloud.documentai.v1.Document.Provenance.OperationType[message.type] : message.type;
                                return object;
                            };
    
                            /**
                             * Converts this Provenance to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.Document.Provenance
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Provenance.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Provenance
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.Document.Provenance
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Provenance.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Provenance";
                            };
    
                            Provenance.Parent = (function() {
    
                                /**
                                 * Properties of a Parent.
                                 * @memberof google.cloud.documentai.v1.Document.Provenance
                                 * @interface IParent
                                 * @property {number|null} [revision] Parent revision
                                 * @property {number|null} [index] Parent index
                                 * @property {number|null} [id] Parent id
                                 */
    
                                /**
                                 * Constructs a new Parent.
                                 * @memberof google.cloud.documentai.v1.Document.Provenance
                                 * @classdesc Represents a Parent.
                                 * @implements IParent
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Provenance.IParent=} [properties] Properties to set
                                 */
                                function Parent(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * Parent revision.
                                 * @member {number} revision
                                 * @memberof google.cloud.documentai.v1.Document.Provenance.Parent
                                 * @instance
                                 */
                                Parent.prototype.revision = 0;
    
                                /**
                                 * Parent index.
                                 * @member {number} index
                                 * @memberof google.cloud.documentai.v1.Document.Provenance.Parent
                                 * @instance
                                 */
                                Parent.prototype.index = 0;
    
                                /**
                                 * Parent id.
                                 * @member {number} id
                                 * @memberof google.cloud.documentai.v1.Document.Provenance.Parent
                                 * @instance
                                 */
                                Parent.prototype.id = 0;
    
                                /**
                                 * Creates a new Parent instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Provenance.Parent
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Provenance.IParent=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Provenance.Parent} Parent instance
                                 */
                                Parent.create = function create(properties) {
                                    return new Parent(properties);
                                };
    
                                /**
                                 * Encodes the specified Parent message. Does not implicitly {@link google.cloud.documentai.v1.Document.Provenance.Parent.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Provenance.Parent
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Provenance.IParent} message Parent message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Parent.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.revision != null && Object.hasOwnProperty.call(message, "revision"))
                                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.revision);
                                    if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.id);
                                    if (message.index != null && Object.hasOwnProperty.call(message, "index"))
                                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.index);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified Parent message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Provenance.Parent.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Provenance.Parent
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Provenance.IParent} message Parent message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Parent.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a Parent message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Provenance.Parent
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Provenance.Parent} Parent
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Parent.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Provenance.Parent();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.revision = reader.int32();
                                                break;
                                            }
                                        case 3: {
                                                message.index = reader.int32();
                                                break;
                                            }
                                        case 2: {
                                                message.id = reader.int32();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a Parent message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Provenance.Parent
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Provenance.Parent} Parent
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Parent.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a Parent message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Provenance.Parent
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                Parent.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.revision != null && message.hasOwnProperty("revision"))
                                        if (!$util.isInteger(message.revision))
                                            return "revision: integer expected";
                                    if (message.index != null && message.hasOwnProperty("index"))
                                        if (!$util.isInteger(message.index))
                                            return "index: integer expected";
                                    if (message.id != null && message.hasOwnProperty("id"))
                                        if (!$util.isInteger(message.id))
                                            return "id: integer expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a Parent message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Provenance.Parent
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Provenance.Parent} Parent
                                 */
                                Parent.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Provenance.Parent)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Provenance.Parent();
                                    if (object.revision != null)
                                        message.revision = object.revision | 0;
                                    if (object.index != null)
                                        message.index = object.index | 0;
                                    if (object.id != null)
                                        message.id = object.id | 0;
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a Parent message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Provenance.Parent
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Provenance.Parent} message Parent
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                Parent.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.revision = 0;
                                        object.id = 0;
                                        object.index = 0;
                                    }
                                    if (message.revision != null && message.hasOwnProperty("revision"))
                                        object.revision = message.revision;
                                    if (message.id != null && message.hasOwnProperty("id"))
                                        object.id = message.id;
                                    if (message.index != null && message.hasOwnProperty("index"))
                                        object.index = message.index;
                                    return object;
                                };
    
                                /**
                                 * Converts this Parent to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Provenance.Parent
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                Parent.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for Parent
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Provenance.Parent
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                Parent.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Provenance.Parent";
                                };
    
                                return Parent;
                            })();
    
                            /**
                             * OperationType enum.
                             * @name google.cloud.documentai.v1.Document.Provenance.OperationType
                             * @enum {number}
                             * @property {number} OPERATION_TYPE_UNSPECIFIED=0 OPERATION_TYPE_UNSPECIFIED value
                             * @property {number} ADD=1 ADD value
                             * @property {number} REMOVE=2 REMOVE value
                             * @property {number} UPDATE=7 UPDATE value
                             * @property {number} REPLACE=3 REPLACE value
                             * @property {number} EVAL_REQUESTED=4 EVAL_REQUESTED value
                             * @property {number} EVAL_APPROVED=5 EVAL_APPROVED value
                             * @property {number} EVAL_SKIPPED=6 EVAL_SKIPPED value
                             */
                            Provenance.OperationType = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "OPERATION_TYPE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "ADD"] = 1;
                                values[valuesById[2] = "REMOVE"] = 2;
                                values[valuesById[7] = "UPDATE"] = 7;
                                values[valuesById[3] = "REPLACE"] = 3;
                                values[valuesById[4] = "EVAL_REQUESTED"] = 4;
                                values[valuesById[5] = "EVAL_APPROVED"] = 5;
                                values[valuesById[6] = "EVAL_SKIPPED"] = 6;
                                return values;
                            })();
    
                            return Provenance;
                        })();
    
                        Document.Revision = (function() {
    
                            /**
                             * Properties of a Revision.
                             * @memberof google.cloud.documentai.v1.Document
                             * @interface IRevision
                             * @property {string|null} [agent] Revision agent
                             * @property {string|null} [processor] Revision processor
                             * @property {string|null} [id] Revision id
                             * @property {Array.<number>|null} [parent] Revision parent
                             * @property {Array.<string>|null} [parentIds] Revision parentIds
                             * @property {google.protobuf.ITimestamp|null} [createTime] Revision createTime
                             * @property {google.cloud.documentai.v1.Document.Revision.IHumanReview|null} [humanReview] Revision humanReview
                             */
    
                            /**
                             * Constructs a new Revision.
                             * @memberof google.cloud.documentai.v1.Document
                             * @classdesc Represents a Revision.
                             * @implements IRevision
                             * @constructor
                             * @param {google.cloud.documentai.v1.Document.IRevision=} [properties] Properties to set
                             */
                            function Revision(properties) {
                                this.parent = [];
                                this.parentIds = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Revision agent.
                             * @member {string|null|undefined} agent
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @instance
                             */
                            Revision.prototype.agent = null;
    
                            /**
                             * Revision processor.
                             * @member {string|null|undefined} processor
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @instance
                             */
                            Revision.prototype.processor = null;
    
                            /**
                             * Revision id.
                             * @member {string} id
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @instance
                             */
                            Revision.prototype.id = "";
    
                            /**
                             * Revision parent.
                             * @member {Array.<number>} parent
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @instance
                             */
                            Revision.prototype.parent = $util.emptyArray;
    
                            /**
                             * Revision parentIds.
                             * @member {Array.<string>} parentIds
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @instance
                             */
                            Revision.prototype.parentIds = $util.emptyArray;
    
                            /**
                             * Revision createTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} createTime
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @instance
                             */
                            Revision.prototype.createTime = null;
    
                            /**
                             * Revision humanReview.
                             * @member {google.cloud.documentai.v1.Document.Revision.IHumanReview|null|undefined} humanReview
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @instance
                             */
                            Revision.prototype.humanReview = null;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * Revision source.
                             * @member {"agent"|"processor"|undefined} source
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @instance
                             */
                            Object.defineProperty(Revision.prototype, "source", {
                                get: $util.oneOfGetter($oneOfFields = ["agent", "processor"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new Revision instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IRevision=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.Document.Revision} Revision instance
                             */
                            Revision.create = function create(properties) {
                                return new Revision(properties);
                            };
    
                            /**
                             * Encodes the specified Revision message. Does not implicitly {@link google.cloud.documentai.v1.Document.Revision.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IRevision} message Revision message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Revision.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);
                                if (message.parent != null && message.parent.length) {
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork();
                                    for (var i = 0; i < message.parent.length; ++i)
                                        writer.int32(message.parent[i]);
                                    writer.ldelim();
                                }
                                if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                    $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.agent != null && Object.hasOwnProperty.call(message, "agent"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.agent);
                                if (message.processor != null && Object.hasOwnProperty.call(message, "processor"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.processor);
                                if (message.humanReview != null && Object.hasOwnProperty.call(message, "humanReview"))
                                    $root.google.cloud.documentai.v1.Document.Revision.HumanReview.encode(message.humanReview, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                                if (message.parentIds != null && message.parentIds.length)
                                    for (var i = 0; i < message.parentIds.length; ++i)
                                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.parentIds[i]);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Revision message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Revision.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IRevision} message Revision message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Revision.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Revision message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.Document.Revision} Revision
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Revision.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Revision();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 4: {
                                            message.agent = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.processor = reader.string();
                                            break;
                                        }
                                    case 1: {
                                            message.id = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            if (!(message.parent && message.parent.length))
                                                message.parent = [];
                                            if ((tag & 7) === 2) {
                                                var end2 = reader.uint32() + reader.pos;
                                                while (reader.pos < end2)
                                                    message.parent.push(reader.int32());
                                            } else
                                                message.parent.push(reader.int32());
                                            break;
                                        }
                                    case 7: {
                                            if (!(message.parentIds && message.parentIds.length))
                                                message.parentIds = [];
                                            message.parentIds.push(reader.string());
                                            break;
                                        }
                                    case 3: {
                                            message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 6: {
                                            message.humanReview = $root.google.cloud.documentai.v1.Document.Revision.HumanReview.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Revision message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.Document.Revision} Revision
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Revision.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Revision message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Revision.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.agent != null && message.hasOwnProperty("agent")) {
                                    properties.source = 1;
                                    if (!$util.isString(message.agent))
                                        return "agent: string expected";
                                }
                                if (message.processor != null && message.hasOwnProperty("processor")) {
                                    if (properties.source === 1)
                                        return "source: multiple values";
                                    properties.source = 1;
                                    if (!$util.isString(message.processor))
                                        return "processor: string expected";
                                }
                                if (message.id != null && message.hasOwnProperty("id"))
                                    if (!$util.isString(message.id))
                                        return "id: string expected";
                                if (message.parent != null && message.hasOwnProperty("parent")) {
                                    if (!Array.isArray(message.parent))
                                        return "parent: array expected";
                                    for (var i = 0; i < message.parent.length; ++i)
                                        if (!$util.isInteger(message.parent[i]))
                                            return "parent: integer[] expected";
                                }
                                if (message.parentIds != null && message.hasOwnProperty("parentIds")) {
                                    if (!Array.isArray(message.parentIds))
                                        return "parentIds: array expected";
                                    for (var i = 0; i < message.parentIds.length; ++i)
                                        if (!$util.isString(message.parentIds[i]))
                                            return "parentIds: string[] expected";
                                }
                                if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                    if (error)
                                        return "createTime." + error;
                                }
                                if (message.humanReview != null && message.hasOwnProperty("humanReview")) {
                                    var error = $root.google.cloud.documentai.v1.Document.Revision.HumanReview.verify(message.humanReview);
                                    if (error)
                                        return "humanReview." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a Revision message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.Document.Revision} Revision
                             */
                            Revision.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.Document.Revision)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.Document.Revision();
                                if (object.agent != null)
                                    message.agent = String(object.agent);
                                if (object.processor != null)
                                    message.processor = String(object.processor);
                                if (object.id != null)
                                    message.id = String(object.id);
                                if (object.parent) {
                                    if (!Array.isArray(object.parent))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Revision.parent: array expected");
                                    message.parent = [];
                                    for (var i = 0; i < object.parent.length; ++i)
                                        message.parent[i] = object.parent[i] | 0;
                                }
                                if (object.parentIds) {
                                    if (!Array.isArray(object.parentIds))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Revision.parentIds: array expected");
                                    message.parentIds = [];
                                    for (var i = 0; i < object.parentIds.length; ++i)
                                        message.parentIds[i] = String(object.parentIds[i]);
                                }
                                if (object.createTime != null) {
                                    if (typeof object.createTime !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Revision.createTime: object expected");
                                    message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                                }
                                if (object.humanReview != null) {
                                    if (typeof object.humanReview !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Revision.humanReview: object expected");
                                    message.humanReview = $root.google.cloud.documentai.v1.Document.Revision.HumanReview.fromObject(object.humanReview);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Revision message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @static
                             * @param {google.cloud.documentai.v1.Document.Revision} message Revision
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Revision.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.parent = [];
                                    object.parentIds = [];
                                }
                                if (options.defaults) {
                                    object.id = "";
                                    object.createTime = null;
                                    object.humanReview = null;
                                }
                                if (message.id != null && message.hasOwnProperty("id"))
                                    object.id = message.id;
                                if (message.parent && message.parent.length) {
                                    object.parent = [];
                                    for (var j = 0; j < message.parent.length; ++j)
                                        object.parent[j] = message.parent[j];
                                }
                                if (message.createTime != null && message.hasOwnProperty("createTime"))
                                    object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                                if (message.agent != null && message.hasOwnProperty("agent")) {
                                    object.agent = message.agent;
                                    if (options.oneofs)
                                        object.source = "agent";
                                }
                                if (message.processor != null && message.hasOwnProperty("processor")) {
                                    object.processor = message.processor;
                                    if (options.oneofs)
                                        object.source = "processor";
                                }
                                if (message.humanReview != null && message.hasOwnProperty("humanReview"))
                                    object.humanReview = $root.google.cloud.documentai.v1.Document.Revision.HumanReview.toObject(message.humanReview, options);
                                if (message.parentIds && message.parentIds.length) {
                                    object.parentIds = [];
                                    for (var j = 0; j < message.parentIds.length; ++j)
                                        object.parentIds[j] = message.parentIds[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this Revision to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Revision.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Revision
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Revision.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Revision";
                            };
    
                            Revision.HumanReview = (function() {
    
                                /**
                                 * Properties of a HumanReview.
                                 * @memberof google.cloud.documentai.v1.Document.Revision
                                 * @interface IHumanReview
                                 * @property {string|null} [state] HumanReview state
                                 * @property {string|null} [stateMessage] HumanReview stateMessage
                                 */
    
                                /**
                                 * Constructs a new HumanReview.
                                 * @memberof google.cloud.documentai.v1.Document.Revision
                                 * @classdesc Represents a HumanReview.
                                 * @implements IHumanReview
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Revision.IHumanReview=} [properties] Properties to set
                                 */
                                function HumanReview(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * HumanReview state.
                                 * @member {string} state
                                 * @memberof google.cloud.documentai.v1.Document.Revision.HumanReview
                                 * @instance
                                 */
                                HumanReview.prototype.state = "";
    
                                /**
                                 * HumanReview stateMessage.
                                 * @member {string} stateMessage
                                 * @memberof google.cloud.documentai.v1.Document.Revision.HumanReview
                                 * @instance
                                 */
                                HumanReview.prototype.stateMessage = "";
    
                                /**
                                 * Creates a new HumanReview instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Revision.HumanReview
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Revision.IHumanReview=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Revision.HumanReview} HumanReview instance
                                 */
                                HumanReview.create = function create(properties) {
                                    return new HumanReview(properties);
                                };
    
                                /**
                                 * Encodes the specified HumanReview message. Does not implicitly {@link google.cloud.documentai.v1.Document.Revision.HumanReview.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Revision.HumanReview
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Revision.IHumanReview} message HumanReview message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                HumanReview.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.state);
                                    if (message.stateMessage != null && Object.hasOwnProperty.call(message, "stateMessage"))
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.stateMessage);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified HumanReview message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Revision.HumanReview.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Revision.HumanReview
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Revision.IHumanReview} message HumanReview message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                HumanReview.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a HumanReview message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Revision.HumanReview
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Revision.HumanReview} HumanReview
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                HumanReview.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Revision.HumanReview();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.state = reader.string();
                                                break;
                                            }
                                        case 2: {
                                                message.stateMessage = reader.string();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a HumanReview message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Revision.HumanReview
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Revision.HumanReview} HumanReview
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                HumanReview.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a HumanReview message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Revision.HumanReview
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                HumanReview.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.state != null && message.hasOwnProperty("state"))
                                        if (!$util.isString(message.state))
                                            return "state: string expected";
                                    if (message.stateMessage != null && message.hasOwnProperty("stateMessage"))
                                        if (!$util.isString(message.stateMessage))
                                            return "stateMessage: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a HumanReview message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Revision.HumanReview
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Revision.HumanReview} HumanReview
                                 */
                                HumanReview.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Revision.HumanReview)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Revision.HumanReview();
                                    if (object.state != null)
                                        message.state = String(object.state);
                                    if (object.stateMessage != null)
                                        message.stateMessage = String(object.stateMessage);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a HumanReview message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Revision.HumanReview
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Revision.HumanReview} message HumanReview
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                HumanReview.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.state = "";
                                        object.stateMessage = "";
                                    }
                                    if (message.state != null && message.hasOwnProperty("state"))
                                        object.state = message.state;
                                    if (message.stateMessage != null && message.hasOwnProperty("stateMessage"))
                                        object.stateMessage = message.stateMessage;
                                    return object;
                                };
    
                                /**
                                 * Converts this HumanReview to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Revision.HumanReview
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                HumanReview.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for HumanReview
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Revision.HumanReview
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                HumanReview.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Revision.HumanReview";
                                };
    
                                return HumanReview;
                            })();
    
                            return Revision;
                        })();
    
                        Document.TextChange = (function() {
    
                            /**
                             * Properties of a TextChange.
                             * @memberof google.cloud.documentai.v1.Document
                             * @interface ITextChange
                             * @property {google.cloud.documentai.v1.Document.ITextAnchor|null} [textAnchor] TextChange textAnchor
                             * @property {string|null} [changedText] TextChange changedText
                             * @property {Array.<google.cloud.documentai.v1.Document.IProvenance>|null} [provenance] TextChange provenance
                             */
    
                            /**
                             * Constructs a new TextChange.
                             * @memberof google.cloud.documentai.v1.Document
                             * @classdesc Represents a TextChange.
                             * @implements ITextChange
                             * @constructor
                             * @param {google.cloud.documentai.v1.Document.ITextChange=} [properties] Properties to set
                             */
                            function TextChange(properties) {
                                this.provenance = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * TextChange textAnchor.
                             * @member {google.cloud.documentai.v1.Document.ITextAnchor|null|undefined} textAnchor
                             * @memberof google.cloud.documentai.v1.Document.TextChange
                             * @instance
                             */
                            TextChange.prototype.textAnchor = null;
    
                            /**
                             * TextChange changedText.
                             * @member {string} changedText
                             * @memberof google.cloud.documentai.v1.Document.TextChange
                             * @instance
                             */
                            TextChange.prototype.changedText = "";
    
                            /**
                             * TextChange provenance.
                             * @member {Array.<google.cloud.documentai.v1.Document.IProvenance>} provenance
                             * @memberof google.cloud.documentai.v1.Document.TextChange
                             * @instance
                             */
                            TextChange.prototype.provenance = $util.emptyArray;
    
                            /**
                             * Creates a new TextChange instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.Document.TextChange
                             * @static
                             * @param {google.cloud.documentai.v1.Document.ITextChange=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.Document.TextChange} TextChange instance
                             */
                            TextChange.create = function create(properties) {
                                return new TextChange(properties);
                            };
    
                            /**
                             * Encodes the specified TextChange message. Does not implicitly {@link google.cloud.documentai.v1.Document.TextChange.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.Document.TextChange
                             * @static
                             * @param {google.cloud.documentai.v1.Document.ITextChange} message TextChange message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TextChange.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.textAnchor != null && Object.hasOwnProperty.call(message, "textAnchor"))
                                    $root.google.cloud.documentai.v1.Document.TextAnchor.encode(message.textAnchor, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.changedText != null && Object.hasOwnProperty.call(message, "changedText"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.changedText);
                                if (message.provenance != null && message.provenance.length)
                                    for (var i = 0; i < message.provenance.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.Provenance.encode(message.provenance[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified TextChange message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.TextChange.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.TextChange
                             * @static
                             * @param {google.cloud.documentai.v1.Document.ITextChange} message TextChange message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TextChange.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a TextChange message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.Document.TextChange
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.Document.TextChange} TextChange
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TextChange.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.TextChange();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.textAnchor = $root.google.cloud.documentai.v1.Document.TextAnchor.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.changedText = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.provenance && message.provenance.length))
                                                message.provenance = [];
                                            message.provenance.push($root.google.cloud.documentai.v1.Document.Provenance.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a TextChange message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.TextChange
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.Document.TextChange} TextChange
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TextChange.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a TextChange message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.Document.TextChange
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            TextChange.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.textAnchor != null && message.hasOwnProperty("textAnchor")) {
                                    var error = $root.google.cloud.documentai.v1.Document.TextAnchor.verify(message.textAnchor);
                                    if (error)
                                        return "textAnchor." + error;
                                }
                                if (message.changedText != null && message.hasOwnProperty("changedText"))
                                    if (!$util.isString(message.changedText))
                                        return "changedText: string expected";
                                if (message.provenance != null && message.hasOwnProperty("provenance")) {
                                    if (!Array.isArray(message.provenance))
                                        return "provenance: array expected";
                                    for (var i = 0; i < message.provenance.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.Provenance.verify(message.provenance[i]);
                                        if (error)
                                            return "provenance." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a TextChange message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.Document.TextChange
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.Document.TextChange} TextChange
                             */
                            TextChange.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.Document.TextChange)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.Document.TextChange();
                                if (object.textAnchor != null) {
                                    if (typeof object.textAnchor !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.TextChange.textAnchor: object expected");
                                    message.textAnchor = $root.google.cloud.documentai.v1.Document.TextAnchor.fromObject(object.textAnchor);
                                }
                                if (object.changedText != null)
                                    message.changedText = String(object.changedText);
                                if (object.provenance) {
                                    if (!Array.isArray(object.provenance))
                                        throw TypeError(".google.cloud.documentai.v1.Document.TextChange.provenance: array expected");
                                    message.provenance = [];
                                    for (var i = 0; i < object.provenance.length; ++i) {
                                        if (typeof object.provenance[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.TextChange.provenance: object expected");
                                        message.provenance[i] = $root.google.cloud.documentai.v1.Document.Provenance.fromObject(object.provenance[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a TextChange message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.Document.TextChange
                             * @static
                             * @param {google.cloud.documentai.v1.Document.TextChange} message TextChange
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            TextChange.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.provenance = [];
                                if (options.defaults) {
                                    object.textAnchor = null;
                                    object.changedText = "";
                                }
                                if (message.textAnchor != null && message.hasOwnProperty("textAnchor"))
                                    object.textAnchor = $root.google.cloud.documentai.v1.Document.TextAnchor.toObject(message.textAnchor, options);
                                if (message.changedText != null && message.hasOwnProperty("changedText"))
                                    object.changedText = message.changedText;
                                if (message.provenance && message.provenance.length) {
                                    object.provenance = [];
                                    for (var j = 0; j < message.provenance.length; ++j)
                                        object.provenance[j] = $root.google.cloud.documentai.v1.Document.Provenance.toObject(message.provenance[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this TextChange to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.Document.TextChange
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            TextChange.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for TextChange
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.Document.TextChange
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            TextChange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.Document.TextChange";
                            };
    
                            return TextChange;
                        })();
    
                        return Document;
                    })();
    
                    v1.Vertex = (function() {
    
                        /**
                         * Properties of a Vertex.
                         * @memberof google.cloud.documentai.v1
                         * @interface IVertex
                         * @property {number|null} [x] Vertex x
                         * @property {number|null} [y] Vertex y
                         */
    
                        /**
                         * Constructs a new Vertex.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a Vertex.
                         * @implements IVertex
                         * @constructor
                         * @param {google.cloud.documentai.v1.IVertex=} [properties] Properties to set
                         */
                        function Vertex(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Vertex x.
                         * @member {number} x
                         * @memberof google.cloud.documentai.v1.Vertex
                         * @instance
                         */
                        Vertex.prototype.x = 0;
    
                        /**
                         * Vertex y.
                         * @member {number} y
                         * @memberof google.cloud.documentai.v1.Vertex
                         * @instance
                         */
                        Vertex.prototype.y = 0;
    
                        /**
                         * Creates a new Vertex instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.Vertex
                         * @static
                         * @param {google.cloud.documentai.v1.IVertex=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.Vertex} Vertex instance
                         */
                        Vertex.create = function create(properties) {
                            return new Vertex(properties);
                        };
    
                        /**
                         * Encodes the specified Vertex message. Does not implicitly {@link google.cloud.documentai.v1.Vertex.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.Vertex
                         * @static
                         * @param {google.cloud.documentai.v1.IVertex} message Vertex message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Vertex.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.x != null && Object.hasOwnProperty.call(message, "x"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.x);
                            if (message.y != null && Object.hasOwnProperty.call(message, "y"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.y);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Vertex message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Vertex.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.Vertex
                         * @static
                         * @param {google.cloud.documentai.v1.IVertex} message Vertex message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Vertex.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Vertex message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.Vertex
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.Vertex} Vertex
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Vertex.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Vertex();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.x = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.y = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Vertex message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.Vertex
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.Vertex} Vertex
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Vertex.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Vertex message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.Vertex
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Vertex.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.x != null && message.hasOwnProperty("x"))
                                if (!$util.isInteger(message.x))
                                    return "x: integer expected";
                            if (message.y != null && message.hasOwnProperty("y"))
                                if (!$util.isInteger(message.y))
                                    return "y: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a Vertex message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.Vertex
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.Vertex} Vertex
                         */
                        Vertex.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.Vertex)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.Vertex();
                            if (object.x != null)
                                message.x = object.x | 0;
                            if (object.y != null)
                                message.y = object.y | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Vertex message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.Vertex
                         * @static
                         * @param {google.cloud.documentai.v1.Vertex} message Vertex
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Vertex.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.x = 0;
                                object.y = 0;
                            }
                            if (message.x != null && message.hasOwnProperty("x"))
                                object.x = message.x;
                            if (message.y != null && message.hasOwnProperty("y"))
                                object.y = message.y;
                            return object;
                        };
    
                        /**
                         * Converts this Vertex to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.Vertex
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Vertex.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Vertex
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.Vertex
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Vertex.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.Vertex";
                        };
    
                        return Vertex;
                    })();
    
                    v1.NormalizedVertex = (function() {
    
                        /**
                         * Properties of a NormalizedVertex.
                         * @memberof google.cloud.documentai.v1
                         * @interface INormalizedVertex
                         * @property {number|null} [x] NormalizedVertex x
                         * @property {number|null} [y] NormalizedVertex y
                         */
    
                        /**
                         * Constructs a new NormalizedVertex.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a NormalizedVertex.
                         * @implements INormalizedVertex
                         * @constructor
                         * @param {google.cloud.documentai.v1.INormalizedVertex=} [properties] Properties to set
                         */
                        function NormalizedVertex(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * NormalizedVertex x.
                         * @member {number} x
                         * @memberof google.cloud.documentai.v1.NormalizedVertex
                         * @instance
                         */
                        NormalizedVertex.prototype.x = 0;
    
                        /**
                         * NormalizedVertex y.
                         * @member {number} y
                         * @memberof google.cloud.documentai.v1.NormalizedVertex
                         * @instance
                         */
                        NormalizedVertex.prototype.y = 0;
    
                        /**
                         * Creates a new NormalizedVertex instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.NormalizedVertex
                         * @static
                         * @param {google.cloud.documentai.v1.INormalizedVertex=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.NormalizedVertex} NormalizedVertex instance
                         */
                        NormalizedVertex.create = function create(properties) {
                            return new NormalizedVertex(properties);
                        };
    
                        /**
                         * Encodes the specified NormalizedVertex message. Does not implicitly {@link google.cloud.documentai.v1.NormalizedVertex.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.NormalizedVertex
                         * @static
                         * @param {google.cloud.documentai.v1.INormalizedVertex} message NormalizedVertex message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NormalizedVertex.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.x != null && Object.hasOwnProperty.call(message, "x"))
                                writer.uint32(/* id 1, wireType 5 =*/13).float(message.x);
                            if (message.y != null && Object.hasOwnProperty.call(message, "y"))
                                writer.uint32(/* id 2, wireType 5 =*/21).float(message.y);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified NormalizedVertex message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.NormalizedVertex.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.NormalizedVertex
                         * @static
                         * @param {google.cloud.documentai.v1.INormalizedVertex} message NormalizedVertex message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NormalizedVertex.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a NormalizedVertex message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.NormalizedVertex
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.NormalizedVertex} NormalizedVertex
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NormalizedVertex.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.NormalizedVertex();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.x = reader.float();
                                        break;
                                    }
                                case 2: {
                                        message.y = reader.float();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a NormalizedVertex message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.NormalizedVertex
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.NormalizedVertex} NormalizedVertex
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NormalizedVertex.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a NormalizedVertex message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.NormalizedVertex
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        NormalizedVertex.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.x != null && message.hasOwnProperty("x"))
                                if (typeof message.x !== "number")
                                    return "x: number expected";
                            if (message.y != null && message.hasOwnProperty("y"))
                                if (typeof message.y !== "number")
                                    return "y: number expected";
                            return null;
                        };
    
                        /**
                         * Creates a NormalizedVertex message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.NormalizedVertex
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.NormalizedVertex} NormalizedVertex
                         */
                        NormalizedVertex.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.NormalizedVertex)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.NormalizedVertex();
                            if (object.x != null)
                                message.x = Number(object.x);
                            if (object.y != null)
                                message.y = Number(object.y);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a NormalizedVertex message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.NormalizedVertex
                         * @static
                         * @param {google.cloud.documentai.v1.NormalizedVertex} message NormalizedVertex
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        NormalizedVertex.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.x = 0;
                                object.y = 0;
                            }
                            if (message.x != null && message.hasOwnProperty("x"))
                                object.x = options.json && !isFinite(message.x) ? String(message.x) : message.x;
                            if (message.y != null && message.hasOwnProperty("y"))
                                object.y = options.json && !isFinite(message.y) ? String(message.y) : message.y;
                            return object;
                        };
    
                        /**
                         * Converts this NormalizedVertex to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.NormalizedVertex
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        NormalizedVertex.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for NormalizedVertex
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.NormalizedVertex
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        NormalizedVertex.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.NormalizedVertex";
                        };
    
                        return NormalizedVertex;
                    })();
    
                    v1.BoundingPoly = (function() {
    
                        /**
                         * Properties of a BoundingPoly.
                         * @memberof google.cloud.documentai.v1
                         * @interface IBoundingPoly
                         * @property {Array.<google.cloud.documentai.v1.IVertex>|null} [vertices] BoundingPoly vertices
                         * @property {Array.<google.cloud.documentai.v1.INormalizedVertex>|null} [normalizedVertices] BoundingPoly normalizedVertices
                         */
    
                        /**
                         * Constructs a new BoundingPoly.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a BoundingPoly.
                         * @implements IBoundingPoly
                         * @constructor
                         * @param {google.cloud.documentai.v1.IBoundingPoly=} [properties] Properties to set
                         */
                        function BoundingPoly(properties) {
                            this.vertices = [];
                            this.normalizedVertices = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BoundingPoly vertices.
                         * @member {Array.<google.cloud.documentai.v1.IVertex>} vertices
                         * @memberof google.cloud.documentai.v1.BoundingPoly
                         * @instance
                         */
                        BoundingPoly.prototype.vertices = $util.emptyArray;
    
                        /**
                         * BoundingPoly normalizedVertices.
                         * @member {Array.<google.cloud.documentai.v1.INormalizedVertex>} normalizedVertices
                         * @memberof google.cloud.documentai.v1.BoundingPoly
                         * @instance
                         */
                        BoundingPoly.prototype.normalizedVertices = $util.emptyArray;
    
                        /**
                         * Creates a new BoundingPoly instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.BoundingPoly
                         * @static
                         * @param {google.cloud.documentai.v1.IBoundingPoly=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.BoundingPoly} BoundingPoly instance
                         */
                        BoundingPoly.create = function create(properties) {
                            return new BoundingPoly(properties);
                        };
    
                        /**
                         * Encodes the specified BoundingPoly message. Does not implicitly {@link google.cloud.documentai.v1.BoundingPoly.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.BoundingPoly
                         * @static
                         * @param {google.cloud.documentai.v1.IBoundingPoly} message BoundingPoly message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BoundingPoly.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.vertices != null && message.vertices.length)
                                for (var i = 0; i < message.vertices.length; ++i)
                                    $root.google.cloud.documentai.v1.Vertex.encode(message.vertices[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.normalizedVertices != null && message.normalizedVertices.length)
                                for (var i = 0; i < message.normalizedVertices.length; ++i)
                                    $root.google.cloud.documentai.v1.NormalizedVertex.encode(message.normalizedVertices[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BoundingPoly message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.BoundingPoly.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.BoundingPoly
                         * @static
                         * @param {google.cloud.documentai.v1.IBoundingPoly} message BoundingPoly message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BoundingPoly.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BoundingPoly message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.BoundingPoly
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.BoundingPoly} BoundingPoly
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BoundingPoly.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.BoundingPoly();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.vertices && message.vertices.length))
                                            message.vertices = [];
                                        message.vertices.push($root.google.cloud.documentai.v1.Vertex.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        if (!(message.normalizedVertices && message.normalizedVertices.length))
                                            message.normalizedVertices = [];
                                        message.normalizedVertices.push($root.google.cloud.documentai.v1.NormalizedVertex.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BoundingPoly message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.BoundingPoly
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.BoundingPoly} BoundingPoly
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BoundingPoly.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BoundingPoly message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.BoundingPoly
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BoundingPoly.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.vertices != null && message.hasOwnProperty("vertices")) {
                                if (!Array.isArray(message.vertices))
                                    return "vertices: array expected";
                                for (var i = 0; i < message.vertices.length; ++i) {
                                    var error = $root.google.cloud.documentai.v1.Vertex.verify(message.vertices[i]);
                                    if (error)
                                        return "vertices." + error;
                                }
                            }
                            if (message.normalizedVertices != null && message.hasOwnProperty("normalizedVertices")) {
                                if (!Array.isArray(message.normalizedVertices))
                                    return "normalizedVertices: array expected";
                                for (var i = 0; i < message.normalizedVertices.length; ++i) {
                                    var error = $root.google.cloud.documentai.v1.NormalizedVertex.verify(message.normalizedVertices[i]);
                                    if (error)
                                        return "normalizedVertices." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BoundingPoly message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.BoundingPoly
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.BoundingPoly} BoundingPoly
                         */
                        BoundingPoly.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.BoundingPoly)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.BoundingPoly();
                            if (object.vertices) {
                                if (!Array.isArray(object.vertices))
                                    throw TypeError(".google.cloud.documentai.v1.BoundingPoly.vertices: array expected");
                                message.vertices = [];
                                for (var i = 0; i < object.vertices.length; ++i) {
                                    if (typeof object.vertices[i] !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.BoundingPoly.vertices: object expected");
                                    message.vertices[i] = $root.google.cloud.documentai.v1.Vertex.fromObject(object.vertices[i]);
                                }
                            }
                            if (object.normalizedVertices) {
                                if (!Array.isArray(object.normalizedVertices))
                                    throw TypeError(".google.cloud.documentai.v1.BoundingPoly.normalizedVertices: array expected");
                                message.normalizedVertices = [];
                                for (var i = 0; i < object.normalizedVertices.length; ++i) {
                                    if (typeof object.normalizedVertices[i] !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.BoundingPoly.normalizedVertices: object expected");
                                    message.normalizedVertices[i] = $root.google.cloud.documentai.v1.NormalizedVertex.fromObject(object.normalizedVertices[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BoundingPoly message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.BoundingPoly
                         * @static
                         * @param {google.cloud.documentai.v1.BoundingPoly} message BoundingPoly
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BoundingPoly.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.vertices = [];
                                object.normalizedVertices = [];
                            }
                            if (message.vertices && message.vertices.length) {
                                object.vertices = [];
                                for (var j = 0; j < message.vertices.length; ++j)
                                    object.vertices[j] = $root.google.cloud.documentai.v1.Vertex.toObject(message.vertices[j], options);
                            }
                            if (message.normalizedVertices && message.normalizedVertices.length) {
                                object.normalizedVertices = [];
                                for (var j = 0; j < message.normalizedVertices.length; ++j)
                                    object.normalizedVertices[j] = $root.google.cloud.documentai.v1.NormalizedVertex.toObject(message.normalizedVertices[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this BoundingPoly to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.BoundingPoly
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BoundingPoly.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BoundingPoly
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.BoundingPoly
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BoundingPoly.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.BoundingPoly";
                        };
    
                        return BoundingPoly;
                    })();
    
                    v1.RawDocument = (function() {
    
                        /**
                         * Properties of a RawDocument.
                         * @memberof google.cloud.documentai.v1
                         * @interface IRawDocument
                         * @property {Uint8Array|null} [content] RawDocument content
                         * @property {string|null} [mimeType] RawDocument mimeType
                         * @property {string|null} [displayName] RawDocument displayName
                         */
    
                        /**
                         * Constructs a new RawDocument.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a RawDocument.
                         * @implements IRawDocument
                         * @constructor
                         * @param {google.cloud.documentai.v1.IRawDocument=} [properties] Properties to set
                         */
                        function RawDocument(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RawDocument content.
                         * @member {Uint8Array} content
                         * @memberof google.cloud.documentai.v1.RawDocument
                         * @instance
                         */
                        RawDocument.prototype.content = $util.newBuffer([]);
    
                        /**
                         * RawDocument mimeType.
                         * @member {string} mimeType
                         * @memberof google.cloud.documentai.v1.RawDocument
                         * @instance
                         */
                        RawDocument.prototype.mimeType = "";
    
                        /**
                         * RawDocument displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.documentai.v1.RawDocument
                         * @instance
                         */
                        RawDocument.prototype.displayName = "";
    
                        /**
                         * Creates a new RawDocument instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.RawDocument
                         * @static
                         * @param {google.cloud.documentai.v1.IRawDocument=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.RawDocument} RawDocument instance
                         */
                        RawDocument.create = function create(properties) {
                            return new RawDocument(properties);
                        };
    
                        /**
                         * Encodes the specified RawDocument message. Does not implicitly {@link google.cloud.documentai.v1.RawDocument.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.RawDocument
                         * @static
                         * @param {google.cloud.documentai.v1.IRawDocument} message RawDocument message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RawDocument.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.content != null && Object.hasOwnProperty.call(message, "content"))
                                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.content);
                            if (message.mimeType != null && Object.hasOwnProperty.call(message, "mimeType"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.mimeType);
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.displayName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RawDocument message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.RawDocument.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.RawDocument
                         * @static
                         * @param {google.cloud.documentai.v1.IRawDocument} message RawDocument message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RawDocument.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RawDocument message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.RawDocument
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.RawDocument} RawDocument
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RawDocument.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.RawDocument();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.content = reader.bytes();
                                        break;
                                    }
                                case 2: {
                                        message.mimeType = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RawDocument message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.RawDocument
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.RawDocument} RawDocument
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RawDocument.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RawDocument message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.RawDocument
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RawDocument.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.content != null && message.hasOwnProperty("content"))
                                if (!(message.content && typeof message.content.length === "number" || $util.isString(message.content)))
                                    return "content: buffer expected";
                            if (message.mimeType != null && message.hasOwnProperty("mimeType"))
                                if (!$util.isString(message.mimeType))
                                    return "mimeType: string expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RawDocument message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.RawDocument
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.RawDocument} RawDocument
                         */
                        RawDocument.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.RawDocument)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.RawDocument();
                            if (object.content != null)
                                if (typeof object.content === "string")
                                    $util.base64.decode(object.content, message.content = $util.newBuffer($util.base64.length(object.content)), 0);
                                else if (object.content.length >= 0)
                                    message.content = object.content;
                            if (object.mimeType != null)
                                message.mimeType = String(object.mimeType);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RawDocument message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.RawDocument
                         * @static
                         * @param {google.cloud.documentai.v1.RawDocument} message RawDocument
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RawDocument.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                if (options.bytes === String)
                                    object.content = "";
                                else {
                                    object.content = [];
                                    if (options.bytes !== Array)
                                        object.content = $util.newBuffer(object.content);
                                }
                                object.mimeType = "";
                                object.displayName = "";
                            }
                            if (message.content != null && message.hasOwnProperty("content"))
                                object.content = options.bytes === String ? $util.base64.encode(message.content, 0, message.content.length) : options.bytes === Array ? Array.prototype.slice.call(message.content) : message.content;
                            if (message.mimeType != null && message.hasOwnProperty("mimeType"))
                                object.mimeType = message.mimeType;
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            return object;
                        };
    
                        /**
                         * Converts this RawDocument to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.RawDocument
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RawDocument.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RawDocument
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.RawDocument
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RawDocument.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.RawDocument";
                        };
    
                        return RawDocument;
                    })();
    
                    v1.GcsDocument = (function() {
    
                        /**
                         * Properties of a GcsDocument.
                         * @memberof google.cloud.documentai.v1
                         * @interface IGcsDocument
                         * @property {string|null} [gcsUri] GcsDocument gcsUri
                         * @property {string|null} [mimeType] GcsDocument mimeType
                         */
    
                        /**
                         * Constructs a new GcsDocument.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a GcsDocument.
                         * @implements IGcsDocument
                         * @constructor
                         * @param {google.cloud.documentai.v1.IGcsDocument=} [properties] Properties to set
                         */
                        function GcsDocument(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GcsDocument gcsUri.
                         * @member {string} gcsUri
                         * @memberof google.cloud.documentai.v1.GcsDocument
                         * @instance
                         */
                        GcsDocument.prototype.gcsUri = "";
    
                        /**
                         * GcsDocument mimeType.
                         * @member {string} mimeType
                         * @memberof google.cloud.documentai.v1.GcsDocument
                         * @instance
                         */
                        GcsDocument.prototype.mimeType = "";
    
                        /**
                         * Creates a new GcsDocument instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.GcsDocument
                         * @static
                         * @param {google.cloud.documentai.v1.IGcsDocument=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.GcsDocument} GcsDocument instance
                         */
                        GcsDocument.create = function create(properties) {
                            return new GcsDocument(properties);
                        };
    
                        /**
                         * Encodes the specified GcsDocument message. Does not implicitly {@link google.cloud.documentai.v1.GcsDocument.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.GcsDocument
                         * @static
                         * @param {google.cloud.documentai.v1.IGcsDocument} message GcsDocument message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GcsDocument.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.gcsUri != null && Object.hasOwnProperty.call(message, "gcsUri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.gcsUri);
                            if (message.mimeType != null && Object.hasOwnProperty.call(message, "mimeType"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.mimeType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GcsDocument message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.GcsDocument.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.GcsDocument
                         * @static
                         * @param {google.cloud.documentai.v1.IGcsDocument} message GcsDocument message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GcsDocument.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GcsDocument message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.GcsDocument
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.GcsDocument} GcsDocument
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GcsDocument.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.GcsDocument();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.gcsUri = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.mimeType = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GcsDocument message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.GcsDocument
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.GcsDocument} GcsDocument
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GcsDocument.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GcsDocument message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.GcsDocument
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GcsDocument.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.gcsUri != null && message.hasOwnProperty("gcsUri"))
                                if (!$util.isString(message.gcsUri))
                                    return "gcsUri: string expected";
                            if (message.mimeType != null && message.hasOwnProperty("mimeType"))
                                if (!$util.isString(message.mimeType))
                                    return "mimeType: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GcsDocument message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.GcsDocument
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.GcsDocument} GcsDocument
                         */
                        GcsDocument.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.GcsDocument)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.GcsDocument();
                            if (object.gcsUri != null)
                                message.gcsUri = String(object.gcsUri);
                            if (object.mimeType != null)
                                message.mimeType = String(object.mimeType);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GcsDocument message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.GcsDocument
                         * @static
                         * @param {google.cloud.documentai.v1.GcsDocument} message GcsDocument
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GcsDocument.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.gcsUri = "";
                                object.mimeType = "";
                            }
                            if (message.gcsUri != null && message.hasOwnProperty("gcsUri"))
                                object.gcsUri = message.gcsUri;
                            if (message.mimeType != null && message.hasOwnProperty("mimeType"))
                                object.mimeType = message.mimeType;
                            return object;
                        };
    
                        /**
                         * Converts this GcsDocument to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.GcsDocument
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GcsDocument.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GcsDocument
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.GcsDocument
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GcsDocument.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.GcsDocument";
                        };
    
                        return GcsDocument;
                    })();
    
                    v1.GcsDocuments = (function() {
    
                        /**
                         * Properties of a GcsDocuments.
                         * @memberof google.cloud.documentai.v1
                         * @interface IGcsDocuments
                         * @property {Array.<google.cloud.documentai.v1.IGcsDocument>|null} [documents] GcsDocuments documents
                         */
    
                        /**
                         * Constructs a new GcsDocuments.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a GcsDocuments.
                         * @implements IGcsDocuments
                         * @constructor
                         * @param {google.cloud.documentai.v1.IGcsDocuments=} [properties] Properties to set
                         */
                        function GcsDocuments(properties) {
                            this.documents = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GcsDocuments documents.
                         * @member {Array.<google.cloud.documentai.v1.IGcsDocument>} documents
                         * @memberof google.cloud.documentai.v1.GcsDocuments
                         * @instance
                         */
                        GcsDocuments.prototype.documents = $util.emptyArray;
    
                        /**
                         * Creates a new GcsDocuments instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.GcsDocuments
                         * @static
                         * @param {google.cloud.documentai.v1.IGcsDocuments=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.GcsDocuments} GcsDocuments instance
                         */
                        GcsDocuments.create = function create(properties) {
                            return new GcsDocuments(properties);
                        };
    
                        /**
                         * Encodes the specified GcsDocuments message. Does not implicitly {@link google.cloud.documentai.v1.GcsDocuments.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.GcsDocuments
                         * @static
                         * @param {google.cloud.documentai.v1.IGcsDocuments} message GcsDocuments message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GcsDocuments.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.documents != null && message.documents.length)
                                for (var i = 0; i < message.documents.length; ++i)
                                    $root.google.cloud.documentai.v1.GcsDocument.encode(message.documents[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GcsDocuments message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.GcsDocuments.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.GcsDocuments
                         * @static
                         * @param {google.cloud.documentai.v1.IGcsDocuments} message GcsDocuments message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GcsDocuments.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GcsDocuments message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.GcsDocuments
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.GcsDocuments} GcsDocuments
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GcsDocuments.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.GcsDocuments();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.documents && message.documents.length))
                                            message.documents = [];
                                        message.documents.push($root.google.cloud.documentai.v1.GcsDocument.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GcsDocuments message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.GcsDocuments
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.GcsDocuments} GcsDocuments
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GcsDocuments.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GcsDocuments message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.GcsDocuments
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GcsDocuments.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.documents != null && message.hasOwnProperty("documents")) {
                                if (!Array.isArray(message.documents))
                                    return "documents: array expected";
                                for (var i = 0; i < message.documents.length; ++i) {
                                    var error = $root.google.cloud.documentai.v1.GcsDocument.verify(message.documents[i]);
                                    if (error)
                                        return "documents." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GcsDocuments message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.GcsDocuments
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.GcsDocuments} GcsDocuments
                         */
                        GcsDocuments.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.GcsDocuments)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.GcsDocuments();
                            if (object.documents) {
                                if (!Array.isArray(object.documents))
                                    throw TypeError(".google.cloud.documentai.v1.GcsDocuments.documents: array expected");
                                message.documents = [];
                                for (var i = 0; i < object.documents.length; ++i) {
                                    if (typeof object.documents[i] !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.GcsDocuments.documents: object expected");
                                    message.documents[i] = $root.google.cloud.documentai.v1.GcsDocument.fromObject(object.documents[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GcsDocuments message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.GcsDocuments
                         * @static
                         * @param {google.cloud.documentai.v1.GcsDocuments} message GcsDocuments
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GcsDocuments.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.documents = [];
                            if (message.documents && message.documents.length) {
                                object.documents = [];
                                for (var j = 0; j < message.documents.length; ++j)
                                    object.documents[j] = $root.google.cloud.documentai.v1.GcsDocument.toObject(message.documents[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this GcsDocuments to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.GcsDocuments
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GcsDocuments.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GcsDocuments
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.GcsDocuments
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GcsDocuments.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.GcsDocuments";
                        };
    
                        return GcsDocuments;
                    })();
    
                    v1.GcsPrefix = (function() {
    
                        /**
                         * Properties of a GcsPrefix.
                         * @memberof google.cloud.documentai.v1
                         * @interface IGcsPrefix
                         * @property {string|null} [gcsUriPrefix] GcsPrefix gcsUriPrefix
                         */
    
                        /**
                         * Constructs a new GcsPrefix.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a GcsPrefix.
                         * @implements IGcsPrefix
                         * @constructor
                         * @param {google.cloud.documentai.v1.IGcsPrefix=} [properties] Properties to set
                         */
                        function GcsPrefix(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GcsPrefix gcsUriPrefix.
                         * @member {string} gcsUriPrefix
                         * @memberof google.cloud.documentai.v1.GcsPrefix
                         * @instance
                         */
                        GcsPrefix.prototype.gcsUriPrefix = "";
    
                        /**
                         * Creates a new GcsPrefix instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.GcsPrefix
                         * @static
                         * @param {google.cloud.documentai.v1.IGcsPrefix=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.GcsPrefix} GcsPrefix instance
                         */
                        GcsPrefix.create = function create(properties) {
                            return new GcsPrefix(properties);
                        };
    
                        /**
                         * Encodes the specified GcsPrefix message. Does not implicitly {@link google.cloud.documentai.v1.GcsPrefix.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.GcsPrefix
                         * @static
                         * @param {google.cloud.documentai.v1.IGcsPrefix} message GcsPrefix message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GcsPrefix.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.gcsUriPrefix != null && Object.hasOwnProperty.call(message, "gcsUriPrefix"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.gcsUriPrefix);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GcsPrefix message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.GcsPrefix.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.GcsPrefix
                         * @static
                         * @param {google.cloud.documentai.v1.IGcsPrefix} message GcsPrefix message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GcsPrefix.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GcsPrefix message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.GcsPrefix
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.GcsPrefix} GcsPrefix
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GcsPrefix.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.GcsPrefix();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.gcsUriPrefix = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GcsPrefix message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.GcsPrefix
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.GcsPrefix} GcsPrefix
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GcsPrefix.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GcsPrefix message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.GcsPrefix
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GcsPrefix.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.gcsUriPrefix != null && message.hasOwnProperty("gcsUriPrefix"))
                                if (!$util.isString(message.gcsUriPrefix))
                                    return "gcsUriPrefix: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GcsPrefix message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.GcsPrefix
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.GcsPrefix} GcsPrefix
                         */
                        GcsPrefix.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.GcsPrefix)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.GcsPrefix();
                            if (object.gcsUriPrefix != null)
                                message.gcsUriPrefix = String(object.gcsUriPrefix);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GcsPrefix message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.GcsPrefix
                         * @static
                         * @param {google.cloud.documentai.v1.GcsPrefix} message GcsPrefix
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GcsPrefix.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.gcsUriPrefix = "";
                            if (message.gcsUriPrefix != null && message.hasOwnProperty("gcsUriPrefix"))
                                object.gcsUriPrefix = message.gcsUriPrefix;
                            return object;
                        };
    
                        /**
                         * Converts this GcsPrefix to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.GcsPrefix
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GcsPrefix.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GcsPrefix
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.GcsPrefix
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GcsPrefix.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.GcsPrefix";
                        };
    
                        return GcsPrefix;
                    })();
    
                    v1.BatchDocumentsInputConfig = (function() {
    
                        /**
                         * Properties of a BatchDocumentsInputConfig.
                         * @memberof google.cloud.documentai.v1
                         * @interface IBatchDocumentsInputConfig
                         * @property {google.cloud.documentai.v1.IGcsPrefix|null} [gcsPrefix] BatchDocumentsInputConfig gcsPrefix
                         * @property {google.cloud.documentai.v1.IGcsDocuments|null} [gcsDocuments] BatchDocumentsInputConfig gcsDocuments
                         */
    
                        /**
                         * Constructs a new BatchDocumentsInputConfig.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a BatchDocumentsInputConfig.
                         * @implements IBatchDocumentsInputConfig
                         * @constructor
                         * @param {google.cloud.documentai.v1.IBatchDocumentsInputConfig=} [properties] Properties to set
                         */
                        function BatchDocumentsInputConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BatchDocumentsInputConfig gcsPrefix.
                         * @member {google.cloud.documentai.v1.IGcsPrefix|null|undefined} gcsPrefix
                         * @memberof google.cloud.documentai.v1.BatchDocumentsInputConfig
                         * @instance
                         */
                        BatchDocumentsInputConfig.prototype.gcsPrefix = null;
    
                        /**
                         * BatchDocumentsInputConfig gcsDocuments.
                         * @member {google.cloud.documentai.v1.IGcsDocuments|null|undefined} gcsDocuments
                         * @memberof google.cloud.documentai.v1.BatchDocumentsInputConfig
                         * @instance
                         */
                        BatchDocumentsInputConfig.prototype.gcsDocuments = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * BatchDocumentsInputConfig source.
                         * @member {"gcsPrefix"|"gcsDocuments"|undefined} source
                         * @memberof google.cloud.documentai.v1.BatchDocumentsInputConfig
                         * @instance
                         */
                        Object.defineProperty(BatchDocumentsInputConfig.prototype, "source", {
                            get: $util.oneOfGetter($oneOfFields = ["gcsPrefix", "gcsDocuments"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new BatchDocumentsInputConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.BatchDocumentsInputConfig
                         * @static
                         * @param {google.cloud.documentai.v1.IBatchDocumentsInputConfig=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.BatchDocumentsInputConfig} BatchDocumentsInputConfig instance
                         */
                        BatchDocumentsInputConfig.create = function create(properties) {
                            return new BatchDocumentsInputConfig(properties);
                        };
    
                        /**
                         * Encodes the specified BatchDocumentsInputConfig message. Does not implicitly {@link google.cloud.documentai.v1.BatchDocumentsInputConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.BatchDocumentsInputConfig
                         * @static
                         * @param {google.cloud.documentai.v1.IBatchDocumentsInputConfig} message BatchDocumentsInputConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchDocumentsInputConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.gcsPrefix != null && Object.hasOwnProperty.call(message, "gcsPrefix"))
                                $root.google.cloud.documentai.v1.GcsPrefix.encode(message.gcsPrefix, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.gcsDocuments != null && Object.hasOwnProperty.call(message, "gcsDocuments"))
                                $root.google.cloud.documentai.v1.GcsDocuments.encode(message.gcsDocuments, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BatchDocumentsInputConfig message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.BatchDocumentsInputConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.BatchDocumentsInputConfig
                         * @static
                         * @param {google.cloud.documentai.v1.IBatchDocumentsInputConfig} message BatchDocumentsInputConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchDocumentsInputConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BatchDocumentsInputConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.BatchDocumentsInputConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.BatchDocumentsInputConfig} BatchDocumentsInputConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchDocumentsInputConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.BatchDocumentsInputConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.gcsPrefix = $root.google.cloud.documentai.v1.GcsPrefix.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.gcsDocuments = $root.google.cloud.documentai.v1.GcsDocuments.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BatchDocumentsInputConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.BatchDocumentsInputConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.BatchDocumentsInputConfig} BatchDocumentsInputConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchDocumentsInputConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BatchDocumentsInputConfig message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.BatchDocumentsInputConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BatchDocumentsInputConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.gcsPrefix != null && message.hasOwnProperty("gcsPrefix")) {
                                properties.source = 1;
                                {
                                    var error = $root.google.cloud.documentai.v1.GcsPrefix.verify(message.gcsPrefix);
                                    if (error)
                                        return "gcsPrefix." + error;
                                }
                            }
                            if (message.gcsDocuments != null && message.hasOwnProperty("gcsDocuments")) {
                                if (properties.source === 1)
                                    return "source: multiple values";
                                properties.source = 1;
                                {
                                    var error = $root.google.cloud.documentai.v1.GcsDocuments.verify(message.gcsDocuments);
                                    if (error)
                                        return "gcsDocuments." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BatchDocumentsInputConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.BatchDocumentsInputConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.BatchDocumentsInputConfig} BatchDocumentsInputConfig
                         */
                        BatchDocumentsInputConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.BatchDocumentsInputConfig)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.BatchDocumentsInputConfig();
                            if (object.gcsPrefix != null) {
                                if (typeof object.gcsPrefix !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.BatchDocumentsInputConfig.gcsPrefix: object expected");
                                message.gcsPrefix = $root.google.cloud.documentai.v1.GcsPrefix.fromObject(object.gcsPrefix);
                            }
                            if (object.gcsDocuments != null) {
                                if (typeof object.gcsDocuments !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.BatchDocumentsInputConfig.gcsDocuments: object expected");
                                message.gcsDocuments = $root.google.cloud.documentai.v1.GcsDocuments.fromObject(object.gcsDocuments);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BatchDocumentsInputConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.BatchDocumentsInputConfig
                         * @static
                         * @param {google.cloud.documentai.v1.BatchDocumentsInputConfig} message BatchDocumentsInputConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BatchDocumentsInputConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.gcsPrefix != null && message.hasOwnProperty("gcsPrefix")) {
                                object.gcsPrefix = $root.google.cloud.documentai.v1.GcsPrefix.toObject(message.gcsPrefix, options);
                                if (options.oneofs)
                                    object.source = "gcsPrefix";
                            }
                            if (message.gcsDocuments != null && message.hasOwnProperty("gcsDocuments")) {
                                object.gcsDocuments = $root.google.cloud.documentai.v1.GcsDocuments.toObject(message.gcsDocuments, options);
                                if (options.oneofs)
                                    object.source = "gcsDocuments";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this BatchDocumentsInputConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.BatchDocumentsInputConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BatchDocumentsInputConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BatchDocumentsInputConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.BatchDocumentsInputConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BatchDocumentsInputConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.BatchDocumentsInputConfig";
                        };
    
                        return BatchDocumentsInputConfig;
                    })();
    
                    v1.DocumentOutputConfig = (function() {
    
                        /**
                         * Properties of a DocumentOutputConfig.
                         * @memberof google.cloud.documentai.v1
                         * @interface IDocumentOutputConfig
                         * @property {google.cloud.documentai.v1.DocumentOutputConfig.IGcsOutputConfig|null} [gcsOutputConfig] DocumentOutputConfig gcsOutputConfig
                         */
    
                        /**
                         * Constructs a new DocumentOutputConfig.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a DocumentOutputConfig.
                         * @implements IDocumentOutputConfig
                         * @constructor
                         * @param {google.cloud.documentai.v1.IDocumentOutputConfig=} [properties] Properties to set
                         */
                        function DocumentOutputConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DocumentOutputConfig gcsOutputConfig.
                         * @member {google.cloud.documentai.v1.DocumentOutputConfig.IGcsOutputConfig|null|undefined} gcsOutputConfig
                         * @memberof google.cloud.documentai.v1.DocumentOutputConfig
                         * @instance
                         */
                        DocumentOutputConfig.prototype.gcsOutputConfig = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * DocumentOutputConfig destination.
                         * @member {"gcsOutputConfig"|undefined} destination
                         * @memberof google.cloud.documentai.v1.DocumentOutputConfig
                         * @instance
                         */
                        Object.defineProperty(DocumentOutputConfig.prototype, "destination", {
                            get: $util.oneOfGetter($oneOfFields = ["gcsOutputConfig"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new DocumentOutputConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.DocumentOutputConfig
                         * @static
                         * @param {google.cloud.documentai.v1.IDocumentOutputConfig=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.DocumentOutputConfig} DocumentOutputConfig instance
                         */
                        DocumentOutputConfig.create = function create(properties) {
                            return new DocumentOutputConfig(properties);
                        };
    
                        /**
                         * Encodes the specified DocumentOutputConfig message. Does not implicitly {@link google.cloud.documentai.v1.DocumentOutputConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.DocumentOutputConfig
                         * @static
                         * @param {google.cloud.documentai.v1.IDocumentOutputConfig} message DocumentOutputConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DocumentOutputConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.gcsOutputConfig != null && Object.hasOwnProperty.call(message, "gcsOutputConfig"))
                                $root.google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.encode(message.gcsOutputConfig, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DocumentOutputConfig message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.DocumentOutputConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.DocumentOutputConfig
                         * @static
                         * @param {google.cloud.documentai.v1.IDocumentOutputConfig} message DocumentOutputConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DocumentOutputConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DocumentOutputConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.DocumentOutputConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.DocumentOutputConfig} DocumentOutputConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DocumentOutputConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.DocumentOutputConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.gcsOutputConfig = $root.google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DocumentOutputConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.DocumentOutputConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.DocumentOutputConfig} DocumentOutputConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DocumentOutputConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DocumentOutputConfig message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.DocumentOutputConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DocumentOutputConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.gcsOutputConfig != null && message.hasOwnProperty("gcsOutputConfig")) {
                                properties.destination = 1;
                                {
                                    var error = $root.google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.verify(message.gcsOutputConfig);
                                    if (error)
                                        return "gcsOutputConfig." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DocumentOutputConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.DocumentOutputConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.DocumentOutputConfig} DocumentOutputConfig
                         */
                        DocumentOutputConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.DocumentOutputConfig)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.DocumentOutputConfig();
                            if (object.gcsOutputConfig != null) {
                                if (typeof object.gcsOutputConfig !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.DocumentOutputConfig.gcsOutputConfig: object expected");
                                message.gcsOutputConfig = $root.google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.fromObject(object.gcsOutputConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DocumentOutputConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.DocumentOutputConfig
                         * @static
                         * @param {google.cloud.documentai.v1.DocumentOutputConfig} message DocumentOutputConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DocumentOutputConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.gcsOutputConfig != null && message.hasOwnProperty("gcsOutputConfig")) {
                                object.gcsOutputConfig = $root.google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.toObject(message.gcsOutputConfig, options);
                                if (options.oneofs)
                                    object.destination = "gcsOutputConfig";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DocumentOutputConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.DocumentOutputConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DocumentOutputConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DocumentOutputConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.DocumentOutputConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DocumentOutputConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.DocumentOutputConfig";
                        };
    
                        DocumentOutputConfig.GcsOutputConfig = (function() {
    
                            /**
                             * Properties of a GcsOutputConfig.
                             * @memberof google.cloud.documentai.v1.DocumentOutputConfig
                             * @interface IGcsOutputConfig
                             * @property {string|null} [gcsUri] GcsOutputConfig gcsUri
                             * @property {google.protobuf.IFieldMask|null} [fieldMask] GcsOutputConfig fieldMask
                             * @property {google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.IShardingConfig|null} [shardingConfig] GcsOutputConfig shardingConfig
                             */
    
                            /**
                             * Constructs a new GcsOutputConfig.
                             * @memberof google.cloud.documentai.v1.DocumentOutputConfig
                             * @classdesc Represents a GcsOutputConfig.
                             * @implements IGcsOutputConfig
                             * @constructor
                             * @param {google.cloud.documentai.v1.DocumentOutputConfig.IGcsOutputConfig=} [properties] Properties to set
                             */
                            function GcsOutputConfig(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GcsOutputConfig gcsUri.
                             * @member {string} gcsUri
                             * @memberof google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig
                             * @instance
                             */
                            GcsOutputConfig.prototype.gcsUri = "";
    
                            /**
                             * GcsOutputConfig fieldMask.
                             * @member {google.protobuf.IFieldMask|null|undefined} fieldMask
                             * @memberof google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig
                             * @instance
                             */
                            GcsOutputConfig.prototype.fieldMask = null;
    
                            /**
                             * GcsOutputConfig shardingConfig.
                             * @member {google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.IShardingConfig|null|undefined} shardingConfig
                             * @memberof google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig
                             * @instance
                             */
                            GcsOutputConfig.prototype.shardingConfig = null;
    
                            /**
                             * Creates a new GcsOutputConfig instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig
                             * @static
                             * @param {google.cloud.documentai.v1.DocumentOutputConfig.IGcsOutputConfig=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig} GcsOutputConfig instance
                             */
                            GcsOutputConfig.create = function create(properties) {
                                return new GcsOutputConfig(properties);
                            };
    
                            /**
                             * Encodes the specified GcsOutputConfig message. Does not implicitly {@link google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig
                             * @static
                             * @param {google.cloud.documentai.v1.DocumentOutputConfig.IGcsOutputConfig} message GcsOutputConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GcsOutputConfig.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.gcsUri != null && Object.hasOwnProperty.call(message, "gcsUri"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.gcsUri);
                                if (message.fieldMask != null && Object.hasOwnProperty.call(message, "fieldMask"))
                                    $root.google.protobuf.FieldMask.encode(message.fieldMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.shardingConfig != null && Object.hasOwnProperty.call(message, "shardingConfig"))
                                    $root.google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.ShardingConfig.encode(message.shardingConfig, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GcsOutputConfig message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig
                             * @static
                             * @param {google.cloud.documentai.v1.DocumentOutputConfig.IGcsOutputConfig} message GcsOutputConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GcsOutputConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GcsOutputConfig message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig} GcsOutputConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GcsOutputConfig.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.gcsUri = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.fieldMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.shardingConfig = $root.google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.ShardingConfig.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GcsOutputConfig message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig} GcsOutputConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GcsOutputConfig.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GcsOutputConfig message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GcsOutputConfig.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.gcsUri != null && message.hasOwnProperty("gcsUri"))
                                    if (!$util.isString(message.gcsUri))
                                        return "gcsUri: string expected";
                                if (message.fieldMask != null && message.hasOwnProperty("fieldMask")) {
                                    var error = $root.google.protobuf.FieldMask.verify(message.fieldMask);
                                    if (error)
                                        return "fieldMask." + error;
                                }
                                if (message.shardingConfig != null && message.hasOwnProperty("shardingConfig")) {
                                    var error = $root.google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.ShardingConfig.verify(message.shardingConfig);
                                    if (error)
                                        return "shardingConfig." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a GcsOutputConfig message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig} GcsOutputConfig
                             */
                            GcsOutputConfig.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig();
                                if (object.gcsUri != null)
                                    message.gcsUri = String(object.gcsUri);
                                if (object.fieldMask != null) {
                                    if (typeof object.fieldMask !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.fieldMask: object expected");
                                    message.fieldMask = $root.google.protobuf.FieldMask.fromObject(object.fieldMask);
                                }
                                if (object.shardingConfig != null) {
                                    if (typeof object.shardingConfig !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.shardingConfig: object expected");
                                    message.shardingConfig = $root.google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.ShardingConfig.fromObject(object.shardingConfig);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GcsOutputConfig message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig
                             * @static
                             * @param {google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig} message GcsOutputConfig
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GcsOutputConfig.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.gcsUri = "";
                                    object.fieldMask = null;
                                    object.shardingConfig = null;
                                }
                                if (message.gcsUri != null && message.hasOwnProperty("gcsUri"))
                                    object.gcsUri = message.gcsUri;
                                if (message.fieldMask != null && message.hasOwnProperty("fieldMask"))
                                    object.fieldMask = $root.google.protobuf.FieldMask.toObject(message.fieldMask, options);
                                if (message.shardingConfig != null && message.hasOwnProperty("shardingConfig"))
                                    object.shardingConfig = $root.google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.ShardingConfig.toObject(message.shardingConfig, options);
                                return object;
                            };
    
                            /**
                             * Converts this GcsOutputConfig to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GcsOutputConfig.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for GcsOutputConfig
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            GcsOutputConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig";
                            };
    
                            GcsOutputConfig.ShardingConfig = (function() {
    
                                /**
                                 * Properties of a ShardingConfig.
                                 * @memberof google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig
                                 * @interface IShardingConfig
                                 * @property {number|null} [pagesPerShard] ShardingConfig pagesPerShard
                                 * @property {number|null} [pagesOverlap] ShardingConfig pagesOverlap
                                 */
    
                                /**
                                 * Constructs a new ShardingConfig.
                                 * @memberof google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig
                                 * @classdesc Represents a ShardingConfig.
                                 * @implements IShardingConfig
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.IShardingConfig=} [properties] Properties to set
                                 */
                                function ShardingConfig(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * ShardingConfig pagesPerShard.
                                 * @member {number} pagesPerShard
                                 * @memberof google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.ShardingConfig
                                 * @instance
                                 */
                                ShardingConfig.prototype.pagesPerShard = 0;
    
                                /**
                                 * ShardingConfig pagesOverlap.
                                 * @member {number} pagesOverlap
                                 * @memberof google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.ShardingConfig
                                 * @instance
                                 */
                                ShardingConfig.prototype.pagesOverlap = 0;
    
                                /**
                                 * Creates a new ShardingConfig instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.ShardingConfig
                                 * @static
                                 * @param {google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.IShardingConfig=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.ShardingConfig} ShardingConfig instance
                                 */
                                ShardingConfig.create = function create(properties) {
                                    return new ShardingConfig(properties);
                                };
    
                                /**
                                 * Encodes the specified ShardingConfig message. Does not implicitly {@link google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.ShardingConfig.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.ShardingConfig
                                 * @static
                                 * @param {google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.IShardingConfig} message ShardingConfig message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                ShardingConfig.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.pagesPerShard != null && Object.hasOwnProperty.call(message, "pagesPerShard"))
                                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.pagesPerShard);
                                    if (message.pagesOverlap != null && Object.hasOwnProperty.call(message, "pagesOverlap"))
                                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pagesOverlap);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified ShardingConfig message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.ShardingConfig.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.ShardingConfig
                                 * @static
                                 * @param {google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.IShardingConfig} message ShardingConfig message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                ShardingConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a ShardingConfig message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.ShardingConfig
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.ShardingConfig} ShardingConfig
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                ShardingConfig.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.ShardingConfig();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.pagesPerShard = reader.int32();
                                                break;
                                            }
                                        case 2: {
                                                message.pagesOverlap = reader.int32();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a ShardingConfig message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.ShardingConfig
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.ShardingConfig} ShardingConfig
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                ShardingConfig.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a ShardingConfig message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.ShardingConfig
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                ShardingConfig.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.pagesPerShard != null && message.hasOwnProperty("pagesPerShard"))
                                        if (!$util.isInteger(message.pagesPerShard))
                                            return "pagesPerShard: integer expected";
                                    if (message.pagesOverlap != null && message.hasOwnProperty("pagesOverlap"))
                                        if (!$util.isInteger(message.pagesOverlap))
                                            return "pagesOverlap: integer expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a ShardingConfig message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.ShardingConfig
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.ShardingConfig} ShardingConfig
                                 */
                                ShardingConfig.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.ShardingConfig)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.ShardingConfig();
                                    if (object.pagesPerShard != null)
                                        message.pagesPerShard = object.pagesPerShard | 0;
                                    if (object.pagesOverlap != null)
                                        message.pagesOverlap = object.pagesOverlap | 0;
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a ShardingConfig message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.ShardingConfig
                                 * @static
                                 * @param {google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.ShardingConfig} message ShardingConfig
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                ShardingConfig.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.pagesPerShard = 0;
                                        object.pagesOverlap = 0;
                                    }
                                    if (message.pagesPerShard != null && message.hasOwnProperty("pagesPerShard"))
                                        object.pagesPerShard = message.pagesPerShard;
                                    if (message.pagesOverlap != null && message.hasOwnProperty("pagesOverlap"))
                                        object.pagesOverlap = message.pagesOverlap;
                                    return object;
                                };
    
                                /**
                                 * Converts this ShardingConfig to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.ShardingConfig
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                ShardingConfig.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for ShardingConfig
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.ShardingConfig
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                ShardingConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.DocumentOutputConfig.GcsOutputConfig.ShardingConfig";
                                };
    
                                return ShardingConfig;
                            })();
    
                            return GcsOutputConfig;
                        })();
    
                        return DocumentOutputConfig;
                    })();
    
                    v1.OcrConfig = (function() {
    
                        /**
                         * Properties of an OcrConfig.
                         * @memberof google.cloud.documentai.v1
                         * @interface IOcrConfig
                         * @property {google.cloud.documentai.v1.OcrConfig.IHints|null} [hints] OcrConfig hints
                         * @property {boolean|null} [enableNativePdfParsing] OcrConfig enableNativePdfParsing
                         * @property {boolean|null} [enableImageQualityScores] OcrConfig enableImageQualityScores
                         * @property {Array.<string>|null} [advancedOcrOptions] OcrConfig advancedOcrOptions
                         * @property {boolean|null} [enableSymbol] OcrConfig enableSymbol
                         * @property {boolean|null} [computeStyleInfo] OcrConfig computeStyleInfo
                         * @property {boolean|null} [disableCharacterBoxesDetection] OcrConfig disableCharacterBoxesDetection
                         * @property {google.cloud.documentai.v1.OcrConfig.IPremiumFeatures|null} [premiumFeatures] OcrConfig premiumFeatures
                         */
    
                        /**
                         * Constructs a new OcrConfig.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents an OcrConfig.
                         * @implements IOcrConfig
                         * @constructor
                         * @param {google.cloud.documentai.v1.IOcrConfig=} [properties] Properties to set
                         */
                        function OcrConfig(properties) {
                            this.advancedOcrOptions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OcrConfig hints.
                         * @member {google.cloud.documentai.v1.OcrConfig.IHints|null|undefined} hints
                         * @memberof google.cloud.documentai.v1.OcrConfig
                         * @instance
                         */
                        OcrConfig.prototype.hints = null;
    
                        /**
                         * OcrConfig enableNativePdfParsing.
                         * @member {boolean} enableNativePdfParsing
                         * @memberof google.cloud.documentai.v1.OcrConfig
                         * @instance
                         */
                        OcrConfig.prototype.enableNativePdfParsing = false;
    
                        /**
                         * OcrConfig enableImageQualityScores.
                         * @member {boolean} enableImageQualityScores
                         * @memberof google.cloud.documentai.v1.OcrConfig
                         * @instance
                         */
                        OcrConfig.prototype.enableImageQualityScores = false;
    
                        /**
                         * OcrConfig advancedOcrOptions.
                         * @member {Array.<string>} advancedOcrOptions
                         * @memberof google.cloud.documentai.v1.OcrConfig
                         * @instance
                         */
                        OcrConfig.prototype.advancedOcrOptions = $util.emptyArray;
    
                        /**
                         * OcrConfig enableSymbol.
                         * @member {boolean} enableSymbol
                         * @memberof google.cloud.documentai.v1.OcrConfig
                         * @instance
                         */
                        OcrConfig.prototype.enableSymbol = false;
    
                        /**
                         * OcrConfig computeStyleInfo.
                         * @member {boolean} computeStyleInfo
                         * @memberof google.cloud.documentai.v1.OcrConfig
                         * @instance
                         */
                        OcrConfig.prototype.computeStyleInfo = false;
    
                        /**
                         * OcrConfig disableCharacterBoxesDetection.
                         * @member {boolean} disableCharacterBoxesDetection
                         * @memberof google.cloud.documentai.v1.OcrConfig
                         * @instance
                         */
                        OcrConfig.prototype.disableCharacterBoxesDetection = false;
    
                        /**
                         * OcrConfig premiumFeatures.
                         * @member {google.cloud.documentai.v1.OcrConfig.IPremiumFeatures|null|undefined} premiumFeatures
                         * @memberof google.cloud.documentai.v1.OcrConfig
                         * @instance
                         */
                        OcrConfig.prototype.premiumFeatures = null;
    
                        /**
                         * Creates a new OcrConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.OcrConfig
                         * @static
                         * @param {google.cloud.documentai.v1.IOcrConfig=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.OcrConfig} OcrConfig instance
                         */
                        OcrConfig.create = function create(properties) {
                            return new OcrConfig(properties);
                        };
    
                        /**
                         * Encodes the specified OcrConfig message. Does not implicitly {@link google.cloud.documentai.v1.OcrConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.OcrConfig
                         * @static
                         * @param {google.cloud.documentai.v1.IOcrConfig} message OcrConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OcrConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.hints != null && Object.hasOwnProperty.call(message, "hints"))
                                $root.google.cloud.documentai.v1.OcrConfig.Hints.encode(message.hints, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.enableNativePdfParsing != null && Object.hasOwnProperty.call(message, "enableNativePdfParsing"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.enableNativePdfParsing);
                            if (message.enableImageQualityScores != null && Object.hasOwnProperty.call(message, "enableImageQualityScores"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.enableImageQualityScores);
                            if (message.advancedOcrOptions != null && message.advancedOcrOptions.length)
                                for (var i = 0; i < message.advancedOcrOptions.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.advancedOcrOptions[i]);
                            if (message.enableSymbol != null && Object.hasOwnProperty.call(message, "enableSymbol"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.enableSymbol);
                            if (message.computeStyleInfo != null && Object.hasOwnProperty.call(message, "computeStyleInfo"))
                                writer.uint32(/* id 8, wireType 0 =*/64).bool(message.computeStyleInfo);
                            if (message.disableCharacterBoxesDetection != null && Object.hasOwnProperty.call(message, "disableCharacterBoxesDetection"))
                                writer.uint32(/* id 10, wireType 0 =*/80).bool(message.disableCharacterBoxesDetection);
                            if (message.premiumFeatures != null && Object.hasOwnProperty.call(message, "premiumFeatures"))
                                $root.google.cloud.documentai.v1.OcrConfig.PremiumFeatures.encode(message.premiumFeatures, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OcrConfig message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.OcrConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.OcrConfig
                         * @static
                         * @param {google.cloud.documentai.v1.IOcrConfig} message OcrConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OcrConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OcrConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.OcrConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.OcrConfig} OcrConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OcrConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.OcrConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.hints = $root.google.cloud.documentai.v1.OcrConfig.Hints.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.enableNativePdfParsing = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        message.enableImageQualityScores = reader.bool();
                                        break;
                                    }
                                case 5: {
                                        if (!(message.advancedOcrOptions && message.advancedOcrOptions.length))
                                            message.advancedOcrOptions = [];
                                        message.advancedOcrOptions.push(reader.string());
                                        break;
                                    }
                                case 6: {
                                        message.enableSymbol = reader.bool();
                                        break;
                                    }
                                case 8: {
                                        message.computeStyleInfo = reader.bool();
                                        break;
                                    }
                                case 10: {
                                        message.disableCharacterBoxesDetection = reader.bool();
                                        break;
                                    }
                                case 11: {
                                        message.premiumFeatures = $root.google.cloud.documentai.v1.OcrConfig.PremiumFeatures.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OcrConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.OcrConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.OcrConfig} OcrConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OcrConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OcrConfig message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.OcrConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OcrConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.hints != null && message.hasOwnProperty("hints")) {
                                var error = $root.google.cloud.documentai.v1.OcrConfig.Hints.verify(message.hints);
                                if (error)
                                    return "hints." + error;
                            }
                            if (message.enableNativePdfParsing != null && message.hasOwnProperty("enableNativePdfParsing"))
                                if (typeof message.enableNativePdfParsing !== "boolean")
                                    return "enableNativePdfParsing: boolean expected";
                            if (message.enableImageQualityScores != null && message.hasOwnProperty("enableImageQualityScores"))
                                if (typeof message.enableImageQualityScores !== "boolean")
                                    return "enableImageQualityScores: boolean expected";
                            if (message.advancedOcrOptions != null && message.hasOwnProperty("advancedOcrOptions")) {
                                if (!Array.isArray(message.advancedOcrOptions))
                                    return "advancedOcrOptions: array expected";
                                for (var i = 0; i < message.advancedOcrOptions.length; ++i)
                                    if (!$util.isString(message.advancedOcrOptions[i]))
                                        return "advancedOcrOptions: string[] expected";
                            }
                            if (message.enableSymbol != null && message.hasOwnProperty("enableSymbol"))
                                if (typeof message.enableSymbol !== "boolean")
                                    return "enableSymbol: boolean expected";
                            if (message.computeStyleInfo != null && message.hasOwnProperty("computeStyleInfo"))
                                if (typeof message.computeStyleInfo !== "boolean")
                                    return "computeStyleInfo: boolean expected";
                            if (message.disableCharacterBoxesDetection != null && message.hasOwnProperty("disableCharacterBoxesDetection"))
                                if (typeof message.disableCharacterBoxesDetection !== "boolean")
                                    return "disableCharacterBoxesDetection: boolean expected";
                            if (message.premiumFeatures != null && message.hasOwnProperty("premiumFeatures")) {
                                var error = $root.google.cloud.documentai.v1.OcrConfig.PremiumFeatures.verify(message.premiumFeatures);
                                if (error)
                                    return "premiumFeatures." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an OcrConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.OcrConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.OcrConfig} OcrConfig
                         */
                        OcrConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.OcrConfig)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.OcrConfig();
                            if (object.hints != null) {
                                if (typeof object.hints !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.OcrConfig.hints: object expected");
                                message.hints = $root.google.cloud.documentai.v1.OcrConfig.Hints.fromObject(object.hints);
                            }
                            if (object.enableNativePdfParsing != null)
                                message.enableNativePdfParsing = Boolean(object.enableNativePdfParsing);
                            if (object.enableImageQualityScores != null)
                                message.enableImageQualityScores = Boolean(object.enableImageQualityScores);
                            if (object.advancedOcrOptions) {
                                if (!Array.isArray(object.advancedOcrOptions))
                                    throw TypeError(".google.cloud.documentai.v1.OcrConfig.advancedOcrOptions: array expected");
                                message.advancedOcrOptions = [];
                                for (var i = 0; i < object.advancedOcrOptions.length; ++i)
                                    message.advancedOcrOptions[i] = String(object.advancedOcrOptions[i]);
                            }
                            if (object.enableSymbol != null)
                                message.enableSymbol = Boolean(object.enableSymbol);
                            if (object.computeStyleInfo != null)
                                message.computeStyleInfo = Boolean(object.computeStyleInfo);
                            if (object.disableCharacterBoxesDetection != null)
                                message.disableCharacterBoxesDetection = Boolean(object.disableCharacterBoxesDetection);
                            if (object.premiumFeatures != null) {
                                if (typeof object.premiumFeatures !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.OcrConfig.premiumFeatures: object expected");
                                message.premiumFeatures = $root.google.cloud.documentai.v1.OcrConfig.PremiumFeatures.fromObject(object.premiumFeatures);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OcrConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.OcrConfig
                         * @static
                         * @param {google.cloud.documentai.v1.OcrConfig} message OcrConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OcrConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.advancedOcrOptions = [];
                            if (options.defaults) {
                                object.hints = null;
                                object.enableNativePdfParsing = false;
                                object.enableImageQualityScores = false;
                                object.enableSymbol = false;
                                object.computeStyleInfo = false;
                                object.disableCharacterBoxesDetection = false;
                                object.premiumFeatures = null;
                            }
                            if (message.hints != null && message.hasOwnProperty("hints"))
                                object.hints = $root.google.cloud.documentai.v1.OcrConfig.Hints.toObject(message.hints, options);
                            if (message.enableNativePdfParsing != null && message.hasOwnProperty("enableNativePdfParsing"))
                                object.enableNativePdfParsing = message.enableNativePdfParsing;
                            if (message.enableImageQualityScores != null && message.hasOwnProperty("enableImageQualityScores"))
                                object.enableImageQualityScores = message.enableImageQualityScores;
                            if (message.advancedOcrOptions && message.advancedOcrOptions.length) {
                                object.advancedOcrOptions = [];
                                for (var j = 0; j < message.advancedOcrOptions.length; ++j)
                                    object.advancedOcrOptions[j] = message.advancedOcrOptions[j];
                            }
                            if (message.enableSymbol != null && message.hasOwnProperty("enableSymbol"))
                                object.enableSymbol = message.enableSymbol;
                            if (message.computeStyleInfo != null && message.hasOwnProperty("computeStyleInfo"))
                                object.computeStyleInfo = message.computeStyleInfo;
                            if (message.disableCharacterBoxesDetection != null && message.hasOwnProperty("disableCharacterBoxesDetection"))
                                object.disableCharacterBoxesDetection = message.disableCharacterBoxesDetection;
                            if (message.premiumFeatures != null && message.hasOwnProperty("premiumFeatures"))
                                object.premiumFeatures = $root.google.cloud.documentai.v1.OcrConfig.PremiumFeatures.toObject(message.premiumFeatures, options);
                            return object;
                        };
    
                        /**
                         * Converts this OcrConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.OcrConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OcrConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OcrConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.OcrConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OcrConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.OcrConfig";
                        };
    
                        OcrConfig.Hints = (function() {
    
                            /**
                             * Properties of a Hints.
                             * @memberof google.cloud.documentai.v1.OcrConfig
                             * @interface IHints
                             * @property {Array.<string>|null} [languageHints] Hints languageHints
                             */
    
                            /**
                             * Constructs a new Hints.
                             * @memberof google.cloud.documentai.v1.OcrConfig
                             * @classdesc Represents a Hints.
                             * @implements IHints
                             * @constructor
                             * @param {google.cloud.documentai.v1.OcrConfig.IHints=} [properties] Properties to set
                             */
                            function Hints(properties) {
                                this.languageHints = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Hints languageHints.
                             * @member {Array.<string>} languageHints
                             * @memberof google.cloud.documentai.v1.OcrConfig.Hints
                             * @instance
                             */
                            Hints.prototype.languageHints = $util.emptyArray;
    
                            /**
                             * Creates a new Hints instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.OcrConfig.Hints
                             * @static
                             * @param {google.cloud.documentai.v1.OcrConfig.IHints=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.OcrConfig.Hints} Hints instance
                             */
                            Hints.create = function create(properties) {
                                return new Hints(properties);
                            };
    
                            /**
                             * Encodes the specified Hints message. Does not implicitly {@link google.cloud.documentai.v1.OcrConfig.Hints.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.OcrConfig.Hints
                             * @static
                             * @param {google.cloud.documentai.v1.OcrConfig.IHints} message Hints message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Hints.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.languageHints != null && message.languageHints.length)
                                    for (var i = 0; i < message.languageHints.length; ++i)
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.languageHints[i]);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Hints message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.OcrConfig.Hints.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.OcrConfig.Hints
                             * @static
                             * @param {google.cloud.documentai.v1.OcrConfig.IHints} message Hints message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Hints.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Hints message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.OcrConfig.Hints
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.OcrConfig.Hints} Hints
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Hints.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.OcrConfig.Hints();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.languageHints && message.languageHints.length))
                                                message.languageHints = [];
                                            message.languageHints.push(reader.string());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Hints message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.OcrConfig.Hints
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.OcrConfig.Hints} Hints
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Hints.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Hints message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.OcrConfig.Hints
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Hints.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.languageHints != null && message.hasOwnProperty("languageHints")) {
                                    if (!Array.isArray(message.languageHints))
                                        return "languageHints: array expected";
                                    for (var i = 0; i < message.languageHints.length; ++i)
                                        if (!$util.isString(message.languageHints[i]))
                                            return "languageHints: string[] expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a Hints message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.OcrConfig.Hints
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.OcrConfig.Hints} Hints
                             */
                            Hints.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.OcrConfig.Hints)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.OcrConfig.Hints();
                                if (object.languageHints) {
                                    if (!Array.isArray(object.languageHints))
                                        throw TypeError(".google.cloud.documentai.v1.OcrConfig.Hints.languageHints: array expected");
                                    message.languageHints = [];
                                    for (var i = 0; i < object.languageHints.length; ++i)
                                        message.languageHints[i] = String(object.languageHints[i]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Hints message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.OcrConfig.Hints
                             * @static
                             * @param {google.cloud.documentai.v1.OcrConfig.Hints} message Hints
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Hints.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.languageHints = [];
                                if (message.languageHints && message.languageHints.length) {
                                    object.languageHints = [];
                                    for (var j = 0; j < message.languageHints.length; ++j)
                                        object.languageHints[j] = message.languageHints[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this Hints to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.OcrConfig.Hints
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Hints.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Hints
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.OcrConfig.Hints
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Hints.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.OcrConfig.Hints";
                            };
    
                            return Hints;
                        })();
    
                        OcrConfig.PremiumFeatures = (function() {
    
                            /**
                             * Properties of a PremiumFeatures.
                             * @memberof google.cloud.documentai.v1.OcrConfig
                             * @interface IPremiumFeatures
                             * @property {boolean|null} [enableSelectionMarkDetection] PremiumFeatures enableSelectionMarkDetection
                             * @property {boolean|null} [computeStyleInfo] PremiumFeatures computeStyleInfo
                             * @property {boolean|null} [enableMathOcr] PremiumFeatures enableMathOcr
                             */
    
                            /**
                             * Constructs a new PremiumFeatures.
                             * @memberof google.cloud.documentai.v1.OcrConfig
                             * @classdesc Represents a PremiumFeatures.
                             * @implements IPremiumFeatures
                             * @constructor
                             * @param {google.cloud.documentai.v1.OcrConfig.IPremiumFeatures=} [properties] Properties to set
                             */
                            function PremiumFeatures(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * PremiumFeatures enableSelectionMarkDetection.
                             * @member {boolean} enableSelectionMarkDetection
                             * @memberof google.cloud.documentai.v1.OcrConfig.PremiumFeatures
                             * @instance
                             */
                            PremiumFeatures.prototype.enableSelectionMarkDetection = false;
    
                            /**
                             * PremiumFeatures computeStyleInfo.
                             * @member {boolean} computeStyleInfo
                             * @memberof google.cloud.documentai.v1.OcrConfig.PremiumFeatures
                             * @instance
                             */
                            PremiumFeatures.prototype.computeStyleInfo = false;
    
                            /**
                             * PremiumFeatures enableMathOcr.
                             * @member {boolean} enableMathOcr
                             * @memberof google.cloud.documentai.v1.OcrConfig.PremiumFeatures
                             * @instance
                             */
                            PremiumFeatures.prototype.enableMathOcr = false;
    
                            /**
                             * Creates a new PremiumFeatures instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.OcrConfig.PremiumFeatures
                             * @static
                             * @param {google.cloud.documentai.v1.OcrConfig.IPremiumFeatures=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.OcrConfig.PremiumFeatures} PremiumFeatures instance
                             */
                            PremiumFeatures.create = function create(properties) {
                                return new PremiumFeatures(properties);
                            };
    
                            /**
                             * Encodes the specified PremiumFeatures message. Does not implicitly {@link google.cloud.documentai.v1.OcrConfig.PremiumFeatures.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.OcrConfig.PremiumFeatures
                             * @static
                             * @param {google.cloud.documentai.v1.OcrConfig.IPremiumFeatures} message PremiumFeatures message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PremiumFeatures.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.enableSelectionMarkDetection != null && Object.hasOwnProperty.call(message, "enableSelectionMarkDetection"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.enableSelectionMarkDetection);
                                if (message.computeStyleInfo != null && Object.hasOwnProperty.call(message, "computeStyleInfo"))
                                    writer.uint32(/* id 4, wireType 0 =*/32).bool(message.computeStyleInfo);
                                if (message.enableMathOcr != null && Object.hasOwnProperty.call(message, "enableMathOcr"))
                                    writer.uint32(/* id 5, wireType 0 =*/40).bool(message.enableMathOcr);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified PremiumFeatures message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.OcrConfig.PremiumFeatures.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.OcrConfig.PremiumFeatures
                             * @static
                             * @param {google.cloud.documentai.v1.OcrConfig.IPremiumFeatures} message PremiumFeatures message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PremiumFeatures.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a PremiumFeatures message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.OcrConfig.PremiumFeatures
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.OcrConfig.PremiumFeatures} PremiumFeatures
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PremiumFeatures.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.OcrConfig.PremiumFeatures();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 3: {
                                            message.enableSelectionMarkDetection = reader.bool();
                                            break;
                                        }
                                    case 4: {
                                            message.computeStyleInfo = reader.bool();
                                            break;
                                        }
                                    case 5: {
                                            message.enableMathOcr = reader.bool();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a PremiumFeatures message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.OcrConfig.PremiumFeatures
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.OcrConfig.PremiumFeatures} PremiumFeatures
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PremiumFeatures.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a PremiumFeatures message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.OcrConfig.PremiumFeatures
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            PremiumFeatures.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.enableSelectionMarkDetection != null && message.hasOwnProperty("enableSelectionMarkDetection"))
                                    if (typeof message.enableSelectionMarkDetection !== "boolean")
                                        return "enableSelectionMarkDetection: boolean expected";
                                if (message.computeStyleInfo != null && message.hasOwnProperty("computeStyleInfo"))
                                    if (typeof message.computeStyleInfo !== "boolean")
                                        return "computeStyleInfo: boolean expected";
                                if (message.enableMathOcr != null && message.hasOwnProperty("enableMathOcr"))
                                    if (typeof message.enableMathOcr !== "boolean")
                                        return "enableMathOcr: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates a PremiumFeatures message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.OcrConfig.PremiumFeatures
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.OcrConfig.PremiumFeatures} PremiumFeatures
                             */
                            PremiumFeatures.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.OcrConfig.PremiumFeatures)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.OcrConfig.PremiumFeatures();
                                if (object.enableSelectionMarkDetection != null)
                                    message.enableSelectionMarkDetection = Boolean(object.enableSelectionMarkDetection);
                                if (object.computeStyleInfo != null)
                                    message.computeStyleInfo = Boolean(object.computeStyleInfo);
                                if (object.enableMathOcr != null)
                                    message.enableMathOcr = Boolean(object.enableMathOcr);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a PremiumFeatures message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.OcrConfig.PremiumFeatures
                             * @static
                             * @param {google.cloud.documentai.v1.OcrConfig.PremiumFeatures} message PremiumFeatures
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            PremiumFeatures.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.enableSelectionMarkDetection = false;
                                    object.computeStyleInfo = false;
                                    object.enableMathOcr = false;
                                }
                                if (message.enableSelectionMarkDetection != null && message.hasOwnProperty("enableSelectionMarkDetection"))
                                    object.enableSelectionMarkDetection = message.enableSelectionMarkDetection;
                                if (message.computeStyleInfo != null && message.hasOwnProperty("computeStyleInfo"))
                                    object.computeStyleInfo = message.computeStyleInfo;
                                if (message.enableMathOcr != null && message.hasOwnProperty("enableMathOcr"))
                                    object.enableMathOcr = message.enableMathOcr;
                                return object;
                            };
    
                            /**
                             * Converts this PremiumFeatures to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.OcrConfig.PremiumFeatures
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            PremiumFeatures.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for PremiumFeatures
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.OcrConfig.PremiumFeatures
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            PremiumFeatures.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.OcrConfig.PremiumFeatures";
                            };
    
                            return PremiumFeatures;
                        })();
    
                        return OcrConfig;
                    })();
    
                    v1.DocumentProcessorService = (function() {
    
                        /**
                         * Constructs a new DocumentProcessorService service.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a DocumentProcessorService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function DocumentProcessorService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (DocumentProcessorService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = DocumentProcessorService;
    
                        /**
                         * Creates new DocumentProcessorService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {DocumentProcessorService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        DocumentProcessorService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.documentai.v1.DocumentProcessorService|processDocument}.
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @typedef ProcessDocumentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.documentai.v1.ProcessResponse} [response] ProcessResponse
                         */
    
                        /**
                         * Calls ProcessDocument.
                         * @function processDocument
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IProcessRequest} request ProcessRequest message or plain object
                         * @param {google.cloud.documentai.v1.DocumentProcessorService.ProcessDocumentCallback} callback Node-style callback called with the error, if any, and ProcessResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentProcessorService.prototype.processDocument = function processDocument(request, callback) {
                            return this.rpcCall(processDocument, $root.google.cloud.documentai.v1.ProcessRequest, $root.google.cloud.documentai.v1.ProcessResponse, request, callback);
                        }, "name", { value: "ProcessDocument" });
    
                        /**
                         * Calls ProcessDocument.
                         * @function processDocument
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IProcessRequest} request ProcessRequest message or plain object
                         * @returns {Promise<google.cloud.documentai.v1.ProcessResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.documentai.v1.DocumentProcessorService|batchProcessDocuments}.
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @typedef BatchProcessDocumentsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls BatchProcessDocuments.
                         * @function batchProcessDocuments
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IBatchProcessRequest} request BatchProcessRequest message or plain object
                         * @param {google.cloud.documentai.v1.DocumentProcessorService.BatchProcessDocumentsCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentProcessorService.prototype.batchProcessDocuments = function batchProcessDocuments(request, callback) {
                            return this.rpcCall(batchProcessDocuments, $root.google.cloud.documentai.v1.BatchProcessRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "BatchProcessDocuments" });
    
                        /**
                         * Calls BatchProcessDocuments.
                         * @function batchProcessDocuments
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IBatchProcessRequest} request BatchProcessRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.documentai.v1.DocumentProcessorService|fetchProcessorTypes}.
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @typedef FetchProcessorTypesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.documentai.v1.FetchProcessorTypesResponse} [response] FetchProcessorTypesResponse
                         */
    
                        /**
                         * Calls FetchProcessorTypes.
                         * @function fetchProcessorTypes
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IFetchProcessorTypesRequest} request FetchProcessorTypesRequest message or plain object
                         * @param {google.cloud.documentai.v1.DocumentProcessorService.FetchProcessorTypesCallback} callback Node-style callback called with the error, if any, and FetchProcessorTypesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentProcessorService.prototype.fetchProcessorTypes = function fetchProcessorTypes(request, callback) {
                            return this.rpcCall(fetchProcessorTypes, $root.google.cloud.documentai.v1.FetchProcessorTypesRequest, $root.google.cloud.documentai.v1.FetchProcessorTypesResponse, request, callback);
                        }, "name", { value: "FetchProcessorTypes" });
    
                        /**
                         * Calls FetchProcessorTypes.
                         * @function fetchProcessorTypes
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IFetchProcessorTypesRequest} request FetchProcessorTypesRequest message or plain object
                         * @returns {Promise<google.cloud.documentai.v1.FetchProcessorTypesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.documentai.v1.DocumentProcessorService|listProcessorTypes}.
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @typedef ListProcessorTypesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.documentai.v1.ListProcessorTypesResponse} [response] ListProcessorTypesResponse
                         */
    
                        /**
                         * Calls ListProcessorTypes.
                         * @function listProcessorTypes
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IListProcessorTypesRequest} request ListProcessorTypesRequest message or plain object
                         * @param {google.cloud.documentai.v1.DocumentProcessorService.ListProcessorTypesCallback} callback Node-style callback called with the error, if any, and ListProcessorTypesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentProcessorService.prototype.listProcessorTypes = function listProcessorTypes(request, callback) {
                            return this.rpcCall(listProcessorTypes, $root.google.cloud.documentai.v1.ListProcessorTypesRequest, $root.google.cloud.documentai.v1.ListProcessorTypesResponse, request, callback);
                        }, "name", { value: "ListProcessorTypes" });
    
                        /**
                         * Calls ListProcessorTypes.
                         * @function listProcessorTypes
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IListProcessorTypesRequest} request ListProcessorTypesRequest message or plain object
                         * @returns {Promise<google.cloud.documentai.v1.ListProcessorTypesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.documentai.v1.DocumentProcessorService|getProcessorType}.
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @typedef GetProcessorTypeCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.documentai.v1.ProcessorType} [response] ProcessorType
                         */
    
                        /**
                         * Calls GetProcessorType.
                         * @function getProcessorType
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IGetProcessorTypeRequest} request GetProcessorTypeRequest message or plain object
                         * @param {google.cloud.documentai.v1.DocumentProcessorService.GetProcessorTypeCallback} callback Node-style callback called with the error, if any, and ProcessorType
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentProcessorService.prototype.getProcessorType = function getProcessorType(request, callback) {
                            return this.rpcCall(getProcessorType, $root.google.cloud.documentai.v1.GetProcessorTypeRequest, $root.google.cloud.documentai.v1.ProcessorType, request, callback);
                        }, "name", { value: "GetProcessorType" });
    
                        /**
                         * Calls GetProcessorType.
                         * @function getProcessorType
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IGetProcessorTypeRequest} request GetProcessorTypeRequest message or plain object
                         * @returns {Promise<google.cloud.documentai.v1.ProcessorType>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.documentai.v1.DocumentProcessorService|listProcessors}.
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @typedef ListProcessorsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.documentai.v1.ListProcessorsResponse} [response] ListProcessorsResponse
                         */
    
                        /**
                         * Calls ListProcessors.
                         * @function listProcessors
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IListProcessorsRequest} request ListProcessorsRequest message or plain object
                         * @param {google.cloud.documentai.v1.DocumentProcessorService.ListProcessorsCallback} callback Node-style callback called with the error, if any, and ListProcessorsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentProcessorService.prototype.listProcessors = function listProcessors(request, callback) {
                            return this.rpcCall(listProcessors, $root.google.cloud.documentai.v1.ListProcessorsRequest, $root.google.cloud.documentai.v1.ListProcessorsResponse, request, callback);
                        }, "name", { value: "ListProcessors" });
    
                        /**
                         * Calls ListProcessors.
                         * @function listProcessors
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IListProcessorsRequest} request ListProcessorsRequest message or plain object
                         * @returns {Promise<google.cloud.documentai.v1.ListProcessorsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.documentai.v1.DocumentProcessorService|getProcessor}.
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @typedef GetProcessorCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.documentai.v1.Processor} [response] Processor
                         */
    
                        /**
                         * Calls GetProcessor.
                         * @function getProcessor
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IGetProcessorRequest} request GetProcessorRequest message or plain object
                         * @param {google.cloud.documentai.v1.DocumentProcessorService.GetProcessorCallback} callback Node-style callback called with the error, if any, and Processor
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentProcessorService.prototype.getProcessor = function getProcessor(request, callback) {
                            return this.rpcCall(getProcessor, $root.google.cloud.documentai.v1.GetProcessorRequest, $root.google.cloud.documentai.v1.Processor, request, callback);
                        }, "name", { value: "GetProcessor" });
    
                        /**
                         * Calls GetProcessor.
                         * @function getProcessor
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IGetProcessorRequest} request GetProcessorRequest message or plain object
                         * @returns {Promise<google.cloud.documentai.v1.Processor>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.documentai.v1.DocumentProcessorService|trainProcessorVersion}.
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @typedef TrainProcessorVersionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls TrainProcessorVersion.
                         * @function trainProcessorVersion
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.ITrainProcessorVersionRequest} request TrainProcessorVersionRequest message or plain object
                         * @param {google.cloud.documentai.v1.DocumentProcessorService.TrainProcessorVersionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentProcessorService.prototype.trainProcessorVersion = function trainProcessorVersion(request, callback) {
                            return this.rpcCall(trainProcessorVersion, $root.google.cloud.documentai.v1.TrainProcessorVersionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "TrainProcessorVersion" });
    
                        /**
                         * Calls TrainProcessorVersion.
                         * @function trainProcessorVersion
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.ITrainProcessorVersionRequest} request TrainProcessorVersionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.documentai.v1.DocumentProcessorService|getProcessorVersion}.
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @typedef GetProcessorVersionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.documentai.v1.ProcessorVersion} [response] ProcessorVersion
                         */
    
                        /**
                         * Calls GetProcessorVersion.
                         * @function getProcessorVersion
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IGetProcessorVersionRequest} request GetProcessorVersionRequest message or plain object
                         * @param {google.cloud.documentai.v1.DocumentProcessorService.GetProcessorVersionCallback} callback Node-style callback called with the error, if any, and ProcessorVersion
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentProcessorService.prototype.getProcessorVersion = function getProcessorVersion(request, callback) {
                            return this.rpcCall(getProcessorVersion, $root.google.cloud.documentai.v1.GetProcessorVersionRequest, $root.google.cloud.documentai.v1.ProcessorVersion, request, callback);
                        }, "name", { value: "GetProcessorVersion" });
    
                        /**
                         * Calls GetProcessorVersion.
                         * @function getProcessorVersion
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IGetProcessorVersionRequest} request GetProcessorVersionRequest message or plain object
                         * @returns {Promise<google.cloud.documentai.v1.ProcessorVersion>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.documentai.v1.DocumentProcessorService|listProcessorVersions}.
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @typedef ListProcessorVersionsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.documentai.v1.ListProcessorVersionsResponse} [response] ListProcessorVersionsResponse
                         */
    
                        /**
                         * Calls ListProcessorVersions.
                         * @function listProcessorVersions
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IListProcessorVersionsRequest} request ListProcessorVersionsRequest message or plain object
                         * @param {google.cloud.documentai.v1.DocumentProcessorService.ListProcessorVersionsCallback} callback Node-style callback called with the error, if any, and ListProcessorVersionsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentProcessorService.prototype.listProcessorVersions = function listProcessorVersions(request, callback) {
                            return this.rpcCall(listProcessorVersions, $root.google.cloud.documentai.v1.ListProcessorVersionsRequest, $root.google.cloud.documentai.v1.ListProcessorVersionsResponse, request, callback);
                        }, "name", { value: "ListProcessorVersions" });
    
                        /**
                         * Calls ListProcessorVersions.
                         * @function listProcessorVersions
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IListProcessorVersionsRequest} request ListProcessorVersionsRequest message or plain object
                         * @returns {Promise<google.cloud.documentai.v1.ListProcessorVersionsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.documentai.v1.DocumentProcessorService|deleteProcessorVersion}.
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @typedef DeleteProcessorVersionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteProcessorVersion.
                         * @function deleteProcessorVersion
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IDeleteProcessorVersionRequest} request DeleteProcessorVersionRequest message or plain object
                         * @param {google.cloud.documentai.v1.DocumentProcessorService.DeleteProcessorVersionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentProcessorService.prototype.deleteProcessorVersion = function deleteProcessorVersion(request, callback) {
                            return this.rpcCall(deleteProcessorVersion, $root.google.cloud.documentai.v1.DeleteProcessorVersionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteProcessorVersion" });
    
                        /**
                         * Calls DeleteProcessorVersion.
                         * @function deleteProcessorVersion
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IDeleteProcessorVersionRequest} request DeleteProcessorVersionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.documentai.v1.DocumentProcessorService|deployProcessorVersion}.
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @typedef DeployProcessorVersionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeployProcessorVersion.
                         * @function deployProcessorVersion
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IDeployProcessorVersionRequest} request DeployProcessorVersionRequest message or plain object
                         * @param {google.cloud.documentai.v1.DocumentProcessorService.DeployProcessorVersionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentProcessorService.prototype.deployProcessorVersion = function deployProcessorVersion(request, callback) {
                            return this.rpcCall(deployProcessorVersion, $root.google.cloud.documentai.v1.DeployProcessorVersionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeployProcessorVersion" });
    
                        /**
                         * Calls DeployProcessorVersion.
                         * @function deployProcessorVersion
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IDeployProcessorVersionRequest} request DeployProcessorVersionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.documentai.v1.DocumentProcessorService|undeployProcessorVersion}.
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @typedef UndeployProcessorVersionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UndeployProcessorVersion.
                         * @function undeployProcessorVersion
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IUndeployProcessorVersionRequest} request UndeployProcessorVersionRequest message or plain object
                         * @param {google.cloud.documentai.v1.DocumentProcessorService.UndeployProcessorVersionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentProcessorService.prototype.undeployProcessorVersion = function undeployProcessorVersion(request, callback) {
                            return this.rpcCall(undeployProcessorVersion, $root.google.cloud.documentai.v1.UndeployProcessorVersionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UndeployProcessorVersion" });
    
                        /**
                         * Calls UndeployProcessorVersion.
                         * @function undeployProcessorVersion
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IUndeployProcessorVersionRequest} request UndeployProcessorVersionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.documentai.v1.DocumentProcessorService|createProcessor}.
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @typedef CreateProcessorCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.documentai.v1.Processor} [response] Processor
                         */
    
                        /**
                         * Calls CreateProcessor.
                         * @function createProcessor
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.ICreateProcessorRequest} request CreateProcessorRequest message or plain object
                         * @param {google.cloud.documentai.v1.DocumentProcessorService.CreateProcessorCallback} callback Node-style callback called with the error, if any, and Processor
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentProcessorService.prototype.createProcessor = function createProcessor(request, callback) {
                            return this.rpcCall(createProcessor, $root.google.cloud.documentai.v1.CreateProcessorRequest, $root.google.cloud.documentai.v1.Processor, request, callback);
                        }, "name", { value: "CreateProcessor" });
    
                        /**
                         * Calls CreateProcessor.
                         * @function createProcessor
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.ICreateProcessorRequest} request CreateProcessorRequest message or plain object
                         * @returns {Promise<google.cloud.documentai.v1.Processor>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.documentai.v1.DocumentProcessorService|deleteProcessor}.
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @typedef DeleteProcessorCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteProcessor.
                         * @function deleteProcessor
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IDeleteProcessorRequest} request DeleteProcessorRequest message or plain object
                         * @param {google.cloud.documentai.v1.DocumentProcessorService.DeleteProcessorCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentProcessorService.prototype.deleteProcessor = function deleteProcessor(request, callback) {
                            return this.rpcCall(deleteProcessor, $root.google.cloud.documentai.v1.DeleteProcessorRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteProcessor" });
    
                        /**
                         * Calls DeleteProcessor.
                         * @function deleteProcessor
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IDeleteProcessorRequest} request DeleteProcessorRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.documentai.v1.DocumentProcessorService|enableProcessor}.
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @typedef EnableProcessorCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls EnableProcessor.
                         * @function enableProcessor
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IEnableProcessorRequest} request EnableProcessorRequest message or plain object
                         * @param {google.cloud.documentai.v1.DocumentProcessorService.EnableProcessorCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentProcessorService.prototype.enableProcessor = function enableProcessor(request, callback) {
                            return this.rpcCall(enableProcessor, $root.google.cloud.documentai.v1.EnableProcessorRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "EnableProcessor" });
    
                        /**
                         * Calls EnableProcessor.
                         * @function enableProcessor
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IEnableProcessorRequest} request EnableProcessorRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.documentai.v1.DocumentProcessorService|disableProcessor}.
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @typedef DisableProcessorCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DisableProcessor.
                         * @function disableProcessor
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IDisableProcessorRequest} request DisableProcessorRequest message or plain object
                         * @param {google.cloud.documentai.v1.DocumentProcessorService.DisableProcessorCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentProcessorService.prototype.disableProcessor = function disableProcessor(request, callback) {
                            return this.rpcCall(disableProcessor, $root.google.cloud.documentai.v1.DisableProcessorRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DisableProcessor" });
    
                        /**
                         * Calls DisableProcessor.
                         * @function disableProcessor
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IDisableProcessorRequest} request DisableProcessorRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.documentai.v1.DocumentProcessorService|setDefaultProcessorVersion}.
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @typedef SetDefaultProcessorVersionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls SetDefaultProcessorVersion.
                         * @function setDefaultProcessorVersion
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.ISetDefaultProcessorVersionRequest} request SetDefaultProcessorVersionRequest message or plain object
                         * @param {google.cloud.documentai.v1.DocumentProcessorService.SetDefaultProcessorVersionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentProcessorService.prototype.setDefaultProcessorVersion = function setDefaultProcessorVersion(request, callback) {
                            return this.rpcCall(setDefaultProcessorVersion, $root.google.cloud.documentai.v1.SetDefaultProcessorVersionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "SetDefaultProcessorVersion" });
    
                        /**
                         * Calls SetDefaultProcessorVersion.
                         * @function setDefaultProcessorVersion
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.ISetDefaultProcessorVersionRequest} request SetDefaultProcessorVersionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.documentai.v1.DocumentProcessorService|reviewDocument}.
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @typedef ReviewDocumentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ReviewDocument.
                         * @function reviewDocument
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IReviewDocumentRequest} request ReviewDocumentRequest message or plain object
                         * @param {google.cloud.documentai.v1.DocumentProcessorService.ReviewDocumentCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentProcessorService.prototype.reviewDocument = function reviewDocument(request, callback) {
                            return this.rpcCall(reviewDocument, $root.google.cloud.documentai.v1.ReviewDocumentRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ReviewDocument" });
    
                        /**
                         * Calls ReviewDocument.
                         * @function reviewDocument
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IReviewDocumentRequest} request ReviewDocumentRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.documentai.v1.DocumentProcessorService|evaluateProcessorVersion}.
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @typedef EvaluateProcessorVersionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls EvaluateProcessorVersion.
                         * @function evaluateProcessorVersion
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IEvaluateProcessorVersionRequest} request EvaluateProcessorVersionRequest message or plain object
                         * @param {google.cloud.documentai.v1.DocumentProcessorService.EvaluateProcessorVersionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentProcessorService.prototype.evaluateProcessorVersion = function evaluateProcessorVersion(request, callback) {
                            return this.rpcCall(evaluateProcessorVersion, $root.google.cloud.documentai.v1.EvaluateProcessorVersionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "EvaluateProcessorVersion" });
    
                        /**
                         * Calls EvaluateProcessorVersion.
                         * @function evaluateProcessorVersion
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IEvaluateProcessorVersionRequest} request EvaluateProcessorVersionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.documentai.v1.DocumentProcessorService|getEvaluation}.
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @typedef GetEvaluationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.documentai.v1.Evaluation} [response] Evaluation
                         */
    
                        /**
                         * Calls GetEvaluation.
                         * @function getEvaluation
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IGetEvaluationRequest} request GetEvaluationRequest message or plain object
                         * @param {google.cloud.documentai.v1.DocumentProcessorService.GetEvaluationCallback} callback Node-style callback called with the error, if any, and Evaluation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentProcessorService.prototype.getEvaluation = function getEvaluation(request, callback) {
                            return this.rpcCall(getEvaluation, $root.google.cloud.documentai.v1.GetEvaluationRequest, $root.google.cloud.documentai.v1.Evaluation, request, callback);
                        }, "name", { value: "GetEvaluation" });
    
                        /**
                         * Calls GetEvaluation.
                         * @function getEvaluation
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IGetEvaluationRequest} request GetEvaluationRequest message or plain object
                         * @returns {Promise<google.cloud.documentai.v1.Evaluation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.documentai.v1.DocumentProcessorService|listEvaluations}.
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @typedef ListEvaluationsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.documentai.v1.ListEvaluationsResponse} [response] ListEvaluationsResponse
                         */
    
                        /**
                         * Calls ListEvaluations.
                         * @function listEvaluations
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IListEvaluationsRequest} request ListEvaluationsRequest message or plain object
                         * @param {google.cloud.documentai.v1.DocumentProcessorService.ListEvaluationsCallback} callback Node-style callback called with the error, if any, and ListEvaluationsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentProcessorService.prototype.listEvaluations = function listEvaluations(request, callback) {
                            return this.rpcCall(listEvaluations, $root.google.cloud.documentai.v1.ListEvaluationsRequest, $root.google.cloud.documentai.v1.ListEvaluationsResponse, request, callback);
                        }, "name", { value: "ListEvaluations" });
    
                        /**
                         * Calls ListEvaluations.
                         * @function listEvaluations
                         * @memberof google.cloud.documentai.v1.DocumentProcessorService
                         * @instance
                         * @param {google.cloud.documentai.v1.IListEvaluationsRequest} request ListEvaluationsRequest message or plain object
                         * @returns {Promise<google.cloud.documentai.v1.ListEvaluationsResponse>} Promise
                         * @variation 2
                         */
    
                        return DocumentProcessorService;
                    })();
    
                    v1.ProcessOptions = (function() {
    
                        /**
                         * Properties of a ProcessOptions.
                         * @memberof google.cloud.documentai.v1
                         * @interface IProcessOptions
                         * @property {google.cloud.documentai.v1.ProcessOptions.IIndividualPageSelector|null} [individualPageSelector] ProcessOptions individualPageSelector
                         * @property {number|null} [fromStart] ProcessOptions fromStart
                         * @property {number|null} [fromEnd] ProcessOptions fromEnd
                         * @property {google.cloud.documentai.v1.IOcrConfig|null} [ocrConfig] ProcessOptions ocrConfig
                         * @property {google.cloud.documentai.v1.IDocumentSchema|null} [schemaOverride] ProcessOptions schemaOverride
                         */
    
                        /**
                         * Constructs a new ProcessOptions.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a ProcessOptions.
                         * @implements IProcessOptions
                         * @constructor
                         * @param {google.cloud.documentai.v1.IProcessOptions=} [properties] Properties to set
                         */
                        function ProcessOptions(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ProcessOptions individualPageSelector.
                         * @member {google.cloud.documentai.v1.ProcessOptions.IIndividualPageSelector|null|undefined} individualPageSelector
                         * @memberof google.cloud.documentai.v1.ProcessOptions
                         * @instance
                         */
                        ProcessOptions.prototype.individualPageSelector = null;
    
                        /**
                         * ProcessOptions fromStart.
                         * @member {number|null|undefined} fromStart
                         * @memberof google.cloud.documentai.v1.ProcessOptions
                         * @instance
                         */
                        ProcessOptions.prototype.fromStart = null;
    
                        /**
                         * ProcessOptions fromEnd.
                         * @member {number|null|undefined} fromEnd
                         * @memberof google.cloud.documentai.v1.ProcessOptions
                         * @instance
                         */
                        ProcessOptions.prototype.fromEnd = null;
    
                        /**
                         * ProcessOptions ocrConfig.
                         * @member {google.cloud.documentai.v1.IOcrConfig|null|undefined} ocrConfig
                         * @memberof google.cloud.documentai.v1.ProcessOptions
                         * @instance
                         */
                        ProcessOptions.prototype.ocrConfig = null;
    
                        /**
                         * ProcessOptions schemaOverride.
                         * @member {google.cloud.documentai.v1.IDocumentSchema|null|undefined} schemaOverride
                         * @memberof google.cloud.documentai.v1.ProcessOptions
                         * @instance
                         */
                        ProcessOptions.prototype.schemaOverride = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ProcessOptions pageRange.
                         * @member {"individualPageSelector"|"fromStart"|"fromEnd"|undefined} pageRange
                         * @memberof google.cloud.documentai.v1.ProcessOptions
                         * @instance
                         */
                        Object.defineProperty(ProcessOptions.prototype, "pageRange", {
                            get: $util.oneOfGetter($oneOfFields = ["individualPageSelector", "fromStart", "fromEnd"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ProcessOptions instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.ProcessOptions
                         * @static
                         * @param {google.cloud.documentai.v1.IProcessOptions=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.ProcessOptions} ProcessOptions instance
                         */
                        ProcessOptions.create = function create(properties) {
                            return new ProcessOptions(properties);
                        };
    
                        /**
                         * Encodes the specified ProcessOptions message. Does not implicitly {@link google.cloud.documentai.v1.ProcessOptions.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.ProcessOptions
                         * @static
                         * @param {google.cloud.documentai.v1.IProcessOptions} message ProcessOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ProcessOptions.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.ocrConfig != null && Object.hasOwnProperty.call(message, "ocrConfig"))
                                $root.google.cloud.documentai.v1.OcrConfig.encode(message.ocrConfig, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.individualPageSelector != null && Object.hasOwnProperty.call(message, "individualPageSelector"))
                                $root.google.cloud.documentai.v1.ProcessOptions.IndividualPageSelector.encode(message.individualPageSelector, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.fromStart != null && Object.hasOwnProperty.call(message, "fromStart"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.fromStart);
                            if (message.fromEnd != null && Object.hasOwnProperty.call(message, "fromEnd"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.fromEnd);
                            if (message.schemaOverride != null && Object.hasOwnProperty.call(message, "schemaOverride"))
                                $root.google.cloud.documentai.v1.DocumentSchema.encode(message.schemaOverride, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ProcessOptions message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.ProcessOptions.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.ProcessOptions
                         * @static
                         * @param {google.cloud.documentai.v1.IProcessOptions} message ProcessOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ProcessOptions.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ProcessOptions message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.ProcessOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.ProcessOptions} ProcessOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ProcessOptions.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.ProcessOptions();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 5: {
                                        message.individualPageSelector = $root.google.cloud.documentai.v1.ProcessOptions.IndividualPageSelector.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.fromStart = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.fromEnd = reader.int32();
                                        break;
                                    }
                                case 1: {
                                        message.ocrConfig = $root.google.cloud.documentai.v1.OcrConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.schemaOverride = $root.google.cloud.documentai.v1.DocumentSchema.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ProcessOptions message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.ProcessOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.ProcessOptions} ProcessOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ProcessOptions.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ProcessOptions message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.ProcessOptions
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ProcessOptions.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.individualPageSelector != null && message.hasOwnProperty("individualPageSelector")) {
                                properties.pageRange = 1;
                                {
                                    var error = $root.google.cloud.documentai.v1.ProcessOptions.IndividualPageSelector.verify(message.individualPageSelector);
                                    if (error)
                                        return "individualPageSelector." + error;
                                }
                            }
                            if (message.fromStart != null && message.hasOwnProperty("fromStart")) {
                                if (properties.pageRange === 1)
                                    return "pageRange: multiple values";
                                properties.pageRange = 1;
                                if (!$util.isInteger(message.fromStart))
                                    return "fromStart: integer expected";
                            }
                            if (message.fromEnd != null && message.hasOwnProperty("fromEnd")) {
                                if (properties.pageRange === 1)
                                    return "pageRange: multiple values";
                                properties.pageRange = 1;
                                if (!$util.isInteger(message.fromEnd))
                                    return "fromEnd: integer expected";
                            }
                            if (message.ocrConfig != null && message.hasOwnProperty("ocrConfig")) {
                                var error = $root.google.cloud.documentai.v1.OcrConfig.verify(message.ocrConfig);
                                if (error)
                                    return "ocrConfig." + error;
                            }
                            if (message.schemaOverride != null && message.hasOwnProperty("schemaOverride")) {
                                var error = $root.google.cloud.documentai.v1.DocumentSchema.verify(message.schemaOverride);
                                if (error)
                                    return "schemaOverride." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ProcessOptions message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.ProcessOptions
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.ProcessOptions} ProcessOptions
                         */
                        ProcessOptions.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.ProcessOptions)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.ProcessOptions();
                            if (object.individualPageSelector != null) {
                                if (typeof object.individualPageSelector !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.ProcessOptions.individualPageSelector: object expected");
                                message.individualPageSelector = $root.google.cloud.documentai.v1.ProcessOptions.IndividualPageSelector.fromObject(object.individualPageSelector);
                            }
                            if (object.fromStart != null)
                                message.fromStart = object.fromStart | 0;
                            if (object.fromEnd != null)
                                message.fromEnd = object.fromEnd | 0;
                            if (object.ocrConfig != null) {
                                if (typeof object.ocrConfig !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.ProcessOptions.ocrConfig: object expected");
                                message.ocrConfig = $root.google.cloud.documentai.v1.OcrConfig.fromObject(object.ocrConfig);
                            }
                            if (object.schemaOverride != null) {
                                if (typeof object.schemaOverride !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.ProcessOptions.schemaOverride: object expected");
                                message.schemaOverride = $root.google.cloud.documentai.v1.DocumentSchema.fromObject(object.schemaOverride);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ProcessOptions message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.ProcessOptions
                         * @static
                         * @param {google.cloud.documentai.v1.ProcessOptions} message ProcessOptions
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ProcessOptions.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.ocrConfig = null;
                                object.schemaOverride = null;
                            }
                            if (message.ocrConfig != null && message.hasOwnProperty("ocrConfig"))
                                object.ocrConfig = $root.google.cloud.documentai.v1.OcrConfig.toObject(message.ocrConfig, options);
                            if (message.individualPageSelector != null && message.hasOwnProperty("individualPageSelector")) {
                                object.individualPageSelector = $root.google.cloud.documentai.v1.ProcessOptions.IndividualPageSelector.toObject(message.individualPageSelector, options);
                                if (options.oneofs)
                                    object.pageRange = "individualPageSelector";
                            }
                            if (message.fromStart != null && message.hasOwnProperty("fromStart")) {
                                object.fromStart = message.fromStart;
                                if (options.oneofs)
                                    object.pageRange = "fromStart";
                            }
                            if (message.fromEnd != null && message.hasOwnProperty("fromEnd")) {
                                object.fromEnd = message.fromEnd;
                                if (options.oneofs)
                                    object.pageRange = "fromEnd";
                            }
                            if (message.schemaOverride != null && message.hasOwnProperty("schemaOverride"))
                                object.schemaOverride = $root.google.cloud.documentai.v1.DocumentSchema.toObject(message.schemaOverride, options);
                            return object;
                        };
    
                        /**
                         * Converts this ProcessOptions to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.ProcessOptions
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ProcessOptions.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ProcessOptions
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.ProcessOptions
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ProcessOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.ProcessOptions";
                        };
    
                        ProcessOptions.IndividualPageSelector = (function() {
    
                            /**
                             * Properties of an IndividualPageSelector.
                             * @memberof google.cloud.documentai.v1.ProcessOptions
                             * @interface IIndividualPageSelector
                             * @property {Array.<number>|null} [pages] IndividualPageSelector pages
                             */
    
                            /**
                             * Constructs a new IndividualPageSelector.
                             * @memberof google.cloud.documentai.v1.ProcessOptions
                             * @classdesc Represents an IndividualPageSelector.
                             * @implements IIndividualPageSelector
                             * @constructor
                             * @param {google.cloud.documentai.v1.ProcessOptions.IIndividualPageSelector=} [properties] Properties to set
                             */
                            function IndividualPageSelector(properties) {
                                this.pages = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * IndividualPageSelector pages.
                             * @member {Array.<number>} pages
                             * @memberof google.cloud.documentai.v1.ProcessOptions.IndividualPageSelector
                             * @instance
                             */
                            IndividualPageSelector.prototype.pages = $util.emptyArray;
    
                            /**
                             * Creates a new IndividualPageSelector instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.ProcessOptions.IndividualPageSelector
                             * @static
                             * @param {google.cloud.documentai.v1.ProcessOptions.IIndividualPageSelector=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.ProcessOptions.IndividualPageSelector} IndividualPageSelector instance
                             */
                            IndividualPageSelector.create = function create(properties) {
                                return new IndividualPageSelector(properties);
                            };
    
                            /**
                             * Encodes the specified IndividualPageSelector message. Does not implicitly {@link google.cloud.documentai.v1.ProcessOptions.IndividualPageSelector.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.ProcessOptions.IndividualPageSelector
                             * @static
                             * @param {google.cloud.documentai.v1.ProcessOptions.IIndividualPageSelector} message IndividualPageSelector message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            IndividualPageSelector.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.pages != null && message.pages.length) {
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork();
                                    for (var i = 0; i < message.pages.length; ++i)
                                        writer.int32(message.pages[i]);
                                    writer.ldelim();
                                }
                                return writer;
                            };
    
                            /**
                             * Encodes the specified IndividualPageSelector message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.ProcessOptions.IndividualPageSelector.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.ProcessOptions.IndividualPageSelector
                             * @static
                             * @param {google.cloud.documentai.v1.ProcessOptions.IIndividualPageSelector} message IndividualPageSelector message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            IndividualPageSelector.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an IndividualPageSelector message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.ProcessOptions.IndividualPageSelector
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.ProcessOptions.IndividualPageSelector} IndividualPageSelector
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            IndividualPageSelector.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.ProcessOptions.IndividualPageSelector();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.pages && message.pages.length))
                                                message.pages = [];
                                            if ((tag & 7) === 2) {
                                                var end2 = reader.uint32() + reader.pos;
                                                while (reader.pos < end2)
                                                    message.pages.push(reader.int32());
                                            } else
                                                message.pages.push(reader.int32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an IndividualPageSelector message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.ProcessOptions.IndividualPageSelector
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.ProcessOptions.IndividualPageSelector} IndividualPageSelector
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            IndividualPageSelector.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an IndividualPageSelector message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.ProcessOptions.IndividualPageSelector
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            IndividualPageSelector.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.pages != null && message.hasOwnProperty("pages")) {
                                    if (!Array.isArray(message.pages))
                                        return "pages: array expected";
                                    for (var i = 0; i < message.pages.length; ++i)
                                        if (!$util.isInteger(message.pages[i]))
                                            return "pages: integer[] expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates an IndividualPageSelector message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.ProcessOptions.IndividualPageSelector
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.ProcessOptions.IndividualPageSelector} IndividualPageSelector
                             */
                            IndividualPageSelector.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.ProcessOptions.IndividualPageSelector)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.ProcessOptions.IndividualPageSelector();
                                if (object.pages) {
                                    if (!Array.isArray(object.pages))
                                        throw TypeError(".google.cloud.documentai.v1.ProcessOptions.IndividualPageSelector.pages: array expected");
                                    message.pages = [];
                                    for (var i = 0; i < object.pages.length; ++i)
                                        message.pages[i] = object.pages[i] | 0;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an IndividualPageSelector message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.ProcessOptions.IndividualPageSelector
                             * @static
                             * @param {google.cloud.documentai.v1.ProcessOptions.IndividualPageSelector} message IndividualPageSelector
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            IndividualPageSelector.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.pages = [];
                                if (message.pages && message.pages.length) {
                                    object.pages = [];
                                    for (var j = 0; j < message.pages.length; ++j)
                                        object.pages[j] = message.pages[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this IndividualPageSelector to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.ProcessOptions.IndividualPageSelector
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            IndividualPageSelector.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for IndividualPageSelector
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.ProcessOptions.IndividualPageSelector
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            IndividualPageSelector.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.ProcessOptions.IndividualPageSelector";
                            };
    
                            return IndividualPageSelector;
                        })();
    
                        return ProcessOptions;
                    })();
    
                    v1.ProcessRequest = (function() {
    
                        /**
                         * Properties of a ProcessRequest.
                         * @memberof google.cloud.documentai.v1
                         * @interface IProcessRequest
                         * @property {google.cloud.documentai.v1.IDocument|null} [inlineDocument] ProcessRequest inlineDocument
                         * @property {google.cloud.documentai.v1.IRawDocument|null} [rawDocument] ProcessRequest rawDocument
                         * @property {google.cloud.documentai.v1.IGcsDocument|null} [gcsDocument] ProcessRequest gcsDocument
                         * @property {string|null} [name] ProcessRequest name
                         * @property {boolean|null} [skipHumanReview] ProcessRequest skipHumanReview
                         * @property {google.protobuf.IFieldMask|null} [fieldMask] ProcessRequest fieldMask
                         * @property {google.cloud.documentai.v1.IProcessOptions|null} [processOptions] ProcessRequest processOptions
                         * @property {Object.<string,string>|null} [labels] ProcessRequest labels
                         */
    
                        /**
                         * Constructs a new ProcessRequest.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a ProcessRequest.
                         * @implements IProcessRequest
                         * @constructor
                         * @param {google.cloud.documentai.v1.IProcessRequest=} [properties] Properties to set
                         */
                        function ProcessRequest(properties) {
                            this.labels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ProcessRequest inlineDocument.
                         * @member {google.cloud.documentai.v1.IDocument|null|undefined} inlineDocument
                         * @memberof google.cloud.documentai.v1.ProcessRequest
                         * @instance
                         */
                        ProcessRequest.prototype.inlineDocument = null;
    
                        /**
                         * ProcessRequest rawDocument.
                         * @member {google.cloud.documentai.v1.IRawDocument|null|undefined} rawDocument
                         * @memberof google.cloud.documentai.v1.ProcessRequest
                         * @instance
                         */
                        ProcessRequest.prototype.rawDocument = null;
    
                        /**
                         * ProcessRequest gcsDocument.
                         * @member {google.cloud.documentai.v1.IGcsDocument|null|undefined} gcsDocument
                         * @memberof google.cloud.documentai.v1.ProcessRequest
                         * @instance
                         */
                        ProcessRequest.prototype.gcsDocument = null;
    
                        /**
                         * ProcessRequest name.
                         * @member {string} name
                         * @memberof google.cloud.documentai.v1.ProcessRequest
                         * @instance
                         */
                        ProcessRequest.prototype.name = "";
    
                        /**
                         * ProcessRequest skipHumanReview.
                         * @member {boolean} skipHumanReview
                         * @memberof google.cloud.documentai.v1.ProcessRequest
                         * @instance
                         */
                        ProcessRequest.prototype.skipHumanReview = false;
    
                        /**
                         * ProcessRequest fieldMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} fieldMask
                         * @memberof google.cloud.documentai.v1.ProcessRequest
                         * @instance
                         */
                        ProcessRequest.prototype.fieldMask = null;
    
                        /**
                         * ProcessRequest processOptions.
                         * @member {google.cloud.documentai.v1.IProcessOptions|null|undefined} processOptions
                         * @memberof google.cloud.documentai.v1.ProcessRequest
                         * @instance
                         */
                        ProcessRequest.prototype.processOptions = null;
    
                        /**
                         * ProcessRequest labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.documentai.v1.ProcessRequest
                         * @instance
                         */
                        ProcessRequest.prototype.labels = $util.emptyObject;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ProcessRequest source.
                         * @member {"inlineDocument"|"rawDocument"|"gcsDocument"|undefined} source
                         * @memberof google.cloud.documentai.v1.ProcessRequest
                         * @instance
                         */
                        Object.defineProperty(ProcessRequest.prototype, "source", {
                            get: $util.oneOfGetter($oneOfFields = ["inlineDocument", "rawDocument", "gcsDocument"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ProcessRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.ProcessRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IProcessRequest=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.ProcessRequest} ProcessRequest instance
                         */
                        ProcessRequest.create = function create(properties) {
                            return new ProcessRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ProcessRequest message. Does not implicitly {@link google.cloud.documentai.v1.ProcessRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.ProcessRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IProcessRequest} message ProcessRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ProcessRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.skipHumanReview != null && Object.hasOwnProperty.call(message, "skipHumanReview"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.skipHumanReview);
                            if (message.inlineDocument != null && Object.hasOwnProperty.call(message, "inlineDocument"))
                                $root.google.cloud.documentai.v1.Document.encode(message.inlineDocument, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.rawDocument != null && Object.hasOwnProperty.call(message, "rawDocument"))
                                $root.google.cloud.documentai.v1.RawDocument.encode(message.rawDocument, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.fieldMask != null && Object.hasOwnProperty.call(message, "fieldMask"))
                                $root.google.protobuf.FieldMask.encode(message.fieldMask, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.processOptions != null && Object.hasOwnProperty.call(message, "processOptions"))
                                $root.google.cloud.documentai.v1.ProcessOptions.encode(message.processOptions, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.gcsDocument != null && Object.hasOwnProperty.call(message, "gcsDocument"))
                                $root.google.cloud.documentai.v1.GcsDocument.encode(message.gcsDocument, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 10, wireType 2 =*/82).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ProcessRequest message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.ProcessRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.ProcessRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IProcessRequest} message ProcessRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ProcessRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ProcessRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.ProcessRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.ProcessRequest} ProcessRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ProcessRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.ProcessRequest(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 4: {
                                        message.inlineDocument = $root.google.cloud.documentai.v1.Document.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.rawDocument = $root.google.cloud.documentai.v1.RawDocument.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.gcsDocument = $root.google.cloud.documentai.v1.GcsDocument.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.skipHumanReview = reader.bool();
                                        break;
                                    }
                                case 6: {
                                        message.fieldMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.processOptions = $root.google.cloud.documentai.v1.ProcessOptions.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ProcessRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.ProcessRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.ProcessRequest} ProcessRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ProcessRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ProcessRequest message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.ProcessRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ProcessRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.inlineDocument != null && message.hasOwnProperty("inlineDocument")) {
                                properties.source = 1;
                                {
                                    var error = $root.google.cloud.documentai.v1.Document.verify(message.inlineDocument);
                                    if (error)
                                        return "inlineDocument." + error;
                                }
                            }
                            if (message.rawDocument != null && message.hasOwnProperty("rawDocument")) {
                                if (properties.source === 1)
                                    return "source: multiple values";
                                properties.source = 1;
                                {
                                    var error = $root.google.cloud.documentai.v1.RawDocument.verify(message.rawDocument);
                                    if (error)
                                        return "rawDocument." + error;
                                }
                            }
                            if (message.gcsDocument != null && message.hasOwnProperty("gcsDocument")) {
                                if (properties.source === 1)
                                    return "source: multiple values";
                                properties.source = 1;
                                {
                                    var error = $root.google.cloud.documentai.v1.GcsDocument.verify(message.gcsDocument);
                                    if (error)
                                        return "gcsDocument." + error;
                                }
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.skipHumanReview != null && message.hasOwnProperty("skipHumanReview"))
                                if (typeof message.skipHumanReview !== "boolean")
                                    return "skipHumanReview: boolean expected";
                            if (message.fieldMask != null && message.hasOwnProperty("fieldMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.fieldMask);
                                if (error)
                                    return "fieldMask." + error;
                            }
                            if (message.processOptions != null && message.hasOwnProperty("processOptions")) {
                                var error = $root.google.cloud.documentai.v1.ProcessOptions.verify(message.processOptions);
                                if (error)
                                    return "processOptions." + error;
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ProcessRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.ProcessRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.ProcessRequest} ProcessRequest
                         */
                        ProcessRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.ProcessRequest)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.ProcessRequest();
                            if (object.inlineDocument != null) {
                                if (typeof object.inlineDocument !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.ProcessRequest.inlineDocument: object expected");
                                message.inlineDocument = $root.google.cloud.documentai.v1.Document.fromObject(object.inlineDocument);
                            }
                            if (object.rawDocument != null) {
                                if (typeof object.rawDocument !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.ProcessRequest.rawDocument: object expected");
                                message.rawDocument = $root.google.cloud.documentai.v1.RawDocument.fromObject(object.rawDocument);
                            }
                            if (object.gcsDocument != null) {
                                if (typeof object.gcsDocument !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.ProcessRequest.gcsDocument: object expected");
                                message.gcsDocument = $root.google.cloud.documentai.v1.GcsDocument.fromObject(object.gcsDocument);
                            }
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.skipHumanReview != null)
                                message.skipHumanReview = Boolean(object.skipHumanReview);
                            if (object.fieldMask != null) {
                                if (typeof object.fieldMask !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.ProcessRequest.fieldMask: object expected");
                                message.fieldMask = $root.google.protobuf.FieldMask.fromObject(object.fieldMask);
                            }
                            if (object.processOptions != null) {
                                if (typeof object.processOptions !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.ProcessRequest.processOptions: object expected");
                                message.processOptions = $root.google.cloud.documentai.v1.ProcessOptions.fromObject(object.processOptions);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.ProcessRequest.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ProcessRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.ProcessRequest
                         * @static
                         * @param {google.cloud.documentai.v1.ProcessRequest} message ProcessRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ProcessRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.name = "";
                                object.skipHumanReview = false;
                                object.fieldMask = null;
                                object.processOptions = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.skipHumanReview != null && message.hasOwnProperty("skipHumanReview"))
                                object.skipHumanReview = message.skipHumanReview;
                            if (message.inlineDocument != null && message.hasOwnProperty("inlineDocument")) {
                                object.inlineDocument = $root.google.cloud.documentai.v1.Document.toObject(message.inlineDocument, options);
                                if (options.oneofs)
                                    object.source = "inlineDocument";
                            }
                            if (message.rawDocument != null && message.hasOwnProperty("rawDocument")) {
                                object.rawDocument = $root.google.cloud.documentai.v1.RawDocument.toObject(message.rawDocument, options);
                                if (options.oneofs)
                                    object.source = "rawDocument";
                            }
                            if (message.fieldMask != null && message.hasOwnProperty("fieldMask"))
                                object.fieldMask = $root.google.protobuf.FieldMask.toObject(message.fieldMask, options);
                            if (message.processOptions != null && message.hasOwnProperty("processOptions"))
                                object.processOptions = $root.google.cloud.documentai.v1.ProcessOptions.toObject(message.processOptions, options);
                            if (message.gcsDocument != null && message.hasOwnProperty("gcsDocument")) {
                                object.gcsDocument = $root.google.cloud.documentai.v1.GcsDocument.toObject(message.gcsDocument, options);
                                if (options.oneofs)
                                    object.source = "gcsDocument";
                            }
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ProcessRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.ProcessRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ProcessRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ProcessRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.ProcessRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ProcessRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.ProcessRequest";
                        };
    
                        return ProcessRequest;
                    })();
    
                    v1.HumanReviewStatus = (function() {
    
                        /**
                         * Properties of a HumanReviewStatus.
                         * @memberof google.cloud.documentai.v1
                         * @interface IHumanReviewStatus
                         * @property {google.cloud.documentai.v1.HumanReviewStatus.State|null} [state] HumanReviewStatus state
                         * @property {string|null} [stateMessage] HumanReviewStatus stateMessage
                         * @property {string|null} [humanReviewOperation] HumanReviewStatus humanReviewOperation
                         */
    
                        /**
                         * Constructs a new HumanReviewStatus.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a HumanReviewStatus.
                         * @implements IHumanReviewStatus
                         * @constructor
                         * @param {google.cloud.documentai.v1.IHumanReviewStatus=} [properties] Properties to set
                         */
                        function HumanReviewStatus(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * HumanReviewStatus state.
                         * @member {google.cloud.documentai.v1.HumanReviewStatus.State} state
                         * @memberof google.cloud.documentai.v1.HumanReviewStatus
                         * @instance
                         */
                        HumanReviewStatus.prototype.state = 0;
    
                        /**
                         * HumanReviewStatus stateMessage.
                         * @member {string} stateMessage
                         * @memberof google.cloud.documentai.v1.HumanReviewStatus
                         * @instance
                         */
                        HumanReviewStatus.prototype.stateMessage = "";
    
                        /**
                         * HumanReviewStatus humanReviewOperation.
                         * @member {string} humanReviewOperation
                         * @memberof google.cloud.documentai.v1.HumanReviewStatus
                         * @instance
                         */
                        HumanReviewStatus.prototype.humanReviewOperation = "";
    
                        /**
                         * Creates a new HumanReviewStatus instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.HumanReviewStatus
                         * @static
                         * @param {google.cloud.documentai.v1.IHumanReviewStatus=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.HumanReviewStatus} HumanReviewStatus instance
                         */
                        HumanReviewStatus.create = function create(properties) {
                            return new HumanReviewStatus(properties);
                        };
    
                        /**
                         * Encodes the specified HumanReviewStatus message. Does not implicitly {@link google.cloud.documentai.v1.HumanReviewStatus.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.HumanReviewStatus
                         * @static
                         * @param {google.cloud.documentai.v1.IHumanReviewStatus} message HumanReviewStatus message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HumanReviewStatus.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.state);
                            if (message.stateMessage != null && Object.hasOwnProperty.call(message, "stateMessage"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.stateMessage);
                            if (message.humanReviewOperation != null && Object.hasOwnProperty.call(message, "humanReviewOperation"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.humanReviewOperation);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified HumanReviewStatus message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.HumanReviewStatus.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.HumanReviewStatus
                         * @static
                         * @param {google.cloud.documentai.v1.IHumanReviewStatus} message HumanReviewStatus message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HumanReviewStatus.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a HumanReviewStatus message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.HumanReviewStatus
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.HumanReviewStatus} HumanReviewStatus
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HumanReviewStatus.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.HumanReviewStatus();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.stateMessage = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.humanReviewOperation = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a HumanReviewStatus message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.HumanReviewStatus
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.HumanReviewStatus} HumanReviewStatus
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HumanReviewStatus.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a HumanReviewStatus message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.HumanReviewStatus
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        HumanReviewStatus.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.stateMessage != null && message.hasOwnProperty("stateMessage"))
                                if (!$util.isString(message.stateMessage))
                                    return "stateMessage: string expected";
                            if (message.humanReviewOperation != null && message.hasOwnProperty("humanReviewOperation"))
                                if (!$util.isString(message.humanReviewOperation))
                                    return "humanReviewOperation: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a HumanReviewStatus message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.HumanReviewStatus
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.HumanReviewStatus} HumanReviewStatus
                         */
                        HumanReviewStatus.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.HumanReviewStatus)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.HumanReviewStatus();
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "SKIPPED":
                            case 1:
                                message.state = 1;
                                break;
                            case "VALIDATION_PASSED":
                            case 2:
                                message.state = 2;
                                break;
                            case "IN_PROGRESS":
                            case 3:
                                message.state = 3;
                                break;
                            case "ERROR":
                            case 4:
                                message.state = 4;
                                break;
                            }
                            if (object.stateMessage != null)
                                message.stateMessage = String(object.stateMessage);
                            if (object.humanReviewOperation != null)
                                message.humanReviewOperation = String(object.humanReviewOperation);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a HumanReviewStatus message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.HumanReviewStatus
                         * @static
                         * @param {google.cloud.documentai.v1.HumanReviewStatus} message HumanReviewStatus
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        HumanReviewStatus.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.stateMessage = "";
                                object.humanReviewOperation = "";
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.documentai.v1.HumanReviewStatus.State[message.state] === undefined ? message.state : $root.google.cloud.documentai.v1.HumanReviewStatus.State[message.state] : message.state;
                            if (message.stateMessage != null && message.hasOwnProperty("stateMessage"))
                                object.stateMessage = message.stateMessage;
                            if (message.humanReviewOperation != null && message.hasOwnProperty("humanReviewOperation"))
                                object.humanReviewOperation = message.humanReviewOperation;
                            return object;
                        };
    
                        /**
                         * Converts this HumanReviewStatus to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.HumanReviewStatus
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        HumanReviewStatus.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for HumanReviewStatus
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.HumanReviewStatus
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        HumanReviewStatus.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.HumanReviewStatus";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.documentai.v1.HumanReviewStatus.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} SKIPPED=1 SKIPPED value
                         * @property {number} VALIDATION_PASSED=2 VALIDATION_PASSED value
                         * @property {number} IN_PROGRESS=3 IN_PROGRESS value
                         * @property {number} ERROR=4 ERROR value
                         */
                        HumanReviewStatus.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "SKIPPED"] = 1;
                            values[valuesById[2] = "VALIDATION_PASSED"] = 2;
                            values[valuesById[3] = "IN_PROGRESS"] = 3;
                            values[valuesById[4] = "ERROR"] = 4;
                            return values;
                        })();
    
                        return HumanReviewStatus;
                    })();
    
                    v1.ProcessResponse = (function() {
    
                        /**
                         * Properties of a ProcessResponse.
                         * @memberof google.cloud.documentai.v1
                         * @interface IProcessResponse
                         * @property {google.cloud.documentai.v1.IDocument|null} [document] ProcessResponse document
                         * @property {google.cloud.documentai.v1.IHumanReviewStatus|null} [humanReviewStatus] ProcessResponse humanReviewStatus
                         */
    
                        /**
                         * Constructs a new ProcessResponse.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a ProcessResponse.
                         * @implements IProcessResponse
                         * @constructor
                         * @param {google.cloud.documentai.v1.IProcessResponse=} [properties] Properties to set
                         */
                        function ProcessResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ProcessResponse document.
                         * @member {google.cloud.documentai.v1.IDocument|null|undefined} document
                         * @memberof google.cloud.documentai.v1.ProcessResponse
                         * @instance
                         */
                        ProcessResponse.prototype.document = null;
    
                        /**
                         * ProcessResponse humanReviewStatus.
                         * @member {google.cloud.documentai.v1.IHumanReviewStatus|null|undefined} humanReviewStatus
                         * @memberof google.cloud.documentai.v1.ProcessResponse
                         * @instance
                         */
                        ProcessResponse.prototype.humanReviewStatus = null;
    
                        /**
                         * Creates a new ProcessResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.ProcessResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IProcessResponse=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.ProcessResponse} ProcessResponse instance
                         */
                        ProcessResponse.create = function create(properties) {
                            return new ProcessResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ProcessResponse message. Does not implicitly {@link google.cloud.documentai.v1.ProcessResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.ProcessResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IProcessResponse} message ProcessResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ProcessResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.document != null && Object.hasOwnProperty.call(message, "document"))
                                $root.google.cloud.documentai.v1.Document.encode(message.document, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.humanReviewStatus != null && Object.hasOwnProperty.call(message, "humanReviewStatus"))
                                $root.google.cloud.documentai.v1.HumanReviewStatus.encode(message.humanReviewStatus, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ProcessResponse message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.ProcessResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.ProcessResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IProcessResponse} message ProcessResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ProcessResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ProcessResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.ProcessResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.ProcessResponse} ProcessResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ProcessResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.ProcessResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.document = $root.google.cloud.documentai.v1.Document.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.humanReviewStatus = $root.google.cloud.documentai.v1.HumanReviewStatus.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ProcessResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.ProcessResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.ProcessResponse} ProcessResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ProcessResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ProcessResponse message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.ProcessResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ProcessResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.document != null && message.hasOwnProperty("document")) {
                                var error = $root.google.cloud.documentai.v1.Document.verify(message.document);
                                if (error)
                                    return "document." + error;
                            }
                            if (message.humanReviewStatus != null && message.hasOwnProperty("humanReviewStatus")) {
                                var error = $root.google.cloud.documentai.v1.HumanReviewStatus.verify(message.humanReviewStatus);
                                if (error)
                                    return "humanReviewStatus." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ProcessResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.ProcessResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.ProcessResponse} ProcessResponse
                         */
                        ProcessResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.ProcessResponse)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.ProcessResponse();
                            if (object.document != null) {
                                if (typeof object.document !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.ProcessResponse.document: object expected");
                                message.document = $root.google.cloud.documentai.v1.Document.fromObject(object.document);
                            }
                            if (object.humanReviewStatus != null) {
                                if (typeof object.humanReviewStatus !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.ProcessResponse.humanReviewStatus: object expected");
                                message.humanReviewStatus = $root.google.cloud.documentai.v1.HumanReviewStatus.fromObject(object.humanReviewStatus);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ProcessResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.ProcessResponse
                         * @static
                         * @param {google.cloud.documentai.v1.ProcessResponse} message ProcessResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ProcessResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.document = null;
                                object.humanReviewStatus = null;
                            }
                            if (message.document != null && message.hasOwnProperty("document"))
                                object.document = $root.google.cloud.documentai.v1.Document.toObject(message.document, options);
                            if (message.humanReviewStatus != null && message.hasOwnProperty("humanReviewStatus"))
                                object.humanReviewStatus = $root.google.cloud.documentai.v1.HumanReviewStatus.toObject(message.humanReviewStatus, options);
                            return object;
                        };
    
                        /**
                         * Converts this ProcessResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.ProcessResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ProcessResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ProcessResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.ProcessResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ProcessResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.ProcessResponse";
                        };
    
                        return ProcessResponse;
                    })();
    
                    v1.BatchProcessRequest = (function() {
    
                        /**
                         * Properties of a BatchProcessRequest.
                         * @memberof google.cloud.documentai.v1
                         * @interface IBatchProcessRequest
                         * @property {string|null} [name] BatchProcessRequest name
                         * @property {google.cloud.documentai.v1.IBatchDocumentsInputConfig|null} [inputDocuments] BatchProcessRequest inputDocuments
                         * @property {google.cloud.documentai.v1.IDocumentOutputConfig|null} [documentOutputConfig] BatchProcessRequest documentOutputConfig
                         * @property {boolean|null} [skipHumanReview] BatchProcessRequest skipHumanReview
                         * @property {google.cloud.documentai.v1.IProcessOptions|null} [processOptions] BatchProcessRequest processOptions
                         * @property {Object.<string,string>|null} [labels] BatchProcessRequest labels
                         */
    
                        /**
                         * Constructs a new BatchProcessRequest.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a BatchProcessRequest.
                         * @implements IBatchProcessRequest
                         * @constructor
                         * @param {google.cloud.documentai.v1.IBatchProcessRequest=} [properties] Properties to set
                         */
                        function BatchProcessRequest(properties) {
                            this.labels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BatchProcessRequest name.
                         * @member {string} name
                         * @memberof google.cloud.documentai.v1.BatchProcessRequest
                         * @instance
                         */
                        BatchProcessRequest.prototype.name = "";
    
                        /**
                         * BatchProcessRequest inputDocuments.
                         * @member {google.cloud.documentai.v1.IBatchDocumentsInputConfig|null|undefined} inputDocuments
                         * @memberof google.cloud.documentai.v1.BatchProcessRequest
                         * @instance
                         */
                        BatchProcessRequest.prototype.inputDocuments = null;
    
                        /**
                         * BatchProcessRequest documentOutputConfig.
                         * @member {google.cloud.documentai.v1.IDocumentOutputConfig|null|undefined} documentOutputConfig
                         * @memberof google.cloud.documentai.v1.BatchProcessRequest
                         * @instance
                         */
                        BatchProcessRequest.prototype.documentOutputConfig = null;
    
                        /**
                         * BatchProcessRequest skipHumanReview.
                         * @member {boolean} skipHumanReview
                         * @memberof google.cloud.documentai.v1.BatchProcessRequest
                         * @instance
                         */
                        BatchProcessRequest.prototype.skipHumanReview = false;
    
                        /**
                         * BatchProcessRequest processOptions.
                         * @member {google.cloud.documentai.v1.IProcessOptions|null|undefined} processOptions
                         * @memberof google.cloud.documentai.v1.BatchProcessRequest
                         * @instance
                         */
                        BatchProcessRequest.prototype.processOptions = null;
    
                        /**
                         * BatchProcessRequest labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.documentai.v1.BatchProcessRequest
                         * @instance
                         */
                        BatchProcessRequest.prototype.labels = $util.emptyObject;
    
                        /**
                         * Creates a new BatchProcessRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.BatchProcessRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IBatchProcessRequest=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.BatchProcessRequest} BatchProcessRequest instance
                         */
                        BatchProcessRequest.create = function create(properties) {
                            return new BatchProcessRequest(properties);
                        };
    
                        /**
                         * Encodes the specified BatchProcessRequest message. Does not implicitly {@link google.cloud.documentai.v1.BatchProcessRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.BatchProcessRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IBatchProcessRequest} message BatchProcessRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchProcessRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.skipHumanReview != null && Object.hasOwnProperty.call(message, "skipHumanReview"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.skipHumanReview);
                            if (message.inputDocuments != null && Object.hasOwnProperty.call(message, "inputDocuments"))
                                $root.google.cloud.documentai.v1.BatchDocumentsInputConfig.encode(message.inputDocuments, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.documentOutputConfig != null && Object.hasOwnProperty.call(message, "documentOutputConfig"))
                                $root.google.cloud.documentai.v1.DocumentOutputConfig.encode(message.documentOutputConfig, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.processOptions != null && Object.hasOwnProperty.call(message, "processOptions"))
                                $root.google.cloud.documentai.v1.ProcessOptions.encode(message.processOptions, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 9, wireType 2 =*/74).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BatchProcessRequest message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.BatchProcessRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.BatchProcessRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IBatchProcessRequest} message BatchProcessRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchProcessRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BatchProcessRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.BatchProcessRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.BatchProcessRequest} BatchProcessRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchProcessRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.BatchProcessRequest(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.inputDocuments = $root.google.cloud.documentai.v1.BatchDocumentsInputConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.documentOutputConfig = $root.google.cloud.documentai.v1.DocumentOutputConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.skipHumanReview = reader.bool();
                                        break;
                                    }
                                case 7: {
                                        message.processOptions = $root.google.cloud.documentai.v1.ProcessOptions.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BatchProcessRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.BatchProcessRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.BatchProcessRequest} BatchProcessRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchProcessRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BatchProcessRequest message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.BatchProcessRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BatchProcessRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.inputDocuments != null && message.hasOwnProperty("inputDocuments")) {
                                var error = $root.google.cloud.documentai.v1.BatchDocumentsInputConfig.verify(message.inputDocuments);
                                if (error)
                                    return "inputDocuments." + error;
                            }
                            if (message.documentOutputConfig != null && message.hasOwnProperty("documentOutputConfig")) {
                                var error = $root.google.cloud.documentai.v1.DocumentOutputConfig.verify(message.documentOutputConfig);
                                if (error)
                                    return "documentOutputConfig." + error;
                            }
                            if (message.skipHumanReview != null && message.hasOwnProperty("skipHumanReview"))
                                if (typeof message.skipHumanReview !== "boolean")
                                    return "skipHumanReview: boolean expected";
                            if (message.processOptions != null && message.hasOwnProperty("processOptions")) {
                                var error = $root.google.cloud.documentai.v1.ProcessOptions.verify(message.processOptions);
                                if (error)
                                    return "processOptions." + error;
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BatchProcessRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.BatchProcessRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.BatchProcessRequest} BatchProcessRequest
                         */
                        BatchProcessRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.BatchProcessRequest)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.BatchProcessRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.inputDocuments != null) {
                                if (typeof object.inputDocuments !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.BatchProcessRequest.inputDocuments: object expected");
                                message.inputDocuments = $root.google.cloud.documentai.v1.BatchDocumentsInputConfig.fromObject(object.inputDocuments);
                            }
                            if (object.documentOutputConfig != null) {
                                if (typeof object.documentOutputConfig !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.BatchProcessRequest.documentOutputConfig: object expected");
                                message.documentOutputConfig = $root.google.cloud.documentai.v1.DocumentOutputConfig.fromObject(object.documentOutputConfig);
                            }
                            if (object.skipHumanReview != null)
                                message.skipHumanReview = Boolean(object.skipHumanReview);
                            if (object.processOptions != null) {
                                if (typeof object.processOptions !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.BatchProcessRequest.processOptions: object expected");
                                message.processOptions = $root.google.cloud.documentai.v1.ProcessOptions.fromObject(object.processOptions);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.BatchProcessRequest.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BatchProcessRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.BatchProcessRequest
                         * @static
                         * @param {google.cloud.documentai.v1.BatchProcessRequest} message BatchProcessRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BatchProcessRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.name = "";
                                object.skipHumanReview = false;
                                object.inputDocuments = null;
                                object.documentOutputConfig = null;
                                object.processOptions = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.skipHumanReview != null && message.hasOwnProperty("skipHumanReview"))
                                object.skipHumanReview = message.skipHumanReview;
                            if (message.inputDocuments != null && message.hasOwnProperty("inputDocuments"))
                                object.inputDocuments = $root.google.cloud.documentai.v1.BatchDocumentsInputConfig.toObject(message.inputDocuments, options);
                            if (message.documentOutputConfig != null && message.hasOwnProperty("documentOutputConfig"))
                                object.documentOutputConfig = $root.google.cloud.documentai.v1.DocumentOutputConfig.toObject(message.documentOutputConfig, options);
                            if (message.processOptions != null && message.hasOwnProperty("processOptions"))
                                object.processOptions = $root.google.cloud.documentai.v1.ProcessOptions.toObject(message.processOptions, options);
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this BatchProcessRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.BatchProcessRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BatchProcessRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BatchProcessRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.BatchProcessRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BatchProcessRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.BatchProcessRequest";
                        };
    
                        return BatchProcessRequest;
                    })();
    
                    v1.BatchProcessResponse = (function() {
    
                        /**
                         * Properties of a BatchProcessResponse.
                         * @memberof google.cloud.documentai.v1
                         * @interface IBatchProcessResponse
                         */
    
                        /**
                         * Constructs a new BatchProcessResponse.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a BatchProcessResponse.
                         * @implements IBatchProcessResponse
                         * @constructor
                         * @param {google.cloud.documentai.v1.IBatchProcessResponse=} [properties] Properties to set
                         */
                        function BatchProcessResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new BatchProcessResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.BatchProcessResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IBatchProcessResponse=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.BatchProcessResponse} BatchProcessResponse instance
                         */
                        BatchProcessResponse.create = function create(properties) {
                            return new BatchProcessResponse(properties);
                        };
    
                        /**
                         * Encodes the specified BatchProcessResponse message. Does not implicitly {@link google.cloud.documentai.v1.BatchProcessResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.BatchProcessResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IBatchProcessResponse} message BatchProcessResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchProcessResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BatchProcessResponse message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.BatchProcessResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.BatchProcessResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IBatchProcessResponse} message BatchProcessResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchProcessResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BatchProcessResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.BatchProcessResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.BatchProcessResponse} BatchProcessResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchProcessResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.BatchProcessResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BatchProcessResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.BatchProcessResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.BatchProcessResponse} BatchProcessResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchProcessResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BatchProcessResponse message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.BatchProcessResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BatchProcessResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a BatchProcessResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.BatchProcessResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.BatchProcessResponse} BatchProcessResponse
                         */
                        BatchProcessResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.BatchProcessResponse)
                                return object;
                            return new $root.google.cloud.documentai.v1.BatchProcessResponse();
                        };
    
                        /**
                         * Creates a plain object from a BatchProcessResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.BatchProcessResponse
                         * @static
                         * @param {google.cloud.documentai.v1.BatchProcessResponse} message BatchProcessResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BatchProcessResponse.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this BatchProcessResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.BatchProcessResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BatchProcessResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BatchProcessResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.BatchProcessResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BatchProcessResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.BatchProcessResponse";
                        };
    
                        return BatchProcessResponse;
                    })();
    
                    v1.BatchProcessMetadata = (function() {
    
                        /**
                         * Properties of a BatchProcessMetadata.
                         * @memberof google.cloud.documentai.v1
                         * @interface IBatchProcessMetadata
                         * @property {google.cloud.documentai.v1.BatchProcessMetadata.State|null} [state] BatchProcessMetadata state
                         * @property {string|null} [stateMessage] BatchProcessMetadata stateMessage
                         * @property {google.protobuf.ITimestamp|null} [createTime] BatchProcessMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] BatchProcessMetadata updateTime
                         * @property {Array.<google.cloud.documentai.v1.BatchProcessMetadata.IIndividualProcessStatus>|null} [individualProcessStatuses] BatchProcessMetadata individualProcessStatuses
                         */
    
                        /**
                         * Constructs a new BatchProcessMetadata.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a BatchProcessMetadata.
                         * @implements IBatchProcessMetadata
                         * @constructor
                         * @param {google.cloud.documentai.v1.IBatchProcessMetadata=} [properties] Properties to set
                         */
                        function BatchProcessMetadata(properties) {
                            this.individualProcessStatuses = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BatchProcessMetadata state.
                         * @member {google.cloud.documentai.v1.BatchProcessMetadata.State} state
                         * @memberof google.cloud.documentai.v1.BatchProcessMetadata
                         * @instance
                         */
                        BatchProcessMetadata.prototype.state = 0;
    
                        /**
                         * BatchProcessMetadata stateMessage.
                         * @member {string} stateMessage
                         * @memberof google.cloud.documentai.v1.BatchProcessMetadata
                         * @instance
                         */
                        BatchProcessMetadata.prototype.stateMessage = "";
    
                        /**
                         * BatchProcessMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.documentai.v1.BatchProcessMetadata
                         * @instance
                         */
                        BatchProcessMetadata.prototype.createTime = null;
    
                        /**
                         * BatchProcessMetadata updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.documentai.v1.BatchProcessMetadata
                         * @instance
                         */
                        BatchProcessMetadata.prototype.updateTime = null;
    
                        /**
                         * BatchProcessMetadata individualProcessStatuses.
                         * @member {Array.<google.cloud.documentai.v1.BatchProcessMetadata.IIndividualProcessStatus>} individualProcessStatuses
                         * @memberof google.cloud.documentai.v1.BatchProcessMetadata
                         * @instance
                         */
                        BatchProcessMetadata.prototype.individualProcessStatuses = $util.emptyArray;
    
                        /**
                         * Creates a new BatchProcessMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.BatchProcessMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.IBatchProcessMetadata=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.BatchProcessMetadata} BatchProcessMetadata instance
                         */
                        BatchProcessMetadata.create = function create(properties) {
                            return new BatchProcessMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified BatchProcessMetadata message. Does not implicitly {@link google.cloud.documentai.v1.BatchProcessMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.BatchProcessMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.IBatchProcessMetadata} message BatchProcessMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchProcessMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.state);
                            if (message.stateMessage != null && Object.hasOwnProperty.call(message, "stateMessage"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.stateMessage);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.individualProcessStatuses != null && message.individualProcessStatuses.length)
                                for (var i = 0; i < message.individualProcessStatuses.length; ++i)
                                    $root.google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus.encode(message.individualProcessStatuses[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BatchProcessMetadata message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.BatchProcessMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.BatchProcessMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.IBatchProcessMetadata} message BatchProcessMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchProcessMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BatchProcessMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.BatchProcessMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.BatchProcessMetadata} BatchProcessMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchProcessMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.BatchProcessMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.stateMessage = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        if (!(message.individualProcessStatuses && message.individualProcessStatuses.length))
                                            message.individualProcessStatuses = [];
                                        message.individualProcessStatuses.push($root.google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BatchProcessMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.BatchProcessMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.BatchProcessMetadata} BatchProcessMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchProcessMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BatchProcessMetadata message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.BatchProcessMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BatchProcessMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                    break;
                                }
                            if (message.stateMessage != null && message.hasOwnProperty("stateMessage"))
                                if (!$util.isString(message.stateMessage))
                                    return "stateMessage: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.individualProcessStatuses != null && message.hasOwnProperty("individualProcessStatuses")) {
                                if (!Array.isArray(message.individualProcessStatuses))
                                    return "individualProcessStatuses: array expected";
                                for (var i = 0; i < message.individualProcessStatuses.length; ++i) {
                                    var error = $root.google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus.verify(message.individualProcessStatuses[i]);
                                    if (error)
                                        return "individualProcessStatuses." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BatchProcessMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.BatchProcessMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.BatchProcessMetadata} BatchProcessMetadata
                         */
                        BatchProcessMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.BatchProcessMetadata)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.BatchProcessMetadata();
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "WAITING":
                            case 1:
                                message.state = 1;
                                break;
                            case "RUNNING":
                            case 2:
                                message.state = 2;
                                break;
                            case "SUCCEEDED":
                            case 3:
                                message.state = 3;
                                break;
                            case "CANCELLING":
                            case 4:
                                message.state = 4;
                                break;
                            case "CANCELLED":
                            case 5:
                                message.state = 5;
                                break;
                            case "FAILED":
                            case 6:
                                message.state = 6;
                                break;
                            }
                            if (object.stateMessage != null)
                                message.stateMessage = String(object.stateMessage);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.BatchProcessMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.BatchProcessMetadata.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.individualProcessStatuses) {
                                if (!Array.isArray(object.individualProcessStatuses))
                                    throw TypeError(".google.cloud.documentai.v1.BatchProcessMetadata.individualProcessStatuses: array expected");
                                message.individualProcessStatuses = [];
                                for (var i = 0; i < object.individualProcessStatuses.length; ++i) {
                                    if (typeof object.individualProcessStatuses[i] !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.BatchProcessMetadata.individualProcessStatuses: object expected");
                                    message.individualProcessStatuses[i] = $root.google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus.fromObject(object.individualProcessStatuses[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BatchProcessMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.BatchProcessMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.BatchProcessMetadata} message BatchProcessMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BatchProcessMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.individualProcessStatuses = [];
                            if (options.defaults) {
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.stateMessage = "";
                                object.createTime = null;
                                object.updateTime = null;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.documentai.v1.BatchProcessMetadata.State[message.state] === undefined ? message.state : $root.google.cloud.documentai.v1.BatchProcessMetadata.State[message.state] : message.state;
                            if (message.stateMessage != null && message.hasOwnProperty("stateMessage"))
                                object.stateMessage = message.stateMessage;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.individualProcessStatuses && message.individualProcessStatuses.length) {
                                object.individualProcessStatuses = [];
                                for (var j = 0; j < message.individualProcessStatuses.length; ++j)
                                    object.individualProcessStatuses[j] = $root.google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus.toObject(message.individualProcessStatuses[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this BatchProcessMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.BatchProcessMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BatchProcessMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BatchProcessMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.BatchProcessMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BatchProcessMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.BatchProcessMetadata";
                        };
    
                        BatchProcessMetadata.IndividualProcessStatus = (function() {
    
                            /**
                             * Properties of an IndividualProcessStatus.
                             * @memberof google.cloud.documentai.v1.BatchProcessMetadata
                             * @interface IIndividualProcessStatus
                             * @property {string|null} [inputGcsSource] IndividualProcessStatus inputGcsSource
                             * @property {google.rpc.IStatus|null} [status] IndividualProcessStatus status
                             * @property {string|null} [outputGcsDestination] IndividualProcessStatus outputGcsDestination
                             * @property {google.cloud.documentai.v1.IHumanReviewStatus|null} [humanReviewStatus] IndividualProcessStatus humanReviewStatus
                             */
    
                            /**
                             * Constructs a new IndividualProcessStatus.
                             * @memberof google.cloud.documentai.v1.BatchProcessMetadata
                             * @classdesc Represents an IndividualProcessStatus.
                             * @implements IIndividualProcessStatus
                             * @constructor
                             * @param {google.cloud.documentai.v1.BatchProcessMetadata.IIndividualProcessStatus=} [properties] Properties to set
                             */
                            function IndividualProcessStatus(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * IndividualProcessStatus inputGcsSource.
                             * @member {string} inputGcsSource
                             * @memberof google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus
                             * @instance
                             */
                            IndividualProcessStatus.prototype.inputGcsSource = "";
    
                            /**
                             * IndividualProcessStatus status.
                             * @member {google.rpc.IStatus|null|undefined} status
                             * @memberof google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus
                             * @instance
                             */
                            IndividualProcessStatus.prototype.status = null;
    
                            /**
                             * IndividualProcessStatus outputGcsDestination.
                             * @member {string} outputGcsDestination
                             * @memberof google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus
                             * @instance
                             */
                            IndividualProcessStatus.prototype.outputGcsDestination = "";
    
                            /**
                             * IndividualProcessStatus humanReviewStatus.
                             * @member {google.cloud.documentai.v1.IHumanReviewStatus|null|undefined} humanReviewStatus
                             * @memberof google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus
                             * @instance
                             */
                            IndividualProcessStatus.prototype.humanReviewStatus = null;
    
                            /**
                             * Creates a new IndividualProcessStatus instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus
                             * @static
                             * @param {google.cloud.documentai.v1.BatchProcessMetadata.IIndividualProcessStatus=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus} IndividualProcessStatus instance
                             */
                            IndividualProcessStatus.create = function create(properties) {
                                return new IndividualProcessStatus(properties);
                            };
    
                            /**
                             * Encodes the specified IndividualProcessStatus message. Does not implicitly {@link google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus
                             * @static
                             * @param {google.cloud.documentai.v1.BatchProcessMetadata.IIndividualProcessStatus} message IndividualProcessStatus message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            IndividualProcessStatus.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.inputGcsSource != null && Object.hasOwnProperty.call(message, "inputGcsSource"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.inputGcsSource);
                                if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                                    $root.google.rpc.Status.encode(message.status, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.outputGcsDestination != null && Object.hasOwnProperty.call(message, "outputGcsDestination"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputGcsDestination);
                                if (message.humanReviewStatus != null && Object.hasOwnProperty.call(message, "humanReviewStatus"))
                                    $root.google.cloud.documentai.v1.HumanReviewStatus.encode(message.humanReviewStatus, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified IndividualProcessStatus message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus
                             * @static
                             * @param {google.cloud.documentai.v1.BatchProcessMetadata.IIndividualProcessStatus} message IndividualProcessStatus message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            IndividualProcessStatus.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an IndividualProcessStatus message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus} IndividualProcessStatus
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            IndividualProcessStatus.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.inputGcsSource = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.status = $root.google.rpc.Status.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.outputGcsDestination = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.humanReviewStatus = $root.google.cloud.documentai.v1.HumanReviewStatus.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an IndividualProcessStatus message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus} IndividualProcessStatus
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            IndividualProcessStatus.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an IndividualProcessStatus message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            IndividualProcessStatus.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.inputGcsSource != null && message.hasOwnProperty("inputGcsSource"))
                                    if (!$util.isString(message.inputGcsSource))
                                        return "inputGcsSource: string expected";
                                if (message.status != null && message.hasOwnProperty("status")) {
                                    var error = $root.google.rpc.Status.verify(message.status);
                                    if (error)
                                        return "status." + error;
                                }
                                if (message.outputGcsDestination != null && message.hasOwnProperty("outputGcsDestination"))
                                    if (!$util.isString(message.outputGcsDestination))
                                        return "outputGcsDestination: string expected";
                                if (message.humanReviewStatus != null && message.hasOwnProperty("humanReviewStatus")) {
                                    var error = $root.google.cloud.documentai.v1.HumanReviewStatus.verify(message.humanReviewStatus);
                                    if (error)
                                        return "humanReviewStatus." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates an IndividualProcessStatus message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus} IndividualProcessStatus
                             */
                            IndividualProcessStatus.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus();
                                if (object.inputGcsSource != null)
                                    message.inputGcsSource = String(object.inputGcsSource);
                                if (object.status != null) {
                                    if (typeof object.status !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus.status: object expected");
                                    message.status = $root.google.rpc.Status.fromObject(object.status);
                                }
                                if (object.outputGcsDestination != null)
                                    message.outputGcsDestination = String(object.outputGcsDestination);
                                if (object.humanReviewStatus != null) {
                                    if (typeof object.humanReviewStatus !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus.humanReviewStatus: object expected");
                                    message.humanReviewStatus = $root.google.cloud.documentai.v1.HumanReviewStatus.fromObject(object.humanReviewStatus);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an IndividualProcessStatus message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus
                             * @static
                             * @param {google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus} message IndividualProcessStatus
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            IndividualProcessStatus.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.inputGcsSource = "";
                                    object.status = null;
                                    object.outputGcsDestination = "";
                                    object.humanReviewStatus = null;
                                }
                                if (message.inputGcsSource != null && message.hasOwnProperty("inputGcsSource"))
                                    object.inputGcsSource = message.inputGcsSource;
                                if (message.status != null && message.hasOwnProperty("status"))
                                    object.status = $root.google.rpc.Status.toObject(message.status, options);
                                if (message.outputGcsDestination != null && message.hasOwnProperty("outputGcsDestination"))
                                    object.outputGcsDestination = message.outputGcsDestination;
                                if (message.humanReviewStatus != null && message.hasOwnProperty("humanReviewStatus"))
                                    object.humanReviewStatus = $root.google.cloud.documentai.v1.HumanReviewStatus.toObject(message.humanReviewStatus, options);
                                return object;
                            };
    
                            /**
                             * Converts this IndividualProcessStatus to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            IndividualProcessStatus.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for IndividualProcessStatus
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            IndividualProcessStatus.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.BatchProcessMetadata.IndividualProcessStatus";
                            };
    
                            return IndividualProcessStatus;
                        })();
    
                        /**
                         * State enum.
                         * @name google.cloud.documentai.v1.BatchProcessMetadata.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} WAITING=1 WAITING value
                         * @property {number} RUNNING=2 RUNNING value
                         * @property {number} SUCCEEDED=3 SUCCEEDED value
                         * @property {number} CANCELLING=4 CANCELLING value
                         * @property {number} CANCELLED=5 CANCELLED value
                         * @property {number} FAILED=6 FAILED value
                         */
                        BatchProcessMetadata.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "WAITING"] = 1;
                            values[valuesById[2] = "RUNNING"] = 2;
                            values[valuesById[3] = "SUCCEEDED"] = 3;
                            values[valuesById[4] = "CANCELLING"] = 4;
                            values[valuesById[5] = "CANCELLED"] = 5;
                            values[valuesById[6] = "FAILED"] = 6;
                            return values;
                        })();
    
                        return BatchProcessMetadata;
                    })();
    
                    v1.FetchProcessorTypesRequest = (function() {
    
                        /**
                         * Properties of a FetchProcessorTypesRequest.
                         * @memberof google.cloud.documentai.v1
                         * @interface IFetchProcessorTypesRequest
                         * @property {string|null} [parent] FetchProcessorTypesRequest parent
                         */
    
                        /**
                         * Constructs a new FetchProcessorTypesRequest.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a FetchProcessorTypesRequest.
                         * @implements IFetchProcessorTypesRequest
                         * @constructor
                         * @param {google.cloud.documentai.v1.IFetchProcessorTypesRequest=} [properties] Properties to set
                         */
                        function FetchProcessorTypesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FetchProcessorTypesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.documentai.v1.FetchProcessorTypesRequest
                         * @instance
                         */
                        FetchProcessorTypesRequest.prototype.parent = "";
    
                        /**
                         * Creates a new FetchProcessorTypesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.FetchProcessorTypesRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IFetchProcessorTypesRequest=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.FetchProcessorTypesRequest} FetchProcessorTypesRequest instance
                         */
                        FetchProcessorTypesRequest.create = function create(properties) {
                            return new FetchProcessorTypesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified FetchProcessorTypesRequest message. Does not implicitly {@link google.cloud.documentai.v1.FetchProcessorTypesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.FetchProcessorTypesRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IFetchProcessorTypesRequest} message FetchProcessorTypesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FetchProcessorTypesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FetchProcessorTypesRequest message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.FetchProcessorTypesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.FetchProcessorTypesRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IFetchProcessorTypesRequest} message FetchProcessorTypesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FetchProcessorTypesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FetchProcessorTypesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.FetchProcessorTypesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.FetchProcessorTypesRequest} FetchProcessorTypesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FetchProcessorTypesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.FetchProcessorTypesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FetchProcessorTypesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.FetchProcessorTypesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.FetchProcessorTypesRequest} FetchProcessorTypesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FetchProcessorTypesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FetchProcessorTypesRequest message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.FetchProcessorTypesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FetchProcessorTypesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a FetchProcessorTypesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.FetchProcessorTypesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.FetchProcessorTypesRequest} FetchProcessorTypesRequest
                         */
                        FetchProcessorTypesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.FetchProcessorTypesRequest)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.FetchProcessorTypesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FetchProcessorTypesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.FetchProcessorTypesRequest
                         * @static
                         * @param {google.cloud.documentai.v1.FetchProcessorTypesRequest} message FetchProcessorTypesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FetchProcessorTypesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.parent = "";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            return object;
                        };
    
                        /**
                         * Converts this FetchProcessorTypesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.FetchProcessorTypesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FetchProcessorTypesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FetchProcessorTypesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.FetchProcessorTypesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FetchProcessorTypesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.FetchProcessorTypesRequest";
                        };
    
                        return FetchProcessorTypesRequest;
                    })();
    
                    v1.FetchProcessorTypesResponse = (function() {
    
                        /**
                         * Properties of a FetchProcessorTypesResponse.
                         * @memberof google.cloud.documentai.v1
                         * @interface IFetchProcessorTypesResponse
                         * @property {Array.<google.cloud.documentai.v1.IProcessorType>|null} [processorTypes] FetchProcessorTypesResponse processorTypes
                         */
    
                        /**
                         * Constructs a new FetchProcessorTypesResponse.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a FetchProcessorTypesResponse.
                         * @implements IFetchProcessorTypesResponse
                         * @constructor
                         * @param {google.cloud.documentai.v1.IFetchProcessorTypesResponse=} [properties] Properties to set
                         */
                        function FetchProcessorTypesResponse(properties) {
                            this.processorTypes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FetchProcessorTypesResponse processorTypes.
                         * @member {Array.<google.cloud.documentai.v1.IProcessorType>} processorTypes
                         * @memberof google.cloud.documentai.v1.FetchProcessorTypesResponse
                         * @instance
                         */
                        FetchProcessorTypesResponse.prototype.processorTypes = $util.emptyArray;
    
                        /**
                         * Creates a new FetchProcessorTypesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.FetchProcessorTypesResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IFetchProcessorTypesResponse=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.FetchProcessorTypesResponse} FetchProcessorTypesResponse instance
                         */
                        FetchProcessorTypesResponse.create = function create(properties) {
                            return new FetchProcessorTypesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified FetchProcessorTypesResponse message. Does not implicitly {@link google.cloud.documentai.v1.FetchProcessorTypesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.FetchProcessorTypesResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IFetchProcessorTypesResponse} message FetchProcessorTypesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FetchProcessorTypesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.processorTypes != null && message.processorTypes.length)
                                for (var i = 0; i < message.processorTypes.length; ++i)
                                    $root.google.cloud.documentai.v1.ProcessorType.encode(message.processorTypes[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FetchProcessorTypesResponse message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.FetchProcessorTypesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.FetchProcessorTypesResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IFetchProcessorTypesResponse} message FetchProcessorTypesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FetchProcessorTypesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FetchProcessorTypesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.FetchProcessorTypesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.FetchProcessorTypesResponse} FetchProcessorTypesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FetchProcessorTypesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.FetchProcessorTypesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.processorTypes && message.processorTypes.length))
                                            message.processorTypes = [];
                                        message.processorTypes.push($root.google.cloud.documentai.v1.ProcessorType.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FetchProcessorTypesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.FetchProcessorTypesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.FetchProcessorTypesResponse} FetchProcessorTypesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FetchProcessorTypesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FetchProcessorTypesResponse message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.FetchProcessorTypesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FetchProcessorTypesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.processorTypes != null && message.hasOwnProperty("processorTypes")) {
                                if (!Array.isArray(message.processorTypes))
                                    return "processorTypes: array expected";
                                for (var i = 0; i < message.processorTypes.length; ++i) {
                                    var error = $root.google.cloud.documentai.v1.ProcessorType.verify(message.processorTypes[i]);
                                    if (error)
                                        return "processorTypes." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FetchProcessorTypesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.FetchProcessorTypesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.FetchProcessorTypesResponse} FetchProcessorTypesResponse
                         */
                        FetchProcessorTypesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.FetchProcessorTypesResponse)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.FetchProcessorTypesResponse();
                            if (object.processorTypes) {
                                if (!Array.isArray(object.processorTypes))
                                    throw TypeError(".google.cloud.documentai.v1.FetchProcessorTypesResponse.processorTypes: array expected");
                                message.processorTypes = [];
                                for (var i = 0; i < object.processorTypes.length; ++i) {
                                    if (typeof object.processorTypes[i] !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.FetchProcessorTypesResponse.processorTypes: object expected");
                                    message.processorTypes[i] = $root.google.cloud.documentai.v1.ProcessorType.fromObject(object.processorTypes[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FetchProcessorTypesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.FetchProcessorTypesResponse
                         * @static
                         * @param {google.cloud.documentai.v1.FetchProcessorTypesResponse} message FetchProcessorTypesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FetchProcessorTypesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.processorTypes = [];
                            if (message.processorTypes && message.processorTypes.length) {
                                object.processorTypes = [];
                                for (var j = 0; j < message.processorTypes.length; ++j)
                                    object.processorTypes[j] = $root.google.cloud.documentai.v1.ProcessorType.toObject(message.processorTypes[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this FetchProcessorTypesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.FetchProcessorTypesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FetchProcessorTypesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FetchProcessorTypesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.FetchProcessorTypesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FetchProcessorTypesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.FetchProcessorTypesResponse";
                        };
    
                        return FetchProcessorTypesResponse;
                    })();
    
                    v1.ListProcessorTypesRequest = (function() {
    
                        /**
                         * Properties of a ListProcessorTypesRequest.
                         * @memberof google.cloud.documentai.v1
                         * @interface IListProcessorTypesRequest
                         * @property {string|null} [parent] ListProcessorTypesRequest parent
                         * @property {number|null} [pageSize] ListProcessorTypesRequest pageSize
                         * @property {string|null} [pageToken] ListProcessorTypesRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListProcessorTypesRequest.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a ListProcessorTypesRequest.
                         * @implements IListProcessorTypesRequest
                         * @constructor
                         * @param {google.cloud.documentai.v1.IListProcessorTypesRequest=} [properties] Properties to set
                         */
                        function ListProcessorTypesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListProcessorTypesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.documentai.v1.ListProcessorTypesRequest
                         * @instance
                         */
                        ListProcessorTypesRequest.prototype.parent = "";
    
                        /**
                         * ListProcessorTypesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.documentai.v1.ListProcessorTypesRequest
                         * @instance
                         */
                        ListProcessorTypesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListProcessorTypesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.documentai.v1.ListProcessorTypesRequest
                         * @instance
                         */
                        ListProcessorTypesRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListProcessorTypesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.ListProcessorTypesRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IListProcessorTypesRequest=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.ListProcessorTypesRequest} ListProcessorTypesRequest instance
                         */
                        ListProcessorTypesRequest.create = function create(properties) {
                            return new ListProcessorTypesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListProcessorTypesRequest message. Does not implicitly {@link google.cloud.documentai.v1.ListProcessorTypesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.ListProcessorTypesRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IListProcessorTypesRequest} message ListProcessorTypesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListProcessorTypesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListProcessorTypesRequest message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.ListProcessorTypesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.ListProcessorTypesRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IListProcessorTypesRequest} message ListProcessorTypesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListProcessorTypesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListProcessorTypesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.ListProcessorTypesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.ListProcessorTypesRequest} ListProcessorTypesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListProcessorTypesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.ListProcessorTypesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListProcessorTypesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.ListProcessorTypesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.ListProcessorTypesRequest} ListProcessorTypesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListProcessorTypesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListProcessorTypesRequest message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.ListProcessorTypesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListProcessorTypesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListProcessorTypesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.ListProcessorTypesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.ListProcessorTypesRequest} ListProcessorTypesRequest
                         */
                        ListProcessorTypesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.ListProcessorTypesRequest)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.ListProcessorTypesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListProcessorTypesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.ListProcessorTypesRequest
                         * @static
                         * @param {google.cloud.documentai.v1.ListProcessorTypesRequest} message ListProcessorTypesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListProcessorTypesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListProcessorTypesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.ListProcessorTypesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListProcessorTypesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListProcessorTypesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.ListProcessorTypesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListProcessorTypesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.ListProcessorTypesRequest";
                        };
    
                        return ListProcessorTypesRequest;
                    })();
    
                    v1.ListProcessorTypesResponse = (function() {
    
                        /**
                         * Properties of a ListProcessorTypesResponse.
                         * @memberof google.cloud.documentai.v1
                         * @interface IListProcessorTypesResponse
                         * @property {Array.<google.cloud.documentai.v1.IProcessorType>|null} [processorTypes] ListProcessorTypesResponse processorTypes
                         * @property {string|null} [nextPageToken] ListProcessorTypesResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListProcessorTypesResponse.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a ListProcessorTypesResponse.
                         * @implements IListProcessorTypesResponse
                         * @constructor
                         * @param {google.cloud.documentai.v1.IListProcessorTypesResponse=} [properties] Properties to set
                         */
                        function ListProcessorTypesResponse(properties) {
                            this.processorTypes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListProcessorTypesResponse processorTypes.
                         * @member {Array.<google.cloud.documentai.v1.IProcessorType>} processorTypes
                         * @memberof google.cloud.documentai.v1.ListProcessorTypesResponse
                         * @instance
                         */
                        ListProcessorTypesResponse.prototype.processorTypes = $util.emptyArray;
    
                        /**
                         * ListProcessorTypesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.documentai.v1.ListProcessorTypesResponse
                         * @instance
                         */
                        ListProcessorTypesResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListProcessorTypesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.ListProcessorTypesResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IListProcessorTypesResponse=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.ListProcessorTypesResponse} ListProcessorTypesResponse instance
                         */
                        ListProcessorTypesResponse.create = function create(properties) {
                            return new ListProcessorTypesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListProcessorTypesResponse message. Does not implicitly {@link google.cloud.documentai.v1.ListProcessorTypesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.ListProcessorTypesResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IListProcessorTypesResponse} message ListProcessorTypesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListProcessorTypesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.processorTypes != null && message.processorTypes.length)
                                for (var i = 0; i < message.processorTypes.length; ++i)
                                    $root.google.cloud.documentai.v1.ProcessorType.encode(message.processorTypes[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListProcessorTypesResponse message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.ListProcessorTypesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.ListProcessorTypesResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IListProcessorTypesResponse} message ListProcessorTypesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListProcessorTypesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListProcessorTypesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.ListProcessorTypesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.ListProcessorTypesResponse} ListProcessorTypesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListProcessorTypesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.ListProcessorTypesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.processorTypes && message.processorTypes.length))
                                            message.processorTypes = [];
                                        message.processorTypes.push($root.google.cloud.documentai.v1.ProcessorType.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListProcessorTypesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.ListProcessorTypesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.ListProcessorTypesResponse} ListProcessorTypesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListProcessorTypesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListProcessorTypesResponse message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.ListProcessorTypesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListProcessorTypesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.processorTypes != null && message.hasOwnProperty("processorTypes")) {
                                if (!Array.isArray(message.processorTypes))
                                    return "processorTypes: array expected";
                                for (var i = 0; i < message.processorTypes.length; ++i) {
                                    var error = $root.google.cloud.documentai.v1.ProcessorType.verify(message.processorTypes[i]);
                                    if (error)
                                        return "processorTypes." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListProcessorTypesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.ListProcessorTypesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.ListProcessorTypesResponse} ListProcessorTypesResponse
                         */
                        ListProcessorTypesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.ListProcessorTypesResponse)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.ListProcessorTypesResponse();
                            if (object.processorTypes) {
                                if (!Array.isArray(object.processorTypes))
                                    throw TypeError(".google.cloud.documentai.v1.ListProcessorTypesResponse.processorTypes: array expected");
                                message.processorTypes = [];
                                for (var i = 0; i < object.processorTypes.length; ++i) {
                                    if (typeof object.processorTypes[i] !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.ListProcessorTypesResponse.processorTypes: object expected");
                                    message.processorTypes[i] = $root.google.cloud.documentai.v1.ProcessorType.fromObject(object.processorTypes[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListProcessorTypesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.ListProcessorTypesResponse
                         * @static
                         * @param {google.cloud.documentai.v1.ListProcessorTypesResponse} message ListProcessorTypesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListProcessorTypesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.processorTypes = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.processorTypes && message.processorTypes.length) {
                                object.processorTypes = [];
                                for (var j = 0; j < message.processorTypes.length; ++j)
                                    object.processorTypes[j] = $root.google.cloud.documentai.v1.ProcessorType.toObject(message.processorTypes[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListProcessorTypesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.ListProcessorTypesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListProcessorTypesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListProcessorTypesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.ListProcessorTypesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListProcessorTypesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.ListProcessorTypesResponse";
                        };
    
                        return ListProcessorTypesResponse;
                    })();
    
                    v1.ListProcessorsRequest = (function() {
    
                        /**
                         * Properties of a ListProcessorsRequest.
                         * @memberof google.cloud.documentai.v1
                         * @interface IListProcessorsRequest
                         * @property {string|null} [parent] ListProcessorsRequest parent
                         * @property {number|null} [pageSize] ListProcessorsRequest pageSize
                         * @property {string|null} [pageToken] ListProcessorsRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListProcessorsRequest.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a ListProcessorsRequest.
                         * @implements IListProcessorsRequest
                         * @constructor
                         * @param {google.cloud.documentai.v1.IListProcessorsRequest=} [properties] Properties to set
                         */
                        function ListProcessorsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListProcessorsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.documentai.v1.ListProcessorsRequest
                         * @instance
                         */
                        ListProcessorsRequest.prototype.parent = "";
    
                        /**
                         * ListProcessorsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.documentai.v1.ListProcessorsRequest
                         * @instance
                         */
                        ListProcessorsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListProcessorsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.documentai.v1.ListProcessorsRequest
                         * @instance
                         */
                        ListProcessorsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListProcessorsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.ListProcessorsRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IListProcessorsRequest=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.ListProcessorsRequest} ListProcessorsRequest instance
                         */
                        ListProcessorsRequest.create = function create(properties) {
                            return new ListProcessorsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListProcessorsRequest message. Does not implicitly {@link google.cloud.documentai.v1.ListProcessorsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.ListProcessorsRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IListProcessorsRequest} message ListProcessorsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListProcessorsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListProcessorsRequest message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.ListProcessorsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.ListProcessorsRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IListProcessorsRequest} message ListProcessorsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListProcessorsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListProcessorsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.ListProcessorsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.ListProcessorsRequest} ListProcessorsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListProcessorsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.ListProcessorsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListProcessorsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.ListProcessorsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.ListProcessorsRequest} ListProcessorsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListProcessorsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListProcessorsRequest message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.ListProcessorsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListProcessorsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListProcessorsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.ListProcessorsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.ListProcessorsRequest} ListProcessorsRequest
                         */
                        ListProcessorsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.ListProcessorsRequest)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.ListProcessorsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListProcessorsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.ListProcessorsRequest
                         * @static
                         * @param {google.cloud.documentai.v1.ListProcessorsRequest} message ListProcessorsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListProcessorsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListProcessorsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.ListProcessorsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListProcessorsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListProcessorsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.ListProcessorsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListProcessorsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.ListProcessorsRequest";
                        };
    
                        return ListProcessorsRequest;
                    })();
    
                    v1.ListProcessorsResponse = (function() {
    
                        /**
                         * Properties of a ListProcessorsResponse.
                         * @memberof google.cloud.documentai.v1
                         * @interface IListProcessorsResponse
                         * @property {Array.<google.cloud.documentai.v1.IProcessor>|null} [processors] ListProcessorsResponse processors
                         * @property {string|null} [nextPageToken] ListProcessorsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListProcessorsResponse.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a ListProcessorsResponse.
                         * @implements IListProcessorsResponse
                         * @constructor
                         * @param {google.cloud.documentai.v1.IListProcessorsResponse=} [properties] Properties to set
                         */
                        function ListProcessorsResponse(properties) {
                            this.processors = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListProcessorsResponse processors.
                         * @member {Array.<google.cloud.documentai.v1.IProcessor>} processors
                         * @memberof google.cloud.documentai.v1.ListProcessorsResponse
                         * @instance
                         */
                        ListProcessorsResponse.prototype.processors = $util.emptyArray;
    
                        /**
                         * ListProcessorsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.documentai.v1.ListProcessorsResponse
                         * @instance
                         */
                        ListProcessorsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListProcessorsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.ListProcessorsResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IListProcessorsResponse=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.ListProcessorsResponse} ListProcessorsResponse instance
                         */
                        ListProcessorsResponse.create = function create(properties) {
                            return new ListProcessorsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListProcessorsResponse message. Does not implicitly {@link google.cloud.documentai.v1.ListProcessorsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.ListProcessorsResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IListProcessorsResponse} message ListProcessorsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListProcessorsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.processors != null && message.processors.length)
                                for (var i = 0; i < message.processors.length; ++i)
                                    $root.google.cloud.documentai.v1.Processor.encode(message.processors[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListProcessorsResponse message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.ListProcessorsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.ListProcessorsResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IListProcessorsResponse} message ListProcessorsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListProcessorsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListProcessorsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.ListProcessorsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.ListProcessorsResponse} ListProcessorsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListProcessorsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.ListProcessorsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.processors && message.processors.length))
                                            message.processors = [];
                                        message.processors.push($root.google.cloud.documentai.v1.Processor.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListProcessorsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.ListProcessorsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.ListProcessorsResponse} ListProcessorsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListProcessorsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListProcessorsResponse message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.ListProcessorsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListProcessorsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.processors != null && message.hasOwnProperty("processors")) {
                                if (!Array.isArray(message.processors))
                                    return "processors: array expected";
                                for (var i = 0; i < message.processors.length; ++i) {
                                    var error = $root.google.cloud.documentai.v1.Processor.verify(message.processors[i]);
                                    if (error)
                                        return "processors." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListProcessorsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.ListProcessorsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.ListProcessorsResponse} ListProcessorsResponse
                         */
                        ListProcessorsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.ListProcessorsResponse)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.ListProcessorsResponse();
                            if (object.processors) {
                                if (!Array.isArray(object.processors))
                                    throw TypeError(".google.cloud.documentai.v1.ListProcessorsResponse.processors: array expected");
                                message.processors = [];
                                for (var i = 0; i < object.processors.length; ++i) {
                                    if (typeof object.processors[i] !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.ListProcessorsResponse.processors: object expected");
                                    message.processors[i] = $root.google.cloud.documentai.v1.Processor.fromObject(object.processors[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListProcessorsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.ListProcessorsResponse
                         * @static
                         * @param {google.cloud.documentai.v1.ListProcessorsResponse} message ListProcessorsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListProcessorsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.processors = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.processors && message.processors.length) {
                                object.processors = [];
                                for (var j = 0; j < message.processors.length; ++j)
                                    object.processors[j] = $root.google.cloud.documentai.v1.Processor.toObject(message.processors[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListProcessorsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.ListProcessorsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListProcessorsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListProcessorsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.ListProcessorsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListProcessorsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.ListProcessorsResponse";
                        };
    
                        return ListProcessorsResponse;
                    })();
    
                    v1.GetProcessorTypeRequest = (function() {
    
                        /**
                         * Properties of a GetProcessorTypeRequest.
                         * @memberof google.cloud.documentai.v1
                         * @interface IGetProcessorTypeRequest
                         * @property {string|null} [name] GetProcessorTypeRequest name
                         */
    
                        /**
                         * Constructs a new GetProcessorTypeRequest.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a GetProcessorTypeRequest.
                         * @implements IGetProcessorTypeRequest
                         * @constructor
                         * @param {google.cloud.documentai.v1.IGetProcessorTypeRequest=} [properties] Properties to set
                         */
                        function GetProcessorTypeRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetProcessorTypeRequest name.
                         * @member {string} name
                         * @memberof google.cloud.documentai.v1.GetProcessorTypeRequest
                         * @instance
                         */
                        GetProcessorTypeRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetProcessorTypeRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.GetProcessorTypeRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IGetProcessorTypeRequest=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.GetProcessorTypeRequest} GetProcessorTypeRequest instance
                         */
                        GetProcessorTypeRequest.create = function create(properties) {
                            return new GetProcessorTypeRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetProcessorTypeRequest message. Does not implicitly {@link google.cloud.documentai.v1.GetProcessorTypeRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.GetProcessorTypeRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IGetProcessorTypeRequest} message GetProcessorTypeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetProcessorTypeRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetProcessorTypeRequest message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.GetProcessorTypeRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.GetProcessorTypeRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IGetProcessorTypeRequest} message GetProcessorTypeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetProcessorTypeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetProcessorTypeRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.GetProcessorTypeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.GetProcessorTypeRequest} GetProcessorTypeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetProcessorTypeRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.GetProcessorTypeRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetProcessorTypeRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.GetProcessorTypeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.GetProcessorTypeRequest} GetProcessorTypeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetProcessorTypeRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetProcessorTypeRequest message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.GetProcessorTypeRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetProcessorTypeRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetProcessorTypeRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.GetProcessorTypeRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.GetProcessorTypeRequest} GetProcessorTypeRequest
                         */
                        GetProcessorTypeRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.GetProcessorTypeRequest)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.GetProcessorTypeRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetProcessorTypeRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.GetProcessorTypeRequest
                         * @static
                         * @param {google.cloud.documentai.v1.GetProcessorTypeRequest} message GetProcessorTypeRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetProcessorTypeRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetProcessorTypeRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.GetProcessorTypeRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetProcessorTypeRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetProcessorTypeRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.GetProcessorTypeRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetProcessorTypeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.GetProcessorTypeRequest";
                        };
    
                        return GetProcessorTypeRequest;
                    })();
    
                    v1.GetProcessorRequest = (function() {
    
                        /**
                         * Properties of a GetProcessorRequest.
                         * @memberof google.cloud.documentai.v1
                         * @interface IGetProcessorRequest
                         * @property {string|null} [name] GetProcessorRequest name
                         */
    
                        /**
                         * Constructs a new GetProcessorRequest.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a GetProcessorRequest.
                         * @implements IGetProcessorRequest
                         * @constructor
                         * @param {google.cloud.documentai.v1.IGetProcessorRequest=} [properties] Properties to set
                         */
                        function GetProcessorRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetProcessorRequest name.
                         * @member {string} name
                         * @memberof google.cloud.documentai.v1.GetProcessorRequest
                         * @instance
                         */
                        GetProcessorRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetProcessorRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.GetProcessorRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IGetProcessorRequest=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.GetProcessorRequest} GetProcessorRequest instance
                         */
                        GetProcessorRequest.create = function create(properties) {
                            return new GetProcessorRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetProcessorRequest message. Does not implicitly {@link google.cloud.documentai.v1.GetProcessorRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.GetProcessorRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IGetProcessorRequest} message GetProcessorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetProcessorRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetProcessorRequest message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.GetProcessorRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.GetProcessorRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IGetProcessorRequest} message GetProcessorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetProcessorRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetProcessorRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.GetProcessorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.GetProcessorRequest} GetProcessorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetProcessorRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.GetProcessorRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetProcessorRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.GetProcessorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.GetProcessorRequest} GetProcessorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetProcessorRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetProcessorRequest message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.GetProcessorRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetProcessorRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetProcessorRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.GetProcessorRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.GetProcessorRequest} GetProcessorRequest
                         */
                        GetProcessorRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.GetProcessorRequest)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.GetProcessorRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetProcessorRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.GetProcessorRequest
                         * @static
                         * @param {google.cloud.documentai.v1.GetProcessorRequest} message GetProcessorRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetProcessorRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetProcessorRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.GetProcessorRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetProcessorRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetProcessorRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.GetProcessorRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetProcessorRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.GetProcessorRequest";
                        };
    
                        return GetProcessorRequest;
                    })();
    
                    v1.GetProcessorVersionRequest = (function() {
    
                        /**
                         * Properties of a GetProcessorVersionRequest.
                         * @memberof google.cloud.documentai.v1
                         * @interface IGetProcessorVersionRequest
                         * @property {string|null} [name] GetProcessorVersionRequest name
                         */
    
                        /**
                         * Constructs a new GetProcessorVersionRequest.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a GetProcessorVersionRequest.
                         * @implements IGetProcessorVersionRequest
                         * @constructor
                         * @param {google.cloud.documentai.v1.IGetProcessorVersionRequest=} [properties] Properties to set
                         */
                        function GetProcessorVersionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetProcessorVersionRequest name.
                         * @member {string} name
                         * @memberof google.cloud.documentai.v1.GetProcessorVersionRequest
                         * @instance
                         */
                        GetProcessorVersionRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetProcessorVersionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.GetProcessorVersionRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IGetProcessorVersionRequest=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.GetProcessorVersionRequest} GetProcessorVersionRequest instance
                         */
                        GetProcessorVersionRequest.create = function create(properties) {
                            return new GetProcessorVersionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetProcessorVersionRequest message. Does not implicitly {@link google.cloud.documentai.v1.GetProcessorVersionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.GetProcessorVersionRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IGetProcessorVersionRequest} message GetProcessorVersionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetProcessorVersionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetProcessorVersionRequest message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.GetProcessorVersionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.GetProcessorVersionRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IGetProcessorVersionRequest} message GetProcessorVersionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetProcessorVersionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetProcessorVersionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.GetProcessorVersionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.GetProcessorVersionRequest} GetProcessorVersionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetProcessorVersionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.GetProcessorVersionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetProcessorVersionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.GetProcessorVersionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.GetProcessorVersionRequest} GetProcessorVersionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetProcessorVersionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetProcessorVersionRequest message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.GetProcessorVersionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetProcessorVersionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetProcessorVersionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.GetProcessorVersionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.GetProcessorVersionRequest} GetProcessorVersionRequest
                         */
                        GetProcessorVersionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.GetProcessorVersionRequest)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.GetProcessorVersionRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetProcessorVersionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.GetProcessorVersionRequest
                         * @static
                         * @param {google.cloud.documentai.v1.GetProcessorVersionRequest} message GetProcessorVersionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetProcessorVersionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetProcessorVersionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.GetProcessorVersionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetProcessorVersionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetProcessorVersionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.GetProcessorVersionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetProcessorVersionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.GetProcessorVersionRequest";
                        };
    
                        return GetProcessorVersionRequest;
                    })();
    
                    v1.ListProcessorVersionsRequest = (function() {
    
                        /**
                         * Properties of a ListProcessorVersionsRequest.
                         * @memberof google.cloud.documentai.v1
                         * @interface IListProcessorVersionsRequest
                         * @property {string|null} [parent] ListProcessorVersionsRequest parent
                         * @property {number|null} [pageSize] ListProcessorVersionsRequest pageSize
                         * @property {string|null} [pageToken] ListProcessorVersionsRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListProcessorVersionsRequest.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a ListProcessorVersionsRequest.
                         * @implements IListProcessorVersionsRequest
                         * @constructor
                         * @param {google.cloud.documentai.v1.IListProcessorVersionsRequest=} [properties] Properties to set
                         */
                        function ListProcessorVersionsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListProcessorVersionsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.documentai.v1.ListProcessorVersionsRequest
                         * @instance
                         */
                        ListProcessorVersionsRequest.prototype.parent = "";
    
                        /**
                         * ListProcessorVersionsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.documentai.v1.ListProcessorVersionsRequest
                         * @instance
                         */
                        ListProcessorVersionsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListProcessorVersionsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.documentai.v1.ListProcessorVersionsRequest
                         * @instance
                         */
                        ListProcessorVersionsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListProcessorVersionsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.ListProcessorVersionsRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IListProcessorVersionsRequest=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.ListProcessorVersionsRequest} ListProcessorVersionsRequest instance
                         */
                        ListProcessorVersionsRequest.create = function create(properties) {
                            return new ListProcessorVersionsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListProcessorVersionsRequest message. Does not implicitly {@link google.cloud.documentai.v1.ListProcessorVersionsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.ListProcessorVersionsRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IListProcessorVersionsRequest} message ListProcessorVersionsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListProcessorVersionsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListProcessorVersionsRequest message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.ListProcessorVersionsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.ListProcessorVersionsRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IListProcessorVersionsRequest} message ListProcessorVersionsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListProcessorVersionsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListProcessorVersionsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.ListProcessorVersionsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.ListProcessorVersionsRequest} ListProcessorVersionsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListProcessorVersionsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.ListProcessorVersionsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListProcessorVersionsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.ListProcessorVersionsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.ListProcessorVersionsRequest} ListProcessorVersionsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListProcessorVersionsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListProcessorVersionsRequest message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.ListProcessorVersionsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListProcessorVersionsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListProcessorVersionsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.ListProcessorVersionsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.ListProcessorVersionsRequest} ListProcessorVersionsRequest
                         */
                        ListProcessorVersionsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.ListProcessorVersionsRequest)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.ListProcessorVersionsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListProcessorVersionsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.ListProcessorVersionsRequest
                         * @static
                         * @param {google.cloud.documentai.v1.ListProcessorVersionsRequest} message ListProcessorVersionsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListProcessorVersionsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListProcessorVersionsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.ListProcessorVersionsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListProcessorVersionsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListProcessorVersionsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.ListProcessorVersionsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListProcessorVersionsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.ListProcessorVersionsRequest";
                        };
    
                        return ListProcessorVersionsRequest;
                    })();
    
                    v1.ListProcessorVersionsResponse = (function() {
    
                        /**
                         * Properties of a ListProcessorVersionsResponse.
                         * @memberof google.cloud.documentai.v1
                         * @interface IListProcessorVersionsResponse
                         * @property {Array.<google.cloud.documentai.v1.IProcessorVersion>|null} [processorVersions] ListProcessorVersionsResponse processorVersions
                         * @property {string|null} [nextPageToken] ListProcessorVersionsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListProcessorVersionsResponse.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a ListProcessorVersionsResponse.
                         * @implements IListProcessorVersionsResponse
                         * @constructor
                         * @param {google.cloud.documentai.v1.IListProcessorVersionsResponse=} [properties] Properties to set
                         */
                        function ListProcessorVersionsResponse(properties) {
                            this.processorVersions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListProcessorVersionsResponse processorVersions.
                         * @member {Array.<google.cloud.documentai.v1.IProcessorVersion>} processorVersions
                         * @memberof google.cloud.documentai.v1.ListProcessorVersionsResponse
                         * @instance
                         */
                        ListProcessorVersionsResponse.prototype.processorVersions = $util.emptyArray;
    
                        /**
                         * ListProcessorVersionsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.documentai.v1.ListProcessorVersionsResponse
                         * @instance
                         */
                        ListProcessorVersionsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListProcessorVersionsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.ListProcessorVersionsResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IListProcessorVersionsResponse=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.ListProcessorVersionsResponse} ListProcessorVersionsResponse instance
                         */
                        ListProcessorVersionsResponse.create = function create(properties) {
                            return new ListProcessorVersionsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListProcessorVersionsResponse message. Does not implicitly {@link google.cloud.documentai.v1.ListProcessorVersionsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.ListProcessorVersionsResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IListProcessorVersionsResponse} message ListProcessorVersionsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListProcessorVersionsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.processorVersions != null && message.processorVersions.length)
                                for (var i = 0; i < message.processorVersions.length; ++i)
                                    $root.google.cloud.documentai.v1.ProcessorVersion.encode(message.processorVersions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListProcessorVersionsResponse message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.ListProcessorVersionsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.ListProcessorVersionsResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IListProcessorVersionsResponse} message ListProcessorVersionsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListProcessorVersionsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListProcessorVersionsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.ListProcessorVersionsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.ListProcessorVersionsResponse} ListProcessorVersionsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListProcessorVersionsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.ListProcessorVersionsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.processorVersions && message.processorVersions.length))
                                            message.processorVersions = [];
                                        message.processorVersions.push($root.google.cloud.documentai.v1.ProcessorVersion.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListProcessorVersionsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.ListProcessorVersionsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.ListProcessorVersionsResponse} ListProcessorVersionsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListProcessorVersionsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListProcessorVersionsResponse message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.ListProcessorVersionsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListProcessorVersionsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.processorVersions != null && message.hasOwnProperty("processorVersions")) {
                                if (!Array.isArray(message.processorVersions))
                                    return "processorVersions: array expected";
                                for (var i = 0; i < message.processorVersions.length; ++i) {
                                    var error = $root.google.cloud.documentai.v1.ProcessorVersion.verify(message.processorVersions[i]);
                                    if (error)
                                        return "processorVersions." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListProcessorVersionsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.ListProcessorVersionsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.ListProcessorVersionsResponse} ListProcessorVersionsResponse
                         */
                        ListProcessorVersionsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.ListProcessorVersionsResponse)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.ListProcessorVersionsResponse();
                            if (object.processorVersions) {
                                if (!Array.isArray(object.processorVersions))
                                    throw TypeError(".google.cloud.documentai.v1.ListProcessorVersionsResponse.processorVersions: array expected");
                                message.processorVersions = [];
                                for (var i = 0; i < object.processorVersions.length; ++i) {
                                    if (typeof object.processorVersions[i] !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.ListProcessorVersionsResponse.processorVersions: object expected");
                                    message.processorVersions[i] = $root.google.cloud.documentai.v1.ProcessorVersion.fromObject(object.processorVersions[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListProcessorVersionsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.ListProcessorVersionsResponse
                         * @static
                         * @param {google.cloud.documentai.v1.ListProcessorVersionsResponse} message ListProcessorVersionsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListProcessorVersionsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.processorVersions = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.processorVersions && message.processorVersions.length) {
                                object.processorVersions = [];
                                for (var j = 0; j < message.processorVersions.length; ++j)
                                    object.processorVersions[j] = $root.google.cloud.documentai.v1.ProcessorVersion.toObject(message.processorVersions[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListProcessorVersionsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.ListProcessorVersionsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListProcessorVersionsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListProcessorVersionsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.ListProcessorVersionsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListProcessorVersionsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.ListProcessorVersionsResponse";
                        };
    
                        return ListProcessorVersionsResponse;
                    })();
    
                    v1.DeleteProcessorVersionRequest = (function() {
    
                        /**
                         * Properties of a DeleteProcessorVersionRequest.
                         * @memberof google.cloud.documentai.v1
                         * @interface IDeleteProcessorVersionRequest
                         * @property {string|null} [name] DeleteProcessorVersionRequest name
                         */
    
                        /**
                         * Constructs a new DeleteProcessorVersionRequest.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a DeleteProcessorVersionRequest.
                         * @implements IDeleteProcessorVersionRequest
                         * @constructor
                         * @param {google.cloud.documentai.v1.IDeleteProcessorVersionRequest=} [properties] Properties to set
                         */
                        function DeleteProcessorVersionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteProcessorVersionRequest name.
                         * @member {string} name
                         * @memberof google.cloud.documentai.v1.DeleteProcessorVersionRequest
                         * @instance
                         */
                        DeleteProcessorVersionRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteProcessorVersionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.DeleteProcessorVersionRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IDeleteProcessorVersionRequest=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.DeleteProcessorVersionRequest} DeleteProcessorVersionRequest instance
                         */
                        DeleteProcessorVersionRequest.create = function create(properties) {
                            return new DeleteProcessorVersionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteProcessorVersionRequest message. Does not implicitly {@link google.cloud.documentai.v1.DeleteProcessorVersionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.DeleteProcessorVersionRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IDeleteProcessorVersionRequest} message DeleteProcessorVersionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteProcessorVersionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteProcessorVersionRequest message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.DeleteProcessorVersionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.DeleteProcessorVersionRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IDeleteProcessorVersionRequest} message DeleteProcessorVersionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteProcessorVersionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteProcessorVersionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.DeleteProcessorVersionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.DeleteProcessorVersionRequest} DeleteProcessorVersionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteProcessorVersionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.DeleteProcessorVersionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteProcessorVersionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.DeleteProcessorVersionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.DeleteProcessorVersionRequest} DeleteProcessorVersionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteProcessorVersionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteProcessorVersionRequest message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.DeleteProcessorVersionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteProcessorVersionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteProcessorVersionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.DeleteProcessorVersionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.DeleteProcessorVersionRequest} DeleteProcessorVersionRequest
                         */
                        DeleteProcessorVersionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.DeleteProcessorVersionRequest)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.DeleteProcessorVersionRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteProcessorVersionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.DeleteProcessorVersionRequest
                         * @static
                         * @param {google.cloud.documentai.v1.DeleteProcessorVersionRequest} message DeleteProcessorVersionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteProcessorVersionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteProcessorVersionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.DeleteProcessorVersionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteProcessorVersionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteProcessorVersionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.DeleteProcessorVersionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteProcessorVersionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.DeleteProcessorVersionRequest";
                        };
    
                        return DeleteProcessorVersionRequest;
                    })();
    
                    v1.DeleteProcessorVersionMetadata = (function() {
    
                        /**
                         * Properties of a DeleteProcessorVersionMetadata.
                         * @memberof google.cloud.documentai.v1
                         * @interface IDeleteProcessorVersionMetadata
                         * @property {google.cloud.documentai.v1.ICommonOperationMetadata|null} [commonMetadata] DeleteProcessorVersionMetadata commonMetadata
                         */
    
                        /**
                         * Constructs a new DeleteProcessorVersionMetadata.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a DeleteProcessorVersionMetadata.
                         * @implements IDeleteProcessorVersionMetadata
                         * @constructor
                         * @param {google.cloud.documentai.v1.IDeleteProcessorVersionMetadata=} [properties] Properties to set
                         */
                        function DeleteProcessorVersionMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteProcessorVersionMetadata commonMetadata.
                         * @member {google.cloud.documentai.v1.ICommonOperationMetadata|null|undefined} commonMetadata
                         * @memberof google.cloud.documentai.v1.DeleteProcessorVersionMetadata
                         * @instance
                         */
                        DeleteProcessorVersionMetadata.prototype.commonMetadata = null;
    
                        /**
                         * Creates a new DeleteProcessorVersionMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.DeleteProcessorVersionMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.IDeleteProcessorVersionMetadata=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.DeleteProcessorVersionMetadata} DeleteProcessorVersionMetadata instance
                         */
                        DeleteProcessorVersionMetadata.create = function create(properties) {
                            return new DeleteProcessorVersionMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteProcessorVersionMetadata message. Does not implicitly {@link google.cloud.documentai.v1.DeleteProcessorVersionMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.DeleteProcessorVersionMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.IDeleteProcessorVersionMetadata} message DeleteProcessorVersionMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteProcessorVersionMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.commonMetadata != null && Object.hasOwnProperty.call(message, "commonMetadata"))
                                $root.google.cloud.documentai.v1.CommonOperationMetadata.encode(message.commonMetadata, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteProcessorVersionMetadata message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.DeleteProcessorVersionMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.DeleteProcessorVersionMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.IDeleteProcessorVersionMetadata} message DeleteProcessorVersionMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteProcessorVersionMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteProcessorVersionMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.DeleteProcessorVersionMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.DeleteProcessorVersionMetadata} DeleteProcessorVersionMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteProcessorVersionMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.DeleteProcessorVersionMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteProcessorVersionMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.DeleteProcessorVersionMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.DeleteProcessorVersionMetadata} DeleteProcessorVersionMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteProcessorVersionMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteProcessorVersionMetadata message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.DeleteProcessorVersionMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteProcessorVersionMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.commonMetadata != null && message.hasOwnProperty("commonMetadata")) {
                                var error = $root.google.cloud.documentai.v1.CommonOperationMetadata.verify(message.commonMetadata);
                                if (error)
                                    return "commonMetadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DeleteProcessorVersionMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.DeleteProcessorVersionMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.DeleteProcessorVersionMetadata} DeleteProcessorVersionMetadata
                         */
                        DeleteProcessorVersionMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.DeleteProcessorVersionMetadata)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.DeleteProcessorVersionMetadata();
                            if (object.commonMetadata != null) {
                                if (typeof object.commonMetadata !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.DeleteProcessorVersionMetadata.commonMetadata: object expected");
                                message.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.fromObject(object.commonMetadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteProcessorVersionMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.DeleteProcessorVersionMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.DeleteProcessorVersionMetadata} message DeleteProcessorVersionMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteProcessorVersionMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.commonMetadata = null;
                            if (message.commonMetadata != null && message.hasOwnProperty("commonMetadata"))
                                object.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.toObject(message.commonMetadata, options);
                            return object;
                        };
    
                        /**
                         * Converts this DeleteProcessorVersionMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.DeleteProcessorVersionMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteProcessorVersionMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteProcessorVersionMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.DeleteProcessorVersionMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteProcessorVersionMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.DeleteProcessorVersionMetadata";
                        };
    
                        return DeleteProcessorVersionMetadata;
                    })();
    
                    v1.DeployProcessorVersionRequest = (function() {
    
                        /**
                         * Properties of a DeployProcessorVersionRequest.
                         * @memberof google.cloud.documentai.v1
                         * @interface IDeployProcessorVersionRequest
                         * @property {string|null} [name] DeployProcessorVersionRequest name
                         */
    
                        /**
                         * Constructs a new DeployProcessorVersionRequest.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a DeployProcessorVersionRequest.
                         * @implements IDeployProcessorVersionRequest
                         * @constructor
                         * @param {google.cloud.documentai.v1.IDeployProcessorVersionRequest=} [properties] Properties to set
                         */
                        function DeployProcessorVersionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeployProcessorVersionRequest name.
                         * @member {string} name
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionRequest
                         * @instance
                         */
                        DeployProcessorVersionRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeployProcessorVersionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IDeployProcessorVersionRequest=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.DeployProcessorVersionRequest} DeployProcessorVersionRequest instance
                         */
                        DeployProcessorVersionRequest.create = function create(properties) {
                            return new DeployProcessorVersionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeployProcessorVersionRequest message. Does not implicitly {@link google.cloud.documentai.v1.DeployProcessorVersionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IDeployProcessorVersionRequest} message DeployProcessorVersionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeployProcessorVersionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeployProcessorVersionRequest message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.DeployProcessorVersionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IDeployProcessorVersionRequest} message DeployProcessorVersionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeployProcessorVersionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeployProcessorVersionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.DeployProcessorVersionRequest} DeployProcessorVersionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeployProcessorVersionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.DeployProcessorVersionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeployProcessorVersionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.DeployProcessorVersionRequest} DeployProcessorVersionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeployProcessorVersionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeployProcessorVersionRequest message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeployProcessorVersionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeployProcessorVersionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.DeployProcessorVersionRequest} DeployProcessorVersionRequest
                         */
                        DeployProcessorVersionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.DeployProcessorVersionRequest)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.DeployProcessorVersionRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeployProcessorVersionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionRequest
                         * @static
                         * @param {google.cloud.documentai.v1.DeployProcessorVersionRequest} message DeployProcessorVersionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeployProcessorVersionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeployProcessorVersionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeployProcessorVersionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeployProcessorVersionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeployProcessorVersionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.DeployProcessorVersionRequest";
                        };
    
                        return DeployProcessorVersionRequest;
                    })();
    
                    v1.DeployProcessorVersionResponse = (function() {
    
                        /**
                         * Properties of a DeployProcessorVersionResponse.
                         * @memberof google.cloud.documentai.v1
                         * @interface IDeployProcessorVersionResponse
                         */
    
                        /**
                         * Constructs a new DeployProcessorVersionResponse.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a DeployProcessorVersionResponse.
                         * @implements IDeployProcessorVersionResponse
                         * @constructor
                         * @param {google.cloud.documentai.v1.IDeployProcessorVersionResponse=} [properties] Properties to set
                         */
                        function DeployProcessorVersionResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new DeployProcessorVersionResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IDeployProcessorVersionResponse=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.DeployProcessorVersionResponse} DeployProcessorVersionResponse instance
                         */
                        DeployProcessorVersionResponse.create = function create(properties) {
                            return new DeployProcessorVersionResponse(properties);
                        };
    
                        /**
                         * Encodes the specified DeployProcessorVersionResponse message. Does not implicitly {@link google.cloud.documentai.v1.DeployProcessorVersionResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IDeployProcessorVersionResponse} message DeployProcessorVersionResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeployProcessorVersionResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeployProcessorVersionResponse message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.DeployProcessorVersionResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IDeployProcessorVersionResponse} message DeployProcessorVersionResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeployProcessorVersionResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeployProcessorVersionResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.DeployProcessorVersionResponse} DeployProcessorVersionResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeployProcessorVersionResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.DeployProcessorVersionResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeployProcessorVersionResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.DeployProcessorVersionResponse} DeployProcessorVersionResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeployProcessorVersionResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeployProcessorVersionResponse message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeployProcessorVersionResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeployProcessorVersionResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.DeployProcessorVersionResponse} DeployProcessorVersionResponse
                         */
                        DeployProcessorVersionResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.DeployProcessorVersionResponse)
                                return object;
                            return new $root.google.cloud.documentai.v1.DeployProcessorVersionResponse();
                        };
    
                        /**
                         * Creates a plain object from a DeployProcessorVersionResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionResponse
                         * @static
                         * @param {google.cloud.documentai.v1.DeployProcessorVersionResponse} message DeployProcessorVersionResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeployProcessorVersionResponse.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this DeployProcessorVersionResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeployProcessorVersionResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeployProcessorVersionResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeployProcessorVersionResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.DeployProcessorVersionResponse";
                        };
    
                        return DeployProcessorVersionResponse;
                    })();
    
                    v1.DeployProcessorVersionMetadata = (function() {
    
                        /**
                         * Properties of a DeployProcessorVersionMetadata.
                         * @memberof google.cloud.documentai.v1
                         * @interface IDeployProcessorVersionMetadata
                         * @property {google.cloud.documentai.v1.ICommonOperationMetadata|null} [commonMetadata] DeployProcessorVersionMetadata commonMetadata
                         */
    
                        /**
                         * Constructs a new DeployProcessorVersionMetadata.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a DeployProcessorVersionMetadata.
                         * @implements IDeployProcessorVersionMetadata
                         * @constructor
                         * @param {google.cloud.documentai.v1.IDeployProcessorVersionMetadata=} [properties] Properties to set
                         */
                        function DeployProcessorVersionMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeployProcessorVersionMetadata commonMetadata.
                         * @member {google.cloud.documentai.v1.ICommonOperationMetadata|null|undefined} commonMetadata
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionMetadata
                         * @instance
                         */
                        DeployProcessorVersionMetadata.prototype.commonMetadata = null;
    
                        /**
                         * Creates a new DeployProcessorVersionMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.IDeployProcessorVersionMetadata=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.DeployProcessorVersionMetadata} DeployProcessorVersionMetadata instance
                         */
                        DeployProcessorVersionMetadata.create = function create(properties) {
                            return new DeployProcessorVersionMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified DeployProcessorVersionMetadata message. Does not implicitly {@link google.cloud.documentai.v1.DeployProcessorVersionMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.IDeployProcessorVersionMetadata} message DeployProcessorVersionMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeployProcessorVersionMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.commonMetadata != null && Object.hasOwnProperty.call(message, "commonMetadata"))
                                $root.google.cloud.documentai.v1.CommonOperationMetadata.encode(message.commonMetadata, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeployProcessorVersionMetadata message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.DeployProcessorVersionMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.IDeployProcessorVersionMetadata} message DeployProcessorVersionMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeployProcessorVersionMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeployProcessorVersionMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.DeployProcessorVersionMetadata} DeployProcessorVersionMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeployProcessorVersionMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.DeployProcessorVersionMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeployProcessorVersionMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.DeployProcessorVersionMetadata} DeployProcessorVersionMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeployProcessorVersionMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeployProcessorVersionMetadata message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeployProcessorVersionMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.commonMetadata != null && message.hasOwnProperty("commonMetadata")) {
                                var error = $root.google.cloud.documentai.v1.CommonOperationMetadata.verify(message.commonMetadata);
                                if (error)
                                    return "commonMetadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DeployProcessorVersionMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.DeployProcessorVersionMetadata} DeployProcessorVersionMetadata
                         */
                        DeployProcessorVersionMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.DeployProcessorVersionMetadata)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.DeployProcessorVersionMetadata();
                            if (object.commonMetadata != null) {
                                if (typeof object.commonMetadata !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.DeployProcessorVersionMetadata.commonMetadata: object expected");
                                message.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.fromObject(object.commonMetadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeployProcessorVersionMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.DeployProcessorVersionMetadata} message DeployProcessorVersionMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeployProcessorVersionMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.commonMetadata = null;
                            if (message.commonMetadata != null && message.hasOwnProperty("commonMetadata"))
                                object.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.toObject(message.commonMetadata, options);
                            return object;
                        };
    
                        /**
                         * Converts this DeployProcessorVersionMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeployProcessorVersionMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeployProcessorVersionMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.DeployProcessorVersionMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeployProcessorVersionMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.DeployProcessorVersionMetadata";
                        };
    
                        return DeployProcessorVersionMetadata;
                    })();
    
                    v1.UndeployProcessorVersionRequest = (function() {
    
                        /**
                         * Properties of an UndeployProcessorVersionRequest.
                         * @memberof google.cloud.documentai.v1
                         * @interface IUndeployProcessorVersionRequest
                         * @property {string|null} [name] UndeployProcessorVersionRequest name
                         */
    
                        /**
                         * Constructs a new UndeployProcessorVersionRequest.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents an UndeployProcessorVersionRequest.
                         * @implements IUndeployProcessorVersionRequest
                         * @constructor
                         * @param {google.cloud.documentai.v1.IUndeployProcessorVersionRequest=} [properties] Properties to set
                         */
                        function UndeployProcessorVersionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UndeployProcessorVersionRequest name.
                         * @member {string} name
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionRequest
                         * @instance
                         */
                        UndeployProcessorVersionRequest.prototype.name = "";
    
                        /**
                         * Creates a new UndeployProcessorVersionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IUndeployProcessorVersionRequest=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.UndeployProcessorVersionRequest} UndeployProcessorVersionRequest instance
                         */
                        UndeployProcessorVersionRequest.create = function create(properties) {
                            return new UndeployProcessorVersionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UndeployProcessorVersionRequest message. Does not implicitly {@link google.cloud.documentai.v1.UndeployProcessorVersionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IUndeployProcessorVersionRequest} message UndeployProcessorVersionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UndeployProcessorVersionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UndeployProcessorVersionRequest message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.UndeployProcessorVersionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IUndeployProcessorVersionRequest} message UndeployProcessorVersionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UndeployProcessorVersionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UndeployProcessorVersionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.UndeployProcessorVersionRequest} UndeployProcessorVersionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UndeployProcessorVersionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.UndeployProcessorVersionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UndeployProcessorVersionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.UndeployProcessorVersionRequest} UndeployProcessorVersionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UndeployProcessorVersionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UndeployProcessorVersionRequest message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UndeployProcessorVersionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UndeployProcessorVersionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.UndeployProcessorVersionRequest} UndeployProcessorVersionRequest
                         */
                        UndeployProcessorVersionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.UndeployProcessorVersionRequest)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.UndeployProcessorVersionRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UndeployProcessorVersionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionRequest
                         * @static
                         * @param {google.cloud.documentai.v1.UndeployProcessorVersionRequest} message UndeployProcessorVersionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UndeployProcessorVersionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this UndeployProcessorVersionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UndeployProcessorVersionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UndeployProcessorVersionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UndeployProcessorVersionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.UndeployProcessorVersionRequest";
                        };
    
                        return UndeployProcessorVersionRequest;
                    })();
    
                    v1.UndeployProcessorVersionResponse = (function() {
    
                        /**
                         * Properties of an UndeployProcessorVersionResponse.
                         * @memberof google.cloud.documentai.v1
                         * @interface IUndeployProcessorVersionResponse
                         */
    
                        /**
                         * Constructs a new UndeployProcessorVersionResponse.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents an UndeployProcessorVersionResponse.
                         * @implements IUndeployProcessorVersionResponse
                         * @constructor
                         * @param {google.cloud.documentai.v1.IUndeployProcessorVersionResponse=} [properties] Properties to set
                         */
                        function UndeployProcessorVersionResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new UndeployProcessorVersionResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IUndeployProcessorVersionResponse=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.UndeployProcessorVersionResponse} UndeployProcessorVersionResponse instance
                         */
                        UndeployProcessorVersionResponse.create = function create(properties) {
                            return new UndeployProcessorVersionResponse(properties);
                        };
    
                        /**
                         * Encodes the specified UndeployProcessorVersionResponse message. Does not implicitly {@link google.cloud.documentai.v1.UndeployProcessorVersionResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IUndeployProcessorVersionResponse} message UndeployProcessorVersionResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UndeployProcessorVersionResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UndeployProcessorVersionResponse message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.UndeployProcessorVersionResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IUndeployProcessorVersionResponse} message UndeployProcessorVersionResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UndeployProcessorVersionResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UndeployProcessorVersionResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.UndeployProcessorVersionResponse} UndeployProcessorVersionResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UndeployProcessorVersionResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.UndeployProcessorVersionResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UndeployProcessorVersionResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.UndeployProcessorVersionResponse} UndeployProcessorVersionResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UndeployProcessorVersionResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UndeployProcessorVersionResponse message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UndeployProcessorVersionResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates an UndeployProcessorVersionResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.UndeployProcessorVersionResponse} UndeployProcessorVersionResponse
                         */
                        UndeployProcessorVersionResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.UndeployProcessorVersionResponse)
                                return object;
                            return new $root.google.cloud.documentai.v1.UndeployProcessorVersionResponse();
                        };
    
                        /**
                         * Creates a plain object from an UndeployProcessorVersionResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionResponse
                         * @static
                         * @param {google.cloud.documentai.v1.UndeployProcessorVersionResponse} message UndeployProcessorVersionResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UndeployProcessorVersionResponse.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this UndeployProcessorVersionResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UndeployProcessorVersionResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UndeployProcessorVersionResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UndeployProcessorVersionResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.UndeployProcessorVersionResponse";
                        };
    
                        return UndeployProcessorVersionResponse;
                    })();
    
                    v1.UndeployProcessorVersionMetadata = (function() {
    
                        /**
                         * Properties of an UndeployProcessorVersionMetadata.
                         * @memberof google.cloud.documentai.v1
                         * @interface IUndeployProcessorVersionMetadata
                         * @property {google.cloud.documentai.v1.ICommonOperationMetadata|null} [commonMetadata] UndeployProcessorVersionMetadata commonMetadata
                         */
    
                        /**
                         * Constructs a new UndeployProcessorVersionMetadata.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents an UndeployProcessorVersionMetadata.
                         * @implements IUndeployProcessorVersionMetadata
                         * @constructor
                         * @param {google.cloud.documentai.v1.IUndeployProcessorVersionMetadata=} [properties] Properties to set
                         */
                        function UndeployProcessorVersionMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UndeployProcessorVersionMetadata commonMetadata.
                         * @member {google.cloud.documentai.v1.ICommonOperationMetadata|null|undefined} commonMetadata
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionMetadata
                         * @instance
                         */
                        UndeployProcessorVersionMetadata.prototype.commonMetadata = null;
    
                        /**
                         * Creates a new UndeployProcessorVersionMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.IUndeployProcessorVersionMetadata=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.UndeployProcessorVersionMetadata} UndeployProcessorVersionMetadata instance
                         */
                        UndeployProcessorVersionMetadata.create = function create(properties) {
                            return new UndeployProcessorVersionMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified UndeployProcessorVersionMetadata message. Does not implicitly {@link google.cloud.documentai.v1.UndeployProcessorVersionMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.IUndeployProcessorVersionMetadata} message UndeployProcessorVersionMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UndeployProcessorVersionMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.commonMetadata != null && Object.hasOwnProperty.call(message, "commonMetadata"))
                                $root.google.cloud.documentai.v1.CommonOperationMetadata.encode(message.commonMetadata, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UndeployProcessorVersionMetadata message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.UndeployProcessorVersionMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.IUndeployProcessorVersionMetadata} message UndeployProcessorVersionMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UndeployProcessorVersionMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UndeployProcessorVersionMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.UndeployProcessorVersionMetadata} UndeployProcessorVersionMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UndeployProcessorVersionMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.UndeployProcessorVersionMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UndeployProcessorVersionMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.UndeployProcessorVersionMetadata} UndeployProcessorVersionMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UndeployProcessorVersionMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UndeployProcessorVersionMetadata message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UndeployProcessorVersionMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.commonMetadata != null && message.hasOwnProperty("commonMetadata")) {
                                var error = $root.google.cloud.documentai.v1.CommonOperationMetadata.verify(message.commonMetadata);
                                if (error)
                                    return "commonMetadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UndeployProcessorVersionMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.UndeployProcessorVersionMetadata} UndeployProcessorVersionMetadata
                         */
                        UndeployProcessorVersionMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.UndeployProcessorVersionMetadata)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.UndeployProcessorVersionMetadata();
                            if (object.commonMetadata != null) {
                                if (typeof object.commonMetadata !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.UndeployProcessorVersionMetadata.commonMetadata: object expected");
                                message.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.fromObject(object.commonMetadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UndeployProcessorVersionMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.UndeployProcessorVersionMetadata} message UndeployProcessorVersionMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UndeployProcessorVersionMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.commonMetadata = null;
                            if (message.commonMetadata != null && message.hasOwnProperty("commonMetadata"))
                                object.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.toObject(message.commonMetadata, options);
                            return object;
                        };
    
                        /**
                         * Converts this UndeployProcessorVersionMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UndeployProcessorVersionMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UndeployProcessorVersionMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.UndeployProcessorVersionMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UndeployProcessorVersionMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.UndeployProcessorVersionMetadata";
                        };
    
                        return UndeployProcessorVersionMetadata;
                    })();
    
                    v1.CreateProcessorRequest = (function() {
    
                        /**
                         * Properties of a CreateProcessorRequest.
                         * @memberof google.cloud.documentai.v1
                         * @interface ICreateProcessorRequest
                         * @property {string|null} [parent] CreateProcessorRequest parent
                         * @property {google.cloud.documentai.v1.IProcessor|null} [processor] CreateProcessorRequest processor
                         */
    
                        /**
                         * Constructs a new CreateProcessorRequest.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a CreateProcessorRequest.
                         * @implements ICreateProcessorRequest
                         * @constructor
                         * @param {google.cloud.documentai.v1.ICreateProcessorRequest=} [properties] Properties to set
                         */
                        function CreateProcessorRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateProcessorRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.documentai.v1.CreateProcessorRequest
                         * @instance
                         */
                        CreateProcessorRequest.prototype.parent = "";
    
                        /**
                         * CreateProcessorRequest processor.
                         * @member {google.cloud.documentai.v1.IProcessor|null|undefined} processor
                         * @memberof google.cloud.documentai.v1.CreateProcessorRequest
                         * @instance
                         */
                        CreateProcessorRequest.prototype.processor = null;
    
                        /**
                         * Creates a new CreateProcessorRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.CreateProcessorRequest
                         * @static
                         * @param {google.cloud.documentai.v1.ICreateProcessorRequest=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.CreateProcessorRequest} CreateProcessorRequest instance
                         */
                        CreateProcessorRequest.create = function create(properties) {
                            return new CreateProcessorRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateProcessorRequest message. Does not implicitly {@link google.cloud.documentai.v1.CreateProcessorRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.CreateProcessorRequest
                         * @static
                         * @param {google.cloud.documentai.v1.ICreateProcessorRequest} message CreateProcessorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateProcessorRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.processor != null && Object.hasOwnProperty.call(message, "processor"))
                                $root.google.cloud.documentai.v1.Processor.encode(message.processor, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateProcessorRequest message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.CreateProcessorRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.CreateProcessorRequest
                         * @static
                         * @param {google.cloud.documentai.v1.ICreateProcessorRequest} message CreateProcessorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateProcessorRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateProcessorRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.CreateProcessorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.CreateProcessorRequest} CreateProcessorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateProcessorRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.CreateProcessorRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.processor = $root.google.cloud.documentai.v1.Processor.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateProcessorRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.CreateProcessorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.CreateProcessorRequest} CreateProcessorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateProcessorRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateProcessorRequest message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.CreateProcessorRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateProcessorRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.processor != null && message.hasOwnProperty("processor")) {
                                var error = $root.google.cloud.documentai.v1.Processor.verify(message.processor);
                                if (error)
                                    return "processor." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateProcessorRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.CreateProcessorRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.CreateProcessorRequest} CreateProcessorRequest
                         */
                        CreateProcessorRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.CreateProcessorRequest)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.CreateProcessorRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.processor != null) {
                                if (typeof object.processor !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.CreateProcessorRequest.processor: object expected");
                                message.processor = $root.google.cloud.documentai.v1.Processor.fromObject(object.processor);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateProcessorRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.CreateProcessorRequest
                         * @static
                         * @param {google.cloud.documentai.v1.CreateProcessorRequest} message CreateProcessorRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateProcessorRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.processor = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.processor != null && message.hasOwnProperty("processor"))
                                object.processor = $root.google.cloud.documentai.v1.Processor.toObject(message.processor, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateProcessorRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.CreateProcessorRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateProcessorRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateProcessorRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.CreateProcessorRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateProcessorRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.CreateProcessorRequest";
                        };
    
                        return CreateProcessorRequest;
                    })();
    
                    v1.DeleteProcessorRequest = (function() {
    
                        /**
                         * Properties of a DeleteProcessorRequest.
                         * @memberof google.cloud.documentai.v1
                         * @interface IDeleteProcessorRequest
                         * @property {string|null} [name] DeleteProcessorRequest name
                         */
    
                        /**
                         * Constructs a new DeleteProcessorRequest.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a DeleteProcessorRequest.
                         * @implements IDeleteProcessorRequest
                         * @constructor
                         * @param {google.cloud.documentai.v1.IDeleteProcessorRequest=} [properties] Properties to set
                         */
                        function DeleteProcessorRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteProcessorRequest name.
                         * @member {string} name
                         * @memberof google.cloud.documentai.v1.DeleteProcessorRequest
                         * @instance
                         */
                        DeleteProcessorRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteProcessorRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.DeleteProcessorRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IDeleteProcessorRequest=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.DeleteProcessorRequest} DeleteProcessorRequest instance
                         */
                        DeleteProcessorRequest.create = function create(properties) {
                            return new DeleteProcessorRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteProcessorRequest message. Does not implicitly {@link google.cloud.documentai.v1.DeleteProcessorRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.DeleteProcessorRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IDeleteProcessorRequest} message DeleteProcessorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteProcessorRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteProcessorRequest message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.DeleteProcessorRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.DeleteProcessorRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IDeleteProcessorRequest} message DeleteProcessorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteProcessorRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteProcessorRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.DeleteProcessorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.DeleteProcessorRequest} DeleteProcessorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteProcessorRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.DeleteProcessorRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteProcessorRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.DeleteProcessorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.DeleteProcessorRequest} DeleteProcessorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteProcessorRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteProcessorRequest message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.DeleteProcessorRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteProcessorRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteProcessorRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.DeleteProcessorRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.DeleteProcessorRequest} DeleteProcessorRequest
                         */
                        DeleteProcessorRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.DeleteProcessorRequest)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.DeleteProcessorRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteProcessorRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.DeleteProcessorRequest
                         * @static
                         * @param {google.cloud.documentai.v1.DeleteProcessorRequest} message DeleteProcessorRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteProcessorRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteProcessorRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.DeleteProcessorRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteProcessorRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteProcessorRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.DeleteProcessorRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteProcessorRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.DeleteProcessorRequest";
                        };
    
                        return DeleteProcessorRequest;
                    })();
    
                    v1.DeleteProcessorMetadata = (function() {
    
                        /**
                         * Properties of a DeleteProcessorMetadata.
                         * @memberof google.cloud.documentai.v1
                         * @interface IDeleteProcessorMetadata
                         * @property {google.cloud.documentai.v1.ICommonOperationMetadata|null} [commonMetadata] DeleteProcessorMetadata commonMetadata
                         */
    
                        /**
                         * Constructs a new DeleteProcessorMetadata.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a DeleteProcessorMetadata.
                         * @implements IDeleteProcessorMetadata
                         * @constructor
                         * @param {google.cloud.documentai.v1.IDeleteProcessorMetadata=} [properties] Properties to set
                         */
                        function DeleteProcessorMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteProcessorMetadata commonMetadata.
                         * @member {google.cloud.documentai.v1.ICommonOperationMetadata|null|undefined} commonMetadata
                         * @memberof google.cloud.documentai.v1.DeleteProcessorMetadata
                         * @instance
                         */
                        DeleteProcessorMetadata.prototype.commonMetadata = null;
    
                        /**
                         * Creates a new DeleteProcessorMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.DeleteProcessorMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.IDeleteProcessorMetadata=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.DeleteProcessorMetadata} DeleteProcessorMetadata instance
                         */
                        DeleteProcessorMetadata.create = function create(properties) {
                            return new DeleteProcessorMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteProcessorMetadata message. Does not implicitly {@link google.cloud.documentai.v1.DeleteProcessorMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.DeleteProcessorMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.IDeleteProcessorMetadata} message DeleteProcessorMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteProcessorMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.commonMetadata != null && Object.hasOwnProperty.call(message, "commonMetadata"))
                                $root.google.cloud.documentai.v1.CommonOperationMetadata.encode(message.commonMetadata, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteProcessorMetadata message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.DeleteProcessorMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.DeleteProcessorMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.IDeleteProcessorMetadata} message DeleteProcessorMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteProcessorMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteProcessorMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.DeleteProcessorMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.DeleteProcessorMetadata} DeleteProcessorMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteProcessorMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.DeleteProcessorMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 5: {
                                        message.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteProcessorMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.DeleteProcessorMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.DeleteProcessorMetadata} DeleteProcessorMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteProcessorMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteProcessorMetadata message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.DeleteProcessorMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteProcessorMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.commonMetadata != null && message.hasOwnProperty("commonMetadata")) {
                                var error = $root.google.cloud.documentai.v1.CommonOperationMetadata.verify(message.commonMetadata);
                                if (error)
                                    return "commonMetadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DeleteProcessorMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.DeleteProcessorMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.DeleteProcessorMetadata} DeleteProcessorMetadata
                         */
                        DeleteProcessorMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.DeleteProcessorMetadata)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.DeleteProcessorMetadata();
                            if (object.commonMetadata != null) {
                                if (typeof object.commonMetadata !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.DeleteProcessorMetadata.commonMetadata: object expected");
                                message.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.fromObject(object.commonMetadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteProcessorMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.DeleteProcessorMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.DeleteProcessorMetadata} message DeleteProcessorMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteProcessorMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.commonMetadata = null;
                            if (message.commonMetadata != null && message.hasOwnProperty("commonMetadata"))
                                object.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.toObject(message.commonMetadata, options);
                            return object;
                        };
    
                        /**
                         * Converts this DeleteProcessorMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.DeleteProcessorMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteProcessorMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteProcessorMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.DeleteProcessorMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteProcessorMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.DeleteProcessorMetadata";
                        };
    
                        return DeleteProcessorMetadata;
                    })();
    
                    v1.EnableProcessorRequest = (function() {
    
                        /**
                         * Properties of an EnableProcessorRequest.
                         * @memberof google.cloud.documentai.v1
                         * @interface IEnableProcessorRequest
                         * @property {string|null} [name] EnableProcessorRequest name
                         */
    
                        /**
                         * Constructs a new EnableProcessorRequest.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents an EnableProcessorRequest.
                         * @implements IEnableProcessorRequest
                         * @constructor
                         * @param {google.cloud.documentai.v1.IEnableProcessorRequest=} [properties] Properties to set
                         */
                        function EnableProcessorRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EnableProcessorRequest name.
                         * @member {string} name
                         * @memberof google.cloud.documentai.v1.EnableProcessorRequest
                         * @instance
                         */
                        EnableProcessorRequest.prototype.name = "";
    
                        /**
                         * Creates a new EnableProcessorRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.EnableProcessorRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IEnableProcessorRequest=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.EnableProcessorRequest} EnableProcessorRequest instance
                         */
                        EnableProcessorRequest.create = function create(properties) {
                            return new EnableProcessorRequest(properties);
                        };
    
                        /**
                         * Encodes the specified EnableProcessorRequest message. Does not implicitly {@link google.cloud.documentai.v1.EnableProcessorRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.EnableProcessorRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IEnableProcessorRequest} message EnableProcessorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EnableProcessorRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EnableProcessorRequest message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.EnableProcessorRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.EnableProcessorRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IEnableProcessorRequest} message EnableProcessorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EnableProcessorRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EnableProcessorRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.EnableProcessorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.EnableProcessorRequest} EnableProcessorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EnableProcessorRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.EnableProcessorRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EnableProcessorRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.EnableProcessorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.EnableProcessorRequest} EnableProcessorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EnableProcessorRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EnableProcessorRequest message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.EnableProcessorRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EnableProcessorRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an EnableProcessorRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.EnableProcessorRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.EnableProcessorRequest} EnableProcessorRequest
                         */
                        EnableProcessorRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.EnableProcessorRequest)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.EnableProcessorRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EnableProcessorRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.EnableProcessorRequest
                         * @static
                         * @param {google.cloud.documentai.v1.EnableProcessorRequest} message EnableProcessorRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EnableProcessorRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this EnableProcessorRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.EnableProcessorRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EnableProcessorRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EnableProcessorRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.EnableProcessorRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EnableProcessorRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.EnableProcessorRequest";
                        };
    
                        return EnableProcessorRequest;
                    })();
    
                    v1.EnableProcessorResponse = (function() {
    
                        /**
                         * Properties of an EnableProcessorResponse.
                         * @memberof google.cloud.documentai.v1
                         * @interface IEnableProcessorResponse
                         */
    
                        /**
                         * Constructs a new EnableProcessorResponse.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents an EnableProcessorResponse.
                         * @implements IEnableProcessorResponse
                         * @constructor
                         * @param {google.cloud.documentai.v1.IEnableProcessorResponse=} [properties] Properties to set
                         */
                        function EnableProcessorResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new EnableProcessorResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.EnableProcessorResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IEnableProcessorResponse=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.EnableProcessorResponse} EnableProcessorResponse instance
                         */
                        EnableProcessorResponse.create = function create(properties) {
                            return new EnableProcessorResponse(properties);
                        };
    
                        /**
                         * Encodes the specified EnableProcessorResponse message. Does not implicitly {@link google.cloud.documentai.v1.EnableProcessorResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.EnableProcessorResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IEnableProcessorResponse} message EnableProcessorResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EnableProcessorResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EnableProcessorResponse message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.EnableProcessorResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.EnableProcessorResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IEnableProcessorResponse} message EnableProcessorResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EnableProcessorResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EnableProcessorResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.EnableProcessorResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.EnableProcessorResponse} EnableProcessorResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EnableProcessorResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.EnableProcessorResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EnableProcessorResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.EnableProcessorResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.EnableProcessorResponse} EnableProcessorResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EnableProcessorResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EnableProcessorResponse message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.EnableProcessorResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EnableProcessorResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates an EnableProcessorResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.EnableProcessorResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.EnableProcessorResponse} EnableProcessorResponse
                         */
                        EnableProcessorResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.EnableProcessorResponse)
                                return object;
                            return new $root.google.cloud.documentai.v1.EnableProcessorResponse();
                        };
    
                        /**
                         * Creates a plain object from an EnableProcessorResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.EnableProcessorResponse
                         * @static
                         * @param {google.cloud.documentai.v1.EnableProcessorResponse} message EnableProcessorResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EnableProcessorResponse.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this EnableProcessorResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.EnableProcessorResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EnableProcessorResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EnableProcessorResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.EnableProcessorResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EnableProcessorResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.EnableProcessorResponse";
                        };
    
                        return EnableProcessorResponse;
                    })();
    
                    v1.EnableProcessorMetadata = (function() {
    
                        /**
                         * Properties of an EnableProcessorMetadata.
                         * @memberof google.cloud.documentai.v1
                         * @interface IEnableProcessorMetadata
                         * @property {google.cloud.documentai.v1.ICommonOperationMetadata|null} [commonMetadata] EnableProcessorMetadata commonMetadata
                         */
    
                        /**
                         * Constructs a new EnableProcessorMetadata.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents an EnableProcessorMetadata.
                         * @implements IEnableProcessorMetadata
                         * @constructor
                         * @param {google.cloud.documentai.v1.IEnableProcessorMetadata=} [properties] Properties to set
                         */
                        function EnableProcessorMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EnableProcessorMetadata commonMetadata.
                         * @member {google.cloud.documentai.v1.ICommonOperationMetadata|null|undefined} commonMetadata
                         * @memberof google.cloud.documentai.v1.EnableProcessorMetadata
                         * @instance
                         */
                        EnableProcessorMetadata.prototype.commonMetadata = null;
    
                        /**
                         * Creates a new EnableProcessorMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.EnableProcessorMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.IEnableProcessorMetadata=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.EnableProcessorMetadata} EnableProcessorMetadata instance
                         */
                        EnableProcessorMetadata.create = function create(properties) {
                            return new EnableProcessorMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified EnableProcessorMetadata message. Does not implicitly {@link google.cloud.documentai.v1.EnableProcessorMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.EnableProcessorMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.IEnableProcessorMetadata} message EnableProcessorMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EnableProcessorMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.commonMetadata != null && Object.hasOwnProperty.call(message, "commonMetadata"))
                                $root.google.cloud.documentai.v1.CommonOperationMetadata.encode(message.commonMetadata, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EnableProcessorMetadata message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.EnableProcessorMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.EnableProcessorMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.IEnableProcessorMetadata} message EnableProcessorMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EnableProcessorMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EnableProcessorMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.EnableProcessorMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.EnableProcessorMetadata} EnableProcessorMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EnableProcessorMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.EnableProcessorMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 5: {
                                        message.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EnableProcessorMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.EnableProcessorMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.EnableProcessorMetadata} EnableProcessorMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EnableProcessorMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EnableProcessorMetadata message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.EnableProcessorMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EnableProcessorMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.commonMetadata != null && message.hasOwnProperty("commonMetadata")) {
                                var error = $root.google.cloud.documentai.v1.CommonOperationMetadata.verify(message.commonMetadata);
                                if (error)
                                    return "commonMetadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an EnableProcessorMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.EnableProcessorMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.EnableProcessorMetadata} EnableProcessorMetadata
                         */
                        EnableProcessorMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.EnableProcessorMetadata)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.EnableProcessorMetadata();
                            if (object.commonMetadata != null) {
                                if (typeof object.commonMetadata !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.EnableProcessorMetadata.commonMetadata: object expected");
                                message.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.fromObject(object.commonMetadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EnableProcessorMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.EnableProcessorMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.EnableProcessorMetadata} message EnableProcessorMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EnableProcessorMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.commonMetadata = null;
                            if (message.commonMetadata != null && message.hasOwnProperty("commonMetadata"))
                                object.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.toObject(message.commonMetadata, options);
                            return object;
                        };
    
                        /**
                         * Converts this EnableProcessorMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.EnableProcessorMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EnableProcessorMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EnableProcessorMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.EnableProcessorMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EnableProcessorMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.EnableProcessorMetadata";
                        };
    
                        return EnableProcessorMetadata;
                    })();
    
                    v1.DisableProcessorRequest = (function() {
    
                        /**
                         * Properties of a DisableProcessorRequest.
                         * @memberof google.cloud.documentai.v1
                         * @interface IDisableProcessorRequest
                         * @property {string|null} [name] DisableProcessorRequest name
                         */
    
                        /**
                         * Constructs a new DisableProcessorRequest.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a DisableProcessorRequest.
                         * @implements IDisableProcessorRequest
                         * @constructor
                         * @param {google.cloud.documentai.v1.IDisableProcessorRequest=} [properties] Properties to set
                         */
                        function DisableProcessorRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DisableProcessorRequest name.
                         * @member {string} name
                         * @memberof google.cloud.documentai.v1.DisableProcessorRequest
                         * @instance
                         */
                        DisableProcessorRequest.prototype.name = "";
    
                        /**
                         * Creates a new DisableProcessorRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.DisableProcessorRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IDisableProcessorRequest=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.DisableProcessorRequest} DisableProcessorRequest instance
                         */
                        DisableProcessorRequest.create = function create(properties) {
                            return new DisableProcessorRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DisableProcessorRequest message. Does not implicitly {@link google.cloud.documentai.v1.DisableProcessorRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.DisableProcessorRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IDisableProcessorRequest} message DisableProcessorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DisableProcessorRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DisableProcessorRequest message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.DisableProcessorRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.DisableProcessorRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IDisableProcessorRequest} message DisableProcessorRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DisableProcessorRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DisableProcessorRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.DisableProcessorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.DisableProcessorRequest} DisableProcessorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DisableProcessorRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.DisableProcessorRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DisableProcessorRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.DisableProcessorRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.DisableProcessorRequest} DisableProcessorRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DisableProcessorRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DisableProcessorRequest message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.DisableProcessorRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DisableProcessorRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DisableProcessorRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.DisableProcessorRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.DisableProcessorRequest} DisableProcessorRequest
                         */
                        DisableProcessorRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.DisableProcessorRequest)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.DisableProcessorRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DisableProcessorRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.DisableProcessorRequest
                         * @static
                         * @param {google.cloud.documentai.v1.DisableProcessorRequest} message DisableProcessorRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DisableProcessorRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DisableProcessorRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.DisableProcessorRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DisableProcessorRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DisableProcessorRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.DisableProcessorRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DisableProcessorRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.DisableProcessorRequest";
                        };
    
                        return DisableProcessorRequest;
                    })();
    
                    v1.DisableProcessorResponse = (function() {
    
                        /**
                         * Properties of a DisableProcessorResponse.
                         * @memberof google.cloud.documentai.v1
                         * @interface IDisableProcessorResponse
                         */
    
                        /**
                         * Constructs a new DisableProcessorResponse.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a DisableProcessorResponse.
                         * @implements IDisableProcessorResponse
                         * @constructor
                         * @param {google.cloud.documentai.v1.IDisableProcessorResponse=} [properties] Properties to set
                         */
                        function DisableProcessorResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new DisableProcessorResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.DisableProcessorResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IDisableProcessorResponse=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.DisableProcessorResponse} DisableProcessorResponse instance
                         */
                        DisableProcessorResponse.create = function create(properties) {
                            return new DisableProcessorResponse(properties);
                        };
    
                        /**
                         * Encodes the specified DisableProcessorResponse message. Does not implicitly {@link google.cloud.documentai.v1.DisableProcessorResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.DisableProcessorResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IDisableProcessorResponse} message DisableProcessorResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DisableProcessorResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DisableProcessorResponse message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.DisableProcessorResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.DisableProcessorResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IDisableProcessorResponse} message DisableProcessorResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DisableProcessorResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DisableProcessorResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.DisableProcessorResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.DisableProcessorResponse} DisableProcessorResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DisableProcessorResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.DisableProcessorResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DisableProcessorResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.DisableProcessorResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.DisableProcessorResponse} DisableProcessorResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DisableProcessorResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DisableProcessorResponse message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.DisableProcessorResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DisableProcessorResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a DisableProcessorResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.DisableProcessorResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.DisableProcessorResponse} DisableProcessorResponse
                         */
                        DisableProcessorResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.DisableProcessorResponse)
                                return object;
                            return new $root.google.cloud.documentai.v1.DisableProcessorResponse();
                        };
    
                        /**
                         * Creates a plain object from a DisableProcessorResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.DisableProcessorResponse
                         * @static
                         * @param {google.cloud.documentai.v1.DisableProcessorResponse} message DisableProcessorResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DisableProcessorResponse.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this DisableProcessorResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.DisableProcessorResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DisableProcessorResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DisableProcessorResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.DisableProcessorResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DisableProcessorResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.DisableProcessorResponse";
                        };
    
                        return DisableProcessorResponse;
                    })();
    
                    v1.DisableProcessorMetadata = (function() {
    
                        /**
                         * Properties of a DisableProcessorMetadata.
                         * @memberof google.cloud.documentai.v1
                         * @interface IDisableProcessorMetadata
                         * @property {google.cloud.documentai.v1.ICommonOperationMetadata|null} [commonMetadata] DisableProcessorMetadata commonMetadata
                         */
    
                        /**
                         * Constructs a new DisableProcessorMetadata.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a DisableProcessorMetadata.
                         * @implements IDisableProcessorMetadata
                         * @constructor
                         * @param {google.cloud.documentai.v1.IDisableProcessorMetadata=} [properties] Properties to set
                         */
                        function DisableProcessorMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DisableProcessorMetadata commonMetadata.
                         * @member {google.cloud.documentai.v1.ICommonOperationMetadata|null|undefined} commonMetadata
                         * @memberof google.cloud.documentai.v1.DisableProcessorMetadata
                         * @instance
                         */
                        DisableProcessorMetadata.prototype.commonMetadata = null;
    
                        /**
                         * Creates a new DisableProcessorMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.DisableProcessorMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.IDisableProcessorMetadata=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.DisableProcessorMetadata} DisableProcessorMetadata instance
                         */
                        DisableProcessorMetadata.create = function create(properties) {
                            return new DisableProcessorMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified DisableProcessorMetadata message. Does not implicitly {@link google.cloud.documentai.v1.DisableProcessorMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.DisableProcessorMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.IDisableProcessorMetadata} message DisableProcessorMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DisableProcessorMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.commonMetadata != null && Object.hasOwnProperty.call(message, "commonMetadata"))
                                $root.google.cloud.documentai.v1.CommonOperationMetadata.encode(message.commonMetadata, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DisableProcessorMetadata message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.DisableProcessorMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.DisableProcessorMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.IDisableProcessorMetadata} message DisableProcessorMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DisableProcessorMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DisableProcessorMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.DisableProcessorMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.DisableProcessorMetadata} DisableProcessorMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DisableProcessorMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.DisableProcessorMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 5: {
                                        message.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DisableProcessorMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.DisableProcessorMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.DisableProcessorMetadata} DisableProcessorMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DisableProcessorMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DisableProcessorMetadata message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.DisableProcessorMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DisableProcessorMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.commonMetadata != null && message.hasOwnProperty("commonMetadata")) {
                                var error = $root.google.cloud.documentai.v1.CommonOperationMetadata.verify(message.commonMetadata);
                                if (error)
                                    return "commonMetadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DisableProcessorMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.DisableProcessorMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.DisableProcessorMetadata} DisableProcessorMetadata
                         */
                        DisableProcessorMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.DisableProcessorMetadata)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.DisableProcessorMetadata();
                            if (object.commonMetadata != null) {
                                if (typeof object.commonMetadata !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.DisableProcessorMetadata.commonMetadata: object expected");
                                message.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.fromObject(object.commonMetadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DisableProcessorMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.DisableProcessorMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.DisableProcessorMetadata} message DisableProcessorMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DisableProcessorMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.commonMetadata = null;
                            if (message.commonMetadata != null && message.hasOwnProperty("commonMetadata"))
                                object.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.toObject(message.commonMetadata, options);
                            return object;
                        };
    
                        /**
                         * Converts this DisableProcessorMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.DisableProcessorMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DisableProcessorMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DisableProcessorMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.DisableProcessorMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DisableProcessorMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.DisableProcessorMetadata";
                        };
    
                        return DisableProcessorMetadata;
                    })();
    
                    v1.SetDefaultProcessorVersionRequest = (function() {
    
                        /**
                         * Properties of a SetDefaultProcessorVersionRequest.
                         * @memberof google.cloud.documentai.v1
                         * @interface ISetDefaultProcessorVersionRequest
                         * @property {string|null} [processor] SetDefaultProcessorVersionRequest processor
                         * @property {string|null} [defaultProcessorVersion] SetDefaultProcessorVersionRequest defaultProcessorVersion
                         */
    
                        /**
                         * Constructs a new SetDefaultProcessorVersionRequest.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a SetDefaultProcessorVersionRequest.
                         * @implements ISetDefaultProcessorVersionRequest
                         * @constructor
                         * @param {google.cloud.documentai.v1.ISetDefaultProcessorVersionRequest=} [properties] Properties to set
                         */
                        function SetDefaultProcessorVersionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SetDefaultProcessorVersionRequest processor.
                         * @member {string} processor
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionRequest
                         * @instance
                         */
                        SetDefaultProcessorVersionRequest.prototype.processor = "";
    
                        /**
                         * SetDefaultProcessorVersionRequest defaultProcessorVersion.
                         * @member {string} defaultProcessorVersion
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionRequest
                         * @instance
                         */
                        SetDefaultProcessorVersionRequest.prototype.defaultProcessorVersion = "";
    
                        /**
                         * Creates a new SetDefaultProcessorVersionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionRequest
                         * @static
                         * @param {google.cloud.documentai.v1.ISetDefaultProcessorVersionRequest=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.SetDefaultProcessorVersionRequest} SetDefaultProcessorVersionRequest instance
                         */
                        SetDefaultProcessorVersionRequest.create = function create(properties) {
                            return new SetDefaultProcessorVersionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SetDefaultProcessorVersionRequest message. Does not implicitly {@link google.cloud.documentai.v1.SetDefaultProcessorVersionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionRequest
                         * @static
                         * @param {google.cloud.documentai.v1.ISetDefaultProcessorVersionRequest} message SetDefaultProcessorVersionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SetDefaultProcessorVersionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.processor != null && Object.hasOwnProperty.call(message, "processor"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.processor);
                            if (message.defaultProcessorVersion != null && Object.hasOwnProperty.call(message, "defaultProcessorVersion"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.defaultProcessorVersion);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SetDefaultProcessorVersionRequest message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.SetDefaultProcessorVersionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionRequest
                         * @static
                         * @param {google.cloud.documentai.v1.ISetDefaultProcessorVersionRequest} message SetDefaultProcessorVersionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SetDefaultProcessorVersionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SetDefaultProcessorVersionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.SetDefaultProcessorVersionRequest} SetDefaultProcessorVersionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SetDefaultProcessorVersionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.SetDefaultProcessorVersionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.processor = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.defaultProcessorVersion = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SetDefaultProcessorVersionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.SetDefaultProcessorVersionRequest} SetDefaultProcessorVersionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SetDefaultProcessorVersionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SetDefaultProcessorVersionRequest message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SetDefaultProcessorVersionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.processor != null && message.hasOwnProperty("processor"))
                                if (!$util.isString(message.processor))
                                    return "processor: string expected";
                            if (message.defaultProcessorVersion != null && message.hasOwnProperty("defaultProcessorVersion"))
                                if (!$util.isString(message.defaultProcessorVersion))
                                    return "defaultProcessorVersion: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SetDefaultProcessorVersionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.SetDefaultProcessorVersionRequest} SetDefaultProcessorVersionRequest
                         */
                        SetDefaultProcessorVersionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.SetDefaultProcessorVersionRequest)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.SetDefaultProcessorVersionRequest();
                            if (object.processor != null)
                                message.processor = String(object.processor);
                            if (object.defaultProcessorVersion != null)
                                message.defaultProcessorVersion = String(object.defaultProcessorVersion);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SetDefaultProcessorVersionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionRequest
                         * @static
                         * @param {google.cloud.documentai.v1.SetDefaultProcessorVersionRequest} message SetDefaultProcessorVersionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SetDefaultProcessorVersionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.processor = "";
                                object.defaultProcessorVersion = "";
                            }
                            if (message.processor != null && message.hasOwnProperty("processor"))
                                object.processor = message.processor;
                            if (message.defaultProcessorVersion != null && message.hasOwnProperty("defaultProcessorVersion"))
                                object.defaultProcessorVersion = message.defaultProcessorVersion;
                            return object;
                        };
    
                        /**
                         * Converts this SetDefaultProcessorVersionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SetDefaultProcessorVersionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SetDefaultProcessorVersionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SetDefaultProcessorVersionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.SetDefaultProcessorVersionRequest";
                        };
    
                        return SetDefaultProcessorVersionRequest;
                    })();
    
                    v1.SetDefaultProcessorVersionResponse = (function() {
    
                        /**
                         * Properties of a SetDefaultProcessorVersionResponse.
                         * @memberof google.cloud.documentai.v1
                         * @interface ISetDefaultProcessorVersionResponse
                         */
    
                        /**
                         * Constructs a new SetDefaultProcessorVersionResponse.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a SetDefaultProcessorVersionResponse.
                         * @implements ISetDefaultProcessorVersionResponse
                         * @constructor
                         * @param {google.cloud.documentai.v1.ISetDefaultProcessorVersionResponse=} [properties] Properties to set
                         */
                        function SetDefaultProcessorVersionResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new SetDefaultProcessorVersionResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionResponse
                         * @static
                         * @param {google.cloud.documentai.v1.ISetDefaultProcessorVersionResponse=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.SetDefaultProcessorVersionResponse} SetDefaultProcessorVersionResponse instance
                         */
                        SetDefaultProcessorVersionResponse.create = function create(properties) {
                            return new SetDefaultProcessorVersionResponse(properties);
                        };
    
                        /**
                         * Encodes the specified SetDefaultProcessorVersionResponse message. Does not implicitly {@link google.cloud.documentai.v1.SetDefaultProcessorVersionResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionResponse
                         * @static
                         * @param {google.cloud.documentai.v1.ISetDefaultProcessorVersionResponse} message SetDefaultProcessorVersionResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SetDefaultProcessorVersionResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SetDefaultProcessorVersionResponse message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.SetDefaultProcessorVersionResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionResponse
                         * @static
                         * @param {google.cloud.documentai.v1.ISetDefaultProcessorVersionResponse} message SetDefaultProcessorVersionResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SetDefaultProcessorVersionResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SetDefaultProcessorVersionResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.SetDefaultProcessorVersionResponse} SetDefaultProcessorVersionResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SetDefaultProcessorVersionResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.SetDefaultProcessorVersionResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SetDefaultProcessorVersionResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.SetDefaultProcessorVersionResponse} SetDefaultProcessorVersionResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SetDefaultProcessorVersionResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SetDefaultProcessorVersionResponse message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SetDefaultProcessorVersionResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a SetDefaultProcessorVersionResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.SetDefaultProcessorVersionResponse} SetDefaultProcessorVersionResponse
                         */
                        SetDefaultProcessorVersionResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.SetDefaultProcessorVersionResponse)
                                return object;
                            return new $root.google.cloud.documentai.v1.SetDefaultProcessorVersionResponse();
                        };
    
                        /**
                         * Creates a plain object from a SetDefaultProcessorVersionResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionResponse
                         * @static
                         * @param {google.cloud.documentai.v1.SetDefaultProcessorVersionResponse} message SetDefaultProcessorVersionResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SetDefaultProcessorVersionResponse.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this SetDefaultProcessorVersionResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SetDefaultProcessorVersionResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SetDefaultProcessorVersionResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SetDefaultProcessorVersionResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.SetDefaultProcessorVersionResponse";
                        };
    
                        return SetDefaultProcessorVersionResponse;
                    })();
    
                    v1.SetDefaultProcessorVersionMetadata = (function() {
    
                        /**
                         * Properties of a SetDefaultProcessorVersionMetadata.
                         * @memberof google.cloud.documentai.v1
                         * @interface ISetDefaultProcessorVersionMetadata
                         * @property {google.cloud.documentai.v1.ICommonOperationMetadata|null} [commonMetadata] SetDefaultProcessorVersionMetadata commonMetadata
                         */
    
                        /**
                         * Constructs a new SetDefaultProcessorVersionMetadata.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a SetDefaultProcessorVersionMetadata.
                         * @implements ISetDefaultProcessorVersionMetadata
                         * @constructor
                         * @param {google.cloud.documentai.v1.ISetDefaultProcessorVersionMetadata=} [properties] Properties to set
                         */
                        function SetDefaultProcessorVersionMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SetDefaultProcessorVersionMetadata commonMetadata.
                         * @member {google.cloud.documentai.v1.ICommonOperationMetadata|null|undefined} commonMetadata
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionMetadata
                         * @instance
                         */
                        SetDefaultProcessorVersionMetadata.prototype.commonMetadata = null;
    
                        /**
                         * Creates a new SetDefaultProcessorVersionMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.ISetDefaultProcessorVersionMetadata=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.SetDefaultProcessorVersionMetadata} SetDefaultProcessorVersionMetadata instance
                         */
                        SetDefaultProcessorVersionMetadata.create = function create(properties) {
                            return new SetDefaultProcessorVersionMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified SetDefaultProcessorVersionMetadata message. Does not implicitly {@link google.cloud.documentai.v1.SetDefaultProcessorVersionMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.ISetDefaultProcessorVersionMetadata} message SetDefaultProcessorVersionMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SetDefaultProcessorVersionMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.commonMetadata != null && Object.hasOwnProperty.call(message, "commonMetadata"))
                                $root.google.cloud.documentai.v1.CommonOperationMetadata.encode(message.commonMetadata, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SetDefaultProcessorVersionMetadata message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.SetDefaultProcessorVersionMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.ISetDefaultProcessorVersionMetadata} message SetDefaultProcessorVersionMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SetDefaultProcessorVersionMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SetDefaultProcessorVersionMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.SetDefaultProcessorVersionMetadata} SetDefaultProcessorVersionMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SetDefaultProcessorVersionMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.SetDefaultProcessorVersionMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SetDefaultProcessorVersionMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.SetDefaultProcessorVersionMetadata} SetDefaultProcessorVersionMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SetDefaultProcessorVersionMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SetDefaultProcessorVersionMetadata message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SetDefaultProcessorVersionMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.commonMetadata != null && message.hasOwnProperty("commonMetadata")) {
                                var error = $root.google.cloud.documentai.v1.CommonOperationMetadata.verify(message.commonMetadata);
                                if (error)
                                    return "commonMetadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SetDefaultProcessorVersionMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.SetDefaultProcessorVersionMetadata} SetDefaultProcessorVersionMetadata
                         */
                        SetDefaultProcessorVersionMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.SetDefaultProcessorVersionMetadata)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.SetDefaultProcessorVersionMetadata();
                            if (object.commonMetadata != null) {
                                if (typeof object.commonMetadata !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.SetDefaultProcessorVersionMetadata.commonMetadata: object expected");
                                message.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.fromObject(object.commonMetadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SetDefaultProcessorVersionMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.SetDefaultProcessorVersionMetadata} message SetDefaultProcessorVersionMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SetDefaultProcessorVersionMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.commonMetadata = null;
                            if (message.commonMetadata != null && message.hasOwnProperty("commonMetadata"))
                                object.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.toObject(message.commonMetadata, options);
                            return object;
                        };
    
                        /**
                         * Converts this SetDefaultProcessorVersionMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SetDefaultProcessorVersionMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SetDefaultProcessorVersionMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.SetDefaultProcessorVersionMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SetDefaultProcessorVersionMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.SetDefaultProcessorVersionMetadata";
                        };
    
                        return SetDefaultProcessorVersionMetadata;
                    })();
    
                    v1.TrainProcessorVersionRequest = (function() {
    
                        /**
                         * Properties of a TrainProcessorVersionRequest.
                         * @memberof google.cloud.documentai.v1
                         * @interface ITrainProcessorVersionRequest
                         * @property {google.cloud.documentai.v1.TrainProcessorVersionRequest.ICustomDocumentExtractionOptions|null} [customDocumentExtractionOptions] TrainProcessorVersionRequest customDocumentExtractionOptions
                         * @property {string|null} [parent] TrainProcessorVersionRequest parent
                         * @property {google.cloud.documentai.v1.IProcessorVersion|null} [processorVersion] TrainProcessorVersionRequest processorVersion
                         * @property {google.cloud.documentai.v1.IDocumentSchema|null} [documentSchema] TrainProcessorVersionRequest documentSchema
                         * @property {google.cloud.documentai.v1.TrainProcessorVersionRequest.IInputData|null} [inputData] TrainProcessorVersionRequest inputData
                         * @property {string|null} [baseProcessorVersion] TrainProcessorVersionRequest baseProcessorVersion
                         */
    
                        /**
                         * Constructs a new TrainProcessorVersionRequest.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a TrainProcessorVersionRequest.
                         * @implements ITrainProcessorVersionRequest
                         * @constructor
                         * @param {google.cloud.documentai.v1.ITrainProcessorVersionRequest=} [properties] Properties to set
                         */
                        function TrainProcessorVersionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TrainProcessorVersionRequest customDocumentExtractionOptions.
                         * @member {google.cloud.documentai.v1.TrainProcessorVersionRequest.ICustomDocumentExtractionOptions|null|undefined} customDocumentExtractionOptions
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest
                         * @instance
                         */
                        TrainProcessorVersionRequest.prototype.customDocumentExtractionOptions = null;
    
                        /**
                         * TrainProcessorVersionRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest
                         * @instance
                         */
                        TrainProcessorVersionRequest.prototype.parent = "";
    
                        /**
                         * TrainProcessorVersionRequest processorVersion.
                         * @member {google.cloud.documentai.v1.IProcessorVersion|null|undefined} processorVersion
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest
                         * @instance
                         */
                        TrainProcessorVersionRequest.prototype.processorVersion = null;
    
                        /**
                         * TrainProcessorVersionRequest documentSchema.
                         * @member {google.cloud.documentai.v1.IDocumentSchema|null|undefined} documentSchema
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest
                         * @instance
                         */
                        TrainProcessorVersionRequest.prototype.documentSchema = null;
    
                        /**
                         * TrainProcessorVersionRequest inputData.
                         * @member {google.cloud.documentai.v1.TrainProcessorVersionRequest.IInputData|null|undefined} inputData
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest
                         * @instance
                         */
                        TrainProcessorVersionRequest.prototype.inputData = null;
    
                        /**
                         * TrainProcessorVersionRequest baseProcessorVersion.
                         * @member {string} baseProcessorVersion
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest
                         * @instance
                         */
                        TrainProcessorVersionRequest.prototype.baseProcessorVersion = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * TrainProcessorVersionRequest processorFlags.
                         * @member {"customDocumentExtractionOptions"|undefined} processorFlags
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest
                         * @instance
                         */
                        Object.defineProperty(TrainProcessorVersionRequest.prototype, "processorFlags", {
                            get: $util.oneOfGetter($oneOfFields = ["customDocumentExtractionOptions"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new TrainProcessorVersionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest
                         * @static
                         * @param {google.cloud.documentai.v1.ITrainProcessorVersionRequest=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.TrainProcessorVersionRequest} TrainProcessorVersionRequest instance
                         */
                        TrainProcessorVersionRequest.create = function create(properties) {
                            return new TrainProcessorVersionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified TrainProcessorVersionRequest message. Does not implicitly {@link google.cloud.documentai.v1.TrainProcessorVersionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest
                         * @static
                         * @param {google.cloud.documentai.v1.ITrainProcessorVersionRequest} message TrainProcessorVersionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TrainProcessorVersionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.processorVersion != null && Object.hasOwnProperty.call(message, "processorVersion"))
                                $root.google.cloud.documentai.v1.ProcessorVersion.encode(message.processorVersion, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.inputData != null && Object.hasOwnProperty.call(message, "inputData"))
                                $root.google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData.encode(message.inputData, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.customDocumentExtractionOptions != null && Object.hasOwnProperty.call(message, "customDocumentExtractionOptions"))
                                $root.google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions.encode(message.customDocumentExtractionOptions, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.baseProcessorVersion != null && Object.hasOwnProperty.call(message, "baseProcessorVersion"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.baseProcessorVersion);
                            if (message.documentSchema != null && Object.hasOwnProperty.call(message, "documentSchema"))
                                $root.google.cloud.documentai.v1.DocumentSchema.encode(message.documentSchema, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TrainProcessorVersionRequest message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.TrainProcessorVersionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest
                         * @static
                         * @param {google.cloud.documentai.v1.ITrainProcessorVersionRequest} message TrainProcessorVersionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TrainProcessorVersionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TrainProcessorVersionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.TrainProcessorVersionRequest} TrainProcessorVersionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TrainProcessorVersionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.TrainProcessorVersionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 5: {
                                        message.customDocumentExtractionOptions = $root.google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.processorVersion = $root.google.cloud.documentai.v1.ProcessorVersion.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.documentSchema = $root.google.cloud.documentai.v1.DocumentSchema.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.inputData = $root.google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.baseProcessorVersion = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TrainProcessorVersionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.TrainProcessorVersionRequest} TrainProcessorVersionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TrainProcessorVersionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TrainProcessorVersionRequest message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TrainProcessorVersionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.customDocumentExtractionOptions != null && message.hasOwnProperty("customDocumentExtractionOptions")) {
                                properties.processorFlags = 1;
                                {
                                    var error = $root.google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions.verify(message.customDocumentExtractionOptions);
                                    if (error)
                                        return "customDocumentExtractionOptions." + error;
                                }
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.processorVersion != null && message.hasOwnProperty("processorVersion")) {
                                var error = $root.google.cloud.documentai.v1.ProcessorVersion.verify(message.processorVersion);
                                if (error)
                                    return "processorVersion." + error;
                            }
                            if (message.documentSchema != null && message.hasOwnProperty("documentSchema")) {
                                var error = $root.google.cloud.documentai.v1.DocumentSchema.verify(message.documentSchema);
                                if (error)
                                    return "documentSchema." + error;
                            }
                            if (message.inputData != null && message.hasOwnProperty("inputData")) {
                                var error = $root.google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData.verify(message.inputData);
                                if (error)
                                    return "inputData." + error;
                            }
                            if (message.baseProcessorVersion != null && message.hasOwnProperty("baseProcessorVersion"))
                                if (!$util.isString(message.baseProcessorVersion))
                                    return "baseProcessorVersion: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a TrainProcessorVersionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.TrainProcessorVersionRequest} TrainProcessorVersionRequest
                         */
                        TrainProcessorVersionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.TrainProcessorVersionRequest)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.TrainProcessorVersionRequest();
                            if (object.customDocumentExtractionOptions != null) {
                                if (typeof object.customDocumentExtractionOptions !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.TrainProcessorVersionRequest.customDocumentExtractionOptions: object expected");
                                message.customDocumentExtractionOptions = $root.google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions.fromObject(object.customDocumentExtractionOptions);
                            }
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.processorVersion != null) {
                                if (typeof object.processorVersion !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.TrainProcessorVersionRequest.processorVersion: object expected");
                                message.processorVersion = $root.google.cloud.documentai.v1.ProcessorVersion.fromObject(object.processorVersion);
                            }
                            if (object.documentSchema != null) {
                                if (typeof object.documentSchema !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.TrainProcessorVersionRequest.documentSchema: object expected");
                                message.documentSchema = $root.google.cloud.documentai.v1.DocumentSchema.fromObject(object.documentSchema);
                            }
                            if (object.inputData != null) {
                                if (typeof object.inputData !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.TrainProcessorVersionRequest.inputData: object expected");
                                message.inputData = $root.google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData.fromObject(object.inputData);
                            }
                            if (object.baseProcessorVersion != null)
                                message.baseProcessorVersion = String(object.baseProcessorVersion);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TrainProcessorVersionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest
                         * @static
                         * @param {google.cloud.documentai.v1.TrainProcessorVersionRequest} message TrainProcessorVersionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TrainProcessorVersionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.processorVersion = null;
                                object.inputData = null;
                                object.baseProcessorVersion = "";
                                object.documentSchema = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.processorVersion != null && message.hasOwnProperty("processorVersion"))
                                object.processorVersion = $root.google.cloud.documentai.v1.ProcessorVersion.toObject(message.processorVersion, options);
                            if (message.inputData != null && message.hasOwnProperty("inputData"))
                                object.inputData = $root.google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData.toObject(message.inputData, options);
                            if (message.customDocumentExtractionOptions != null && message.hasOwnProperty("customDocumentExtractionOptions")) {
                                object.customDocumentExtractionOptions = $root.google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions.toObject(message.customDocumentExtractionOptions, options);
                                if (options.oneofs)
                                    object.processorFlags = "customDocumentExtractionOptions";
                            }
                            if (message.baseProcessorVersion != null && message.hasOwnProperty("baseProcessorVersion"))
                                object.baseProcessorVersion = message.baseProcessorVersion;
                            if (message.documentSchema != null && message.hasOwnProperty("documentSchema"))
                                object.documentSchema = $root.google.cloud.documentai.v1.DocumentSchema.toObject(message.documentSchema, options);
                            return object;
                        };
    
                        /**
                         * Converts this TrainProcessorVersionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TrainProcessorVersionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TrainProcessorVersionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TrainProcessorVersionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.TrainProcessorVersionRequest";
                        };
    
                        TrainProcessorVersionRequest.InputData = (function() {
    
                            /**
                             * Properties of an InputData.
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest
                             * @interface IInputData
                             * @property {google.cloud.documentai.v1.IBatchDocumentsInputConfig|null} [trainingDocuments] InputData trainingDocuments
                             * @property {google.cloud.documentai.v1.IBatchDocumentsInputConfig|null} [testDocuments] InputData testDocuments
                             */
    
                            /**
                             * Constructs a new InputData.
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest
                             * @classdesc Represents an InputData.
                             * @implements IInputData
                             * @constructor
                             * @param {google.cloud.documentai.v1.TrainProcessorVersionRequest.IInputData=} [properties] Properties to set
                             */
                            function InputData(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * InputData trainingDocuments.
                             * @member {google.cloud.documentai.v1.IBatchDocumentsInputConfig|null|undefined} trainingDocuments
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData
                             * @instance
                             */
                            InputData.prototype.trainingDocuments = null;
    
                            /**
                             * InputData testDocuments.
                             * @member {google.cloud.documentai.v1.IBatchDocumentsInputConfig|null|undefined} testDocuments
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData
                             * @instance
                             */
                            InputData.prototype.testDocuments = null;
    
                            /**
                             * Creates a new InputData instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData
                             * @static
                             * @param {google.cloud.documentai.v1.TrainProcessorVersionRequest.IInputData=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData} InputData instance
                             */
                            InputData.create = function create(properties) {
                                return new InputData(properties);
                            };
    
                            /**
                             * Encodes the specified InputData message. Does not implicitly {@link google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData
                             * @static
                             * @param {google.cloud.documentai.v1.TrainProcessorVersionRequest.IInputData} message InputData message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            InputData.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.trainingDocuments != null && Object.hasOwnProperty.call(message, "trainingDocuments"))
                                    $root.google.cloud.documentai.v1.BatchDocumentsInputConfig.encode(message.trainingDocuments, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.testDocuments != null && Object.hasOwnProperty.call(message, "testDocuments"))
                                    $root.google.cloud.documentai.v1.BatchDocumentsInputConfig.encode(message.testDocuments, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified InputData message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData
                             * @static
                             * @param {google.cloud.documentai.v1.TrainProcessorVersionRequest.IInputData} message InputData message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            InputData.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an InputData message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData} InputData
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            InputData.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 3: {
                                            message.trainingDocuments = $root.google.cloud.documentai.v1.BatchDocumentsInputConfig.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.testDocuments = $root.google.cloud.documentai.v1.BatchDocumentsInputConfig.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an InputData message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData} InputData
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            InputData.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an InputData message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            InputData.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.trainingDocuments != null && message.hasOwnProperty("trainingDocuments")) {
                                    var error = $root.google.cloud.documentai.v1.BatchDocumentsInputConfig.verify(message.trainingDocuments);
                                    if (error)
                                        return "trainingDocuments." + error;
                                }
                                if (message.testDocuments != null && message.hasOwnProperty("testDocuments")) {
                                    var error = $root.google.cloud.documentai.v1.BatchDocumentsInputConfig.verify(message.testDocuments);
                                    if (error)
                                        return "testDocuments." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates an InputData message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData} InputData
                             */
                            InputData.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData();
                                if (object.trainingDocuments != null) {
                                    if (typeof object.trainingDocuments !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData.trainingDocuments: object expected");
                                    message.trainingDocuments = $root.google.cloud.documentai.v1.BatchDocumentsInputConfig.fromObject(object.trainingDocuments);
                                }
                                if (object.testDocuments != null) {
                                    if (typeof object.testDocuments !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData.testDocuments: object expected");
                                    message.testDocuments = $root.google.cloud.documentai.v1.BatchDocumentsInputConfig.fromObject(object.testDocuments);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an InputData message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData
                             * @static
                             * @param {google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData} message InputData
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            InputData.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.trainingDocuments = null;
                                    object.testDocuments = null;
                                }
                                if (message.trainingDocuments != null && message.hasOwnProperty("trainingDocuments"))
                                    object.trainingDocuments = $root.google.cloud.documentai.v1.BatchDocumentsInputConfig.toObject(message.trainingDocuments, options);
                                if (message.testDocuments != null && message.hasOwnProperty("testDocuments"))
                                    object.testDocuments = $root.google.cloud.documentai.v1.BatchDocumentsInputConfig.toObject(message.testDocuments, options);
                                return object;
                            };
    
                            /**
                             * Converts this InputData to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            InputData.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for InputData
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            InputData.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.TrainProcessorVersionRequest.InputData";
                            };
    
                            return InputData;
                        })();
    
                        TrainProcessorVersionRequest.CustomDocumentExtractionOptions = (function() {
    
                            /**
                             * Properties of a CustomDocumentExtractionOptions.
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest
                             * @interface ICustomDocumentExtractionOptions
                             * @property {google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions.TrainingMethod|null} [trainingMethod] CustomDocumentExtractionOptions trainingMethod
                             */
    
                            /**
                             * Constructs a new CustomDocumentExtractionOptions.
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest
                             * @classdesc Represents a CustomDocumentExtractionOptions.
                             * @implements ICustomDocumentExtractionOptions
                             * @constructor
                             * @param {google.cloud.documentai.v1.TrainProcessorVersionRequest.ICustomDocumentExtractionOptions=} [properties] Properties to set
                             */
                            function CustomDocumentExtractionOptions(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CustomDocumentExtractionOptions trainingMethod.
                             * @member {google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions.TrainingMethod} trainingMethod
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions
                             * @instance
                             */
                            CustomDocumentExtractionOptions.prototype.trainingMethod = 0;
    
                            /**
                             * Creates a new CustomDocumentExtractionOptions instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions
                             * @static
                             * @param {google.cloud.documentai.v1.TrainProcessorVersionRequest.ICustomDocumentExtractionOptions=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions} CustomDocumentExtractionOptions instance
                             */
                            CustomDocumentExtractionOptions.create = function create(properties) {
                                return new CustomDocumentExtractionOptions(properties);
                            };
    
                            /**
                             * Encodes the specified CustomDocumentExtractionOptions message. Does not implicitly {@link google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions
                             * @static
                             * @param {google.cloud.documentai.v1.TrainProcessorVersionRequest.ICustomDocumentExtractionOptions} message CustomDocumentExtractionOptions message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CustomDocumentExtractionOptions.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.trainingMethod != null && Object.hasOwnProperty.call(message, "trainingMethod"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.trainingMethod);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CustomDocumentExtractionOptions message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions
                             * @static
                             * @param {google.cloud.documentai.v1.TrainProcessorVersionRequest.ICustomDocumentExtractionOptions} message CustomDocumentExtractionOptions message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CustomDocumentExtractionOptions.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CustomDocumentExtractionOptions message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions} CustomDocumentExtractionOptions
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CustomDocumentExtractionOptions.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 3: {
                                            message.trainingMethod = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CustomDocumentExtractionOptions message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions} CustomDocumentExtractionOptions
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CustomDocumentExtractionOptions.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CustomDocumentExtractionOptions message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CustomDocumentExtractionOptions.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.trainingMethod != null && message.hasOwnProperty("trainingMethod"))
                                    switch (message.trainingMethod) {
                                    default:
                                        return "trainingMethod: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a CustomDocumentExtractionOptions message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions} CustomDocumentExtractionOptions
                             */
                            CustomDocumentExtractionOptions.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions();
                                switch (object.trainingMethod) {
                                default:
                                    if (typeof object.trainingMethod === "number") {
                                        message.trainingMethod = object.trainingMethod;
                                        break;
                                    }
                                    break;
                                case "TRAINING_METHOD_UNSPECIFIED":
                                case 0:
                                    message.trainingMethod = 0;
                                    break;
                                case "MODEL_BASED":
                                case 1:
                                    message.trainingMethod = 1;
                                    break;
                                case "TEMPLATE_BASED":
                                case 2:
                                    message.trainingMethod = 2;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CustomDocumentExtractionOptions message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions
                             * @static
                             * @param {google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions} message CustomDocumentExtractionOptions
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CustomDocumentExtractionOptions.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.trainingMethod = options.enums === String ? "TRAINING_METHOD_UNSPECIFIED" : 0;
                                if (message.trainingMethod != null && message.hasOwnProperty("trainingMethod"))
                                    object.trainingMethod = options.enums === String ? $root.google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions.TrainingMethod[message.trainingMethod] === undefined ? message.trainingMethod : $root.google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions.TrainingMethod[message.trainingMethod] : message.trainingMethod;
                                return object;
                            };
    
                            /**
                             * Converts this CustomDocumentExtractionOptions to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CustomDocumentExtractionOptions.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CustomDocumentExtractionOptions
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CustomDocumentExtractionOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions";
                            };
    
                            /**
                             * TrainingMethod enum.
                             * @name google.cloud.documentai.v1.TrainProcessorVersionRequest.CustomDocumentExtractionOptions.TrainingMethod
                             * @enum {number}
                             * @property {number} TRAINING_METHOD_UNSPECIFIED=0 TRAINING_METHOD_UNSPECIFIED value
                             * @property {number} MODEL_BASED=1 MODEL_BASED value
                             * @property {number} TEMPLATE_BASED=2 TEMPLATE_BASED value
                             */
                            CustomDocumentExtractionOptions.TrainingMethod = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "TRAINING_METHOD_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "MODEL_BASED"] = 1;
                                values[valuesById[2] = "TEMPLATE_BASED"] = 2;
                                return values;
                            })();
    
                            return CustomDocumentExtractionOptions;
                        })();
    
                        return TrainProcessorVersionRequest;
                    })();
    
                    v1.TrainProcessorVersionResponse = (function() {
    
                        /**
                         * Properties of a TrainProcessorVersionResponse.
                         * @memberof google.cloud.documentai.v1
                         * @interface ITrainProcessorVersionResponse
                         * @property {string|null} [processorVersion] TrainProcessorVersionResponse processorVersion
                         */
    
                        /**
                         * Constructs a new TrainProcessorVersionResponse.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a TrainProcessorVersionResponse.
                         * @implements ITrainProcessorVersionResponse
                         * @constructor
                         * @param {google.cloud.documentai.v1.ITrainProcessorVersionResponse=} [properties] Properties to set
                         */
                        function TrainProcessorVersionResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TrainProcessorVersionResponse processorVersion.
                         * @member {string} processorVersion
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionResponse
                         * @instance
                         */
                        TrainProcessorVersionResponse.prototype.processorVersion = "";
    
                        /**
                         * Creates a new TrainProcessorVersionResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionResponse
                         * @static
                         * @param {google.cloud.documentai.v1.ITrainProcessorVersionResponse=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.TrainProcessorVersionResponse} TrainProcessorVersionResponse instance
                         */
                        TrainProcessorVersionResponse.create = function create(properties) {
                            return new TrainProcessorVersionResponse(properties);
                        };
    
                        /**
                         * Encodes the specified TrainProcessorVersionResponse message. Does not implicitly {@link google.cloud.documentai.v1.TrainProcessorVersionResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionResponse
                         * @static
                         * @param {google.cloud.documentai.v1.ITrainProcessorVersionResponse} message TrainProcessorVersionResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TrainProcessorVersionResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.processorVersion != null && Object.hasOwnProperty.call(message, "processorVersion"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.processorVersion);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TrainProcessorVersionResponse message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.TrainProcessorVersionResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionResponse
                         * @static
                         * @param {google.cloud.documentai.v1.ITrainProcessorVersionResponse} message TrainProcessorVersionResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TrainProcessorVersionResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TrainProcessorVersionResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.TrainProcessorVersionResponse} TrainProcessorVersionResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TrainProcessorVersionResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.TrainProcessorVersionResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.processorVersion = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TrainProcessorVersionResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.TrainProcessorVersionResponse} TrainProcessorVersionResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TrainProcessorVersionResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TrainProcessorVersionResponse message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TrainProcessorVersionResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.processorVersion != null && message.hasOwnProperty("processorVersion"))
                                if (!$util.isString(message.processorVersion))
                                    return "processorVersion: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a TrainProcessorVersionResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.TrainProcessorVersionResponse} TrainProcessorVersionResponse
                         */
                        TrainProcessorVersionResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.TrainProcessorVersionResponse)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.TrainProcessorVersionResponse();
                            if (object.processorVersion != null)
                                message.processorVersion = String(object.processorVersion);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TrainProcessorVersionResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionResponse
                         * @static
                         * @param {google.cloud.documentai.v1.TrainProcessorVersionResponse} message TrainProcessorVersionResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TrainProcessorVersionResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.processorVersion = "";
                            if (message.processorVersion != null && message.hasOwnProperty("processorVersion"))
                                object.processorVersion = message.processorVersion;
                            return object;
                        };
    
                        /**
                         * Converts this TrainProcessorVersionResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TrainProcessorVersionResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TrainProcessorVersionResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TrainProcessorVersionResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.TrainProcessorVersionResponse";
                        };
    
                        return TrainProcessorVersionResponse;
                    })();
    
                    v1.TrainProcessorVersionMetadata = (function() {
    
                        /**
                         * Properties of a TrainProcessorVersionMetadata.
                         * @memberof google.cloud.documentai.v1
                         * @interface ITrainProcessorVersionMetadata
                         * @property {google.cloud.documentai.v1.ICommonOperationMetadata|null} [commonMetadata] TrainProcessorVersionMetadata commonMetadata
                         * @property {google.cloud.documentai.v1.TrainProcessorVersionMetadata.IDatasetValidation|null} [trainingDatasetValidation] TrainProcessorVersionMetadata trainingDatasetValidation
                         * @property {google.cloud.documentai.v1.TrainProcessorVersionMetadata.IDatasetValidation|null} [testDatasetValidation] TrainProcessorVersionMetadata testDatasetValidation
                         */
    
                        /**
                         * Constructs a new TrainProcessorVersionMetadata.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a TrainProcessorVersionMetadata.
                         * @implements ITrainProcessorVersionMetadata
                         * @constructor
                         * @param {google.cloud.documentai.v1.ITrainProcessorVersionMetadata=} [properties] Properties to set
                         */
                        function TrainProcessorVersionMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TrainProcessorVersionMetadata commonMetadata.
                         * @member {google.cloud.documentai.v1.ICommonOperationMetadata|null|undefined} commonMetadata
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata
                         * @instance
                         */
                        TrainProcessorVersionMetadata.prototype.commonMetadata = null;
    
                        /**
                         * TrainProcessorVersionMetadata trainingDatasetValidation.
                         * @member {google.cloud.documentai.v1.TrainProcessorVersionMetadata.IDatasetValidation|null|undefined} trainingDatasetValidation
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata
                         * @instance
                         */
                        TrainProcessorVersionMetadata.prototype.trainingDatasetValidation = null;
    
                        /**
                         * TrainProcessorVersionMetadata testDatasetValidation.
                         * @member {google.cloud.documentai.v1.TrainProcessorVersionMetadata.IDatasetValidation|null|undefined} testDatasetValidation
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata
                         * @instance
                         */
                        TrainProcessorVersionMetadata.prototype.testDatasetValidation = null;
    
                        /**
                         * Creates a new TrainProcessorVersionMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.ITrainProcessorVersionMetadata=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.TrainProcessorVersionMetadata} TrainProcessorVersionMetadata instance
                         */
                        TrainProcessorVersionMetadata.create = function create(properties) {
                            return new TrainProcessorVersionMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified TrainProcessorVersionMetadata message. Does not implicitly {@link google.cloud.documentai.v1.TrainProcessorVersionMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.ITrainProcessorVersionMetadata} message TrainProcessorVersionMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TrainProcessorVersionMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.commonMetadata != null && Object.hasOwnProperty.call(message, "commonMetadata"))
                                $root.google.cloud.documentai.v1.CommonOperationMetadata.encode(message.commonMetadata, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.trainingDatasetValidation != null && Object.hasOwnProperty.call(message, "trainingDatasetValidation"))
                                $root.google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation.encode(message.trainingDatasetValidation, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.testDatasetValidation != null && Object.hasOwnProperty.call(message, "testDatasetValidation"))
                                $root.google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation.encode(message.testDatasetValidation, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TrainProcessorVersionMetadata message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.TrainProcessorVersionMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.ITrainProcessorVersionMetadata} message TrainProcessorVersionMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TrainProcessorVersionMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TrainProcessorVersionMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.TrainProcessorVersionMetadata} TrainProcessorVersionMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TrainProcessorVersionMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.TrainProcessorVersionMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.trainingDatasetValidation = $root.google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.testDatasetValidation = $root.google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TrainProcessorVersionMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.TrainProcessorVersionMetadata} TrainProcessorVersionMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TrainProcessorVersionMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TrainProcessorVersionMetadata message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TrainProcessorVersionMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.commonMetadata != null && message.hasOwnProperty("commonMetadata")) {
                                var error = $root.google.cloud.documentai.v1.CommonOperationMetadata.verify(message.commonMetadata);
                                if (error)
                                    return "commonMetadata." + error;
                            }
                            if (message.trainingDatasetValidation != null && message.hasOwnProperty("trainingDatasetValidation")) {
                                var error = $root.google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation.verify(message.trainingDatasetValidation);
                                if (error)
                                    return "trainingDatasetValidation." + error;
                            }
                            if (message.testDatasetValidation != null && message.hasOwnProperty("testDatasetValidation")) {
                                var error = $root.google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation.verify(message.testDatasetValidation);
                                if (error)
                                    return "testDatasetValidation." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a TrainProcessorVersionMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.TrainProcessorVersionMetadata} TrainProcessorVersionMetadata
                         */
                        TrainProcessorVersionMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.TrainProcessorVersionMetadata)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.TrainProcessorVersionMetadata();
                            if (object.commonMetadata != null) {
                                if (typeof object.commonMetadata !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.TrainProcessorVersionMetadata.commonMetadata: object expected");
                                message.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.fromObject(object.commonMetadata);
                            }
                            if (object.trainingDatasetValidation != null) {
                                if (typeof object.trainingDatasetValidation !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.TrainProcessorVersionMetadata.trainingDatasetValidation: object expected");
                                message.trainingDatasetValidation = $root.google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation.fromObject(object.trainingDatasetValidation);
                            }
                            if (object.testDatasetValidation != null) {
                                if (typeof object.testDatasetValidation !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.TrainProcessorVersionMetadata.testDatasetValidation: object expected");
                                message.testDatasetValidation = $root.google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation.fromObject(object.testDatasetValidation);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TrainProcessorVersionMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.TrainProcessorVersionMetadata} message TrainProcessorVersionMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TrainProcessorVersionMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.commonMetadata = null;
                                object.trainingDatasetValidation = null;
                                object.testDatasetValidation = null;
                            }
                            if (message.commonMetadata != null && message.hasOwnProperty("commonMetadata"))
                                object.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.toObject(message.commonMetadata, options);
                            if (message.trainingDatasetValidation != null && message.hasOwnProperty("trainingDatasetValidation"))
                                object.trainingDatasetValidation = $root.google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation.toObject(message.trainingDatasetValidation, options);
                            if (message.testDatasetValidation != null && message.hasOwnProperty("testDatasetValidation"))
                                object.testDatasetValidation = $root.google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation.toObject(message.testDatasetValidation, options);
                            return object;
                        };
    
                        /**
                         * Converts this TrainProcessorVersionMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TrainProcessorVersionMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TrainProcessorVersionMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TrainProcessorVersionMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.TrainProcessorVersionMetadata";
                        };
    
                        TrainProcessorVersionMetadata.DatasetValidation = (function() {
    
                            /**
                             * Properties of a DatasetValidation.
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata
                             * @interface IDatasetValidation
                             * @property {number|null} [documentErrorCount] DatasetValidation documentErrorCount
                             * @property {number|null} [datasetErrorCount] DatasetValidation datasetErrorCount
                             * @property {Array.<google.rpc.IStatus>|null} [documentErrors] DatasetValidation documentErrors
                             * @property {Array.<google.rpc.IStatus>|null} [datasetErrors] DatasetValidation datasetErrors
                             */
    
                            /**
                             * Constructs a new DatasetValidation.
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata
                             * @classdesc Represents a DatasetValidation.
                             * @implements IDatasetValidation
                             * @constructor
                             * @param {google.cloud.documentai.v1.TrainProcessorVersionMetadata.IDatasetValidation=} [properties] Properties to set
                             */
                            function DatasetValidation(properties) {
                                this.documentErrors = [];
                                this.datasetErrors = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * DatasetValidation documentErrorCount.
                             * @member {number} documentErrorCount
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation
                             * @instance
                             */
                            DatasetValidation.prototype.documentErrorCount = 0;
    
                            /**
                             * DatasetValidation datasetErrorCount.
                             * @member {number} datasetErrorCount
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation
                             * @instance
                             */
                            DatasetValidation.prototype.datasetErrorCount = 0;
    
                            /**
                             * DatasetValidation documentErrors.
                             * @member {Array.<google.rpc.IStatus>} documentErrors
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation
                             * @instance
                             */
                            DatasetValidation.prototype.documentErrors = $util.emptyArray;
    
                            /**
                             * DatasetValidation datasetErrors.
                             * @member {Array.<google.rpc.IStatus>} datasetErrors
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation
                             * @instance
                             */
                            DatasetValidation.prototype.datasetErrors = $util.emptyArray;
    
                            /**
                             * Creates a new DatasetValidation instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation
                             * @static
                             * @param {google.cloud.documentai.v1.TrainProcessorVersionMetadata.IDatasetValidation=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation} DatasetValidation instance
                             */
                            DatasetValidation.create = function create(properties) {
                                return new DatasetValidation(properties);
                            };
    
                            /**
                             * Encodes the specified DatasetValidation message. Does not implicitly {@link google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation
                             * @static
                             * @param {google.cloud.documentai.v1.TrainProcessorVersionMetadata.IDatasetValidation} message DatasetValidation message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DatasetValidation.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.documentErrors != null && message.documentErrors.length)
                                    for (var i = 0; i < message.documentErrors.length; ++i)
                                        $root.google.rpc.Status.encode(message.documentErrors[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.datasetErrors != null && message.datasetErrors.length)
                                    for (var i = 0; i < message.datasetErrors.length; ++i)
                                        $root.google.rpc.Status.encode(message.datasetErrors[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.documentErrorCount != null && Object.hasOwnProperty.call(message, "documentErrorCount"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.documentErrorCount);
                                if (message.datasetErrorCount != null && Object.hasOwnProperty.call(message, "datasetErrorCount"))
                                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.datasetErrorCount);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified DatasetValidation message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation
                             * @static
                             * @param {google.cloud.documentai.v1.TrainProcessorVersionMetadata.IDatasetValidation} message DatasetValidation message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DatasetValidation.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a DatasetValidation message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation} DatasetValidation
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DatasetValidation.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 3: {
                                            message.documentErrorCount = reader.int32();
                                            break;
                                        }
                                    case 4: {
                                            message.datasetErrorCount = reader.int32();
                                            break;
                                        }
                                    case 1: {
                                            if (!(message.documentErrors && message.documentErrors.length))
                                                message.documentErrors = [];
                                            message.documentErrors.push($root.google.rpc.Status.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 2: {
                                            if (!(message.datasetErrors && message.datasetErrors.length))
                                                message.datasetErrors = [];
                                            message.datasetErrors.push($root.google.rpc.Status.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a DatasetValidation message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation} DatasetValidation
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DatasetValidation.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a DatasetValidation message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            DatasetValidation.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.documentErrorCount != null && message.hasOwnProperty("documentErrorCount"))
                                    if (!$util.isInteger(message.documentErrorCount))
                                        return "documentErrorCount: integer expected";
                                if (message.datasetErrorCount != null && message.hasOwnProperty("datasetErrorCount"))
                                    if (!$util.isInteger(message.datasetErrorCount))
                                        return "datasetErrorCount: integer expected";
                                if (message.documentErrors != null && message.hasOwnProperty("documentErrors")) {
                                    if (!Array.isArray(message.documentErrors))
                                        return "documentErrors: array expected";
                                    for (var i = 0; i < message.documentErrors.length; ++i) {
                                        var error = $root.google.rpc.Status.verify(message.documentErrors[i]);
                                        if (error)
                                            return "documentErrors." + error;
                                    }
                                }
                                if (message.datasetErrors != null && message.hasOwnProperty("datasetErrors")) {
                                    if (!Array.isArray(message.datasetErrors))
                                        return "datasetErrors: array expected";
                                    for (var i = 0; i < message.datasetErrors.length; ++i) {
                                        var error = $root.google.rpc.Status.verify(message.datasetErrors[i]);
                                        if (error)
                                            return "datasetErrors." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a DatasetValidation message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation} DatasetValidation
                             */
                            DatasetValidation.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation();
                                if (object.documentErrorCount != null)
                                    message.documentErrorCount = object.documentErrorCount | 0;
                                if (object.datasetErrorCount != null)
                                    message.datasetErrorCount = object.datasetErrorCount | 0;
                                if (object.documentErrors) {
                                    if (!Array.isArray(object.documentErrors))
                                        throw TypeError(".google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation.documentErrors: array expected");
                                    message.documentErrors = [];
                                    for (var i = 0; i < object.documentErrors.length; ++i) {
                                        if (typeof object.documentErrors[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation.documentErrors: object expected");
                                        message.documentErrors[i] = $root.google.rpc.Status.fromObject(object.documentErrors[i]);
                                    }
                                }
                                if (object.datasetErrors) {
                                    if (!Array.isArray(object.datasetErrors))
                                        throw TypeError(".google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation.datasetErrors: array expected");
                                    message.datasetErrors = [];
                                    for (var i = 0; i < object.datasetErrors.length; ++i) {
                                        if (typeof object.datasetErrors[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation.datasetErrors: object expected");
                                        message.datasetErrors[i] = $root.google.rpc.Status.fromObject(object.datasetErrors[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a DatasetValidation message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation
                             * @static
                             * @param {google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation} message DatasetValidation
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            DatasetValidation.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.documentErrors = [];
                                    object.datasetErrors = [];
                                }
                                if (options.defaults) {
                                    object.documentErrorCount = 0;
                                    object.datasetErrorCount = 0;
                                }
                                if (message.documentErrors && message.documentErrors.length) {
                                    object.documentErrors = [];
                                    for (var j = 0; j < message.documentErrors.length; ++j)
                                        object.documentErrors[j] = $root.google.rpc.Status.toObject(message.documentErrors[j], options);
                                }
                                if (message.datasetErrors && message.datasetErrors.length) {
                                    object.datasetErrors = [];
                                    for (var j = 0; j < message.datasetErrors.length; ++j)
                                        object.datasetErrors[j] = $root.google.rpc.Status.toObject(message.datasetErrors[j], options);
                                }
                                if (message.documentErrorCount != null && message.hasOwnProperty("documentErrorCount"))
                                    object.documentErrorCount = message.documentErrorCount;
                                if (message.datasetErrorCount != null && message.hasOwnProperty("datasetErrorCount"))
                                    object.datasetErrorCount = message.datasetErrorCount;
                                return object;
                            };
    
                            /**
                             * Converts this DatasetValidation to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            DatasetValidation.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for DatasetValidation
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            DatasetValidation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.TrainProcessorVersionMetadata.DatasetValidation";
                            };
    
                            return DatasetValidation;
                        })();
    
                        return TrainProcessorVersionMetadata;
                    })();
    
                    v1.ReviewDocumentRequest = (function() {
    
                        /**
                         * Properties of a ReviewDocumentRequest.
                         * @memberof google.cloud.documentai.v1
                         * @interface IReviewDocumentRequest
                         * @property {google.cloud.documentai.v1.IDocument|null} [inlineDocument] ReviewDocumentRequest inlineDocument
                         * @property {string|null} [humanReviewConfig] ReviewDocumentRequest humanReviewConfig
                         * @property {boolean|null} [enableSchemaValidation] ReviewDocumentRequest enableSchemaValidation
                         * @property {google.cloud.documentai.v1.ReviewDocumentRequest.Priority|null} [priority] ReviewDocumentRequest priority
                         * @property {google.cloud.documentai.v1.IDocumentSchema|null} [documentSchema] ReviewDocumentRequest documentSchema
                         */
    
                        /**
                         * Constructs a new ReviewDocumentRequest.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a ReviewDocumentRequest.
                         * @implements IReviewDocumentRequest
                         * @constructor
                         * @param {google.cloud.documentai.v1.IReviewDocumentRequest=} [properties] Properties to set
                         */
                        function ReviewDocumentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ReviewDocumentRequest inlineDocument.
                         * @member {google.cloud.documentai.v1.IDocument|null|undefined} inlineDocument
                         * @memberof google.cloud.documentai.v1.ReviewDocumentRequest
                         * @instance
                         */
                        ReviewDocumentRequest.prototype.inlineDocument = null;
    
                        /**
                         * ReviewDocumentRequest humanReviewConfig.
                         * @member {string} humanReviewConfig
                         * @memberof google.cloud.documentai.v1.ReviewDocumentRequest
                         * @instance
                         */
                        ReviewDocumentRequest.prototype.humanReviewConfig = "";
    
                        /**
                         * ReviewDocumentRequest enableSchemaValidation.
                         * @member {boolean} enableSchemaValidation
                         * @memberof google.cloud.documentai.v1.ReviewDocumentRequest
                         * @instance
                         */
                        ReviewDocumentRequest.prototype.enableSchemaValidation = false;
    
                        /**
                         * ReviewDocumentRequest priority.
                         * @member {google.cloud.documentai.v1.ReviewDocumentRequest.Priority} priority
                         * @memberof google.cloud.documentai.v1.ReviewDocumentRequest
                         * @instance
                         */
                        ReviewDocumentRequest.prototype.priority = 0;
    
                        /**
                         * ReviewDocumentRequest documentSchema.
                         * @member {google.cloud.documentai.v1.IDocumentSchema|null|undefined} documentSchema
                         * @memberof google.cloud.documentai.v1.ReviewDocumentRequest
                         * @instance
                         */
                        ReviewDocumentRequest.prototype.documentSchema = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ReviewDocumentRequest source.
                         * @member {"inlineDocument"|undefined} source
                         * @memberof google.cloud.documentai.v1.ReviewDocumentRequest
                         * @instance
                         */
                        Object.defineProperty(ReviewDocumentRequest.prototype, "source", {
                            get: $util.oneOfGetter($oneOfFields = ["inlineDocument"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ReviewDocumentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.ReviewDocumentRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IReviewDocumentRequest=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.ReviewDocumentRequest} ReviewDocumentRequest instance
                         */
                        ReviewDocumentRequest.create = function create(properties) {
                            return new ReviewDocumentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ReviewDocumentRequest message. Does not implicitly {@link google.cloud.documentai.v1.ReviewDocumentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.ReviewDocumentRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IReviewDocumentRequest} message ReviewDocumentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReviewDocumentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.humanReviewConfig != null && Object.hasOwnProperty.call(message, "humanReviewConfig"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.humanReviewConfig);
                            if (message.enableSchemaValidation != null && Object.hasOwnProperty.call(message, "enableSchemaValidation"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.enableSchemaValidation);
                            if (message.inlineDocument != null && Object.hasOwnProperty.call(message, "inlineDocument"))
                                $root.google.cloud.documentai.v1.Document.encode(message.inlineDocument, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.priority != null && Object.hasOwnProperty.call(message, "priority"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.priority);
                            if (message.documentSchema != null && Object.hasOwnProperty.call(message, "documentSchema"))
                                $root.google.cloud.documentai.v1.DocumentSchema.encode(message.documentSchema, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ReviewDocumentRequest message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.ReviewDocumentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.ReviewDocumentRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IReviewDocumentRequest} message ReviewDocumentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReviewDocumentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ReviewDocumentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.ReviewDocumentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.ReviewDocumentRequest} ReviewDocumentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReviewDocumentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.ReviewDocumentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 4: {
                                        message.inlineDocument = $root.google.cloud.documentai.v1.Document.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 1: {
                                        message.humanReviewConfig = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.enableSchemaValidation = reader.bool();
                                        break;
                                    }
                                case 5: {
                                        message.priority = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.documentSchema = $root.google.cloud.documentai.v1.DocumentSchema.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ReviewDocumentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.ReviewDocumentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.ReviewDocumentRequest} ReviewDocumentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReviewDocumentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ReviewDocumentRequest message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.ReviewDocumentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ReviewDocumentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.inlineDocument != null && message.hasOwnProperty("inlineDocument")) {
                                properties.source = 1;
                                {
                                    var error = $root.google.cloud.documentai.v1.Document.verify(message.inlineDocument);
                                    if (error)
                                        return "inlineDocument." + error;
                                }
                            }
                            if (message.humanReviewConfig != null && message.hasOwnProperty("humanReviewConfig"))
                                if (!$util.isString(message.humanReviewConfig))
                                    return "humanReviewConfig: string expected";
                            if (message.enableSchemaValidation != null && message.hasOwnProperty("enableSchemaValidation"))
                                if (typeof message.enableSchemaValidation !== "boolean")
                                    return "enableSchemaValidation: boolean expected";
                            if (message.priority != null && message.hasOwnProperty("priority"))
                                switch (message.priority) {
                                default:
                                    return "priority: enum value expected";
                                case 0:
                                case 1:
                                    break;
                                }
                            if (message.documentSchema != null && message.hasOwnProperty("documentSchema")) {
                                var error = $root.google.cloud.documentai.v1.DocumentSchema.verify(message.documentSchema);
                                if (error)
                                    return "documentSchema." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ReviewDocumentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.ReviewDocumentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.ReviewDocumentRequest} ReviewDocumentRequest
                         */
                        ReviewDocumentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.ReviewDocumentRequest)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.ReviewDocumentRequest();
                            if (object.inlineDocument != null) {
                                if (typeof object.inlineDocument !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.ReviewDocumentRequest.inlineDocument: object expected");
                                message.inlineDocument = $root.google.cloud.documentai.v1.Document.fromObject(object.inlineDocument);
                            }
                            if (object.humanReviewConfig != null)
                                message.humanReviewConfig = String(object.humanReviewConfig);
                            if (object.enableSchemaValidation != null)
                                message.enableSchemaValidation = Boolean(object.enableSchemaValidation);
                            switch (object.priority) {
                            default:
                                if (typeof object.priority === "number") {
                                    message.priority = object.priority;
                                    break;
                                }
                                break;
                            case "DEFAULT":
                            case 0:
                                message.priority = 0;
                                break;
                            case "URGENT":
                            case 1:
                                message.priority = 1;
                                break;
                            }
                            if (object.documentSchema != null) {
                                if (typeof object.documentSchema !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.ReviewDocumentRequest.documentSchema: object expected");
                                message.documentSchema = $root.google.cloud.documentai.v1.DocumentSchema.fromObject(object.documentSchema);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ReviewDocumentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.ReviewDocumentRequest
                         * @static
                         * @param {google.cloud.documentai.v1.ReviewDocumentRequest} message ReviewDocumentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ReviewDocumentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.humanReviewConfig = "";
                                object.enableSchemaValidation = false;
                                object.priority = options.enums === String ? "DEFAULT" : 0;
                                object.documentSchema = null;
                            }
                            if (message.humanReviewConfig != null && message.hasOwnProperty("humanReviewConfig"))
                                object.humanReviewConfig = message.humanReviewConfig;
                            if (message.enableSchemaValidation != null && message.hasOwnProperty("enableSchemaValidation"))
                                object.enableSchemaValidation = message.enableSchemaValidation;
                            if (message.inlineDocument != null && message.hasOwnProperty("inlineDocument")) {
                                object.inlineDocument = $root.google.cloud.documentai.v1.Document.toObject(message.inlineDocument, options);
                                if (options.oneofs)
                                    object.source = "inlineDocument";
                            }
                            if (message.priority != null && message.hasOwnProperty("priority"))
                                object.priority = options.enums === String ? $root.google.cloud.documentai.v1.ReviewDocumentRequest.Priority[message.priority] === undefined ? message.priority : $root.google.cloud.documentai.v1.ReviewDocumentRequest.Priority[message.priority] : message.priority;
                            if (message.documentSchema != null && message.hasOwnProperty("documentSchema"))
                                object.documentSchema = $root.google.cloud.documentai.v1.DocumentSchema.toObject(message.documentSchema, options);
                            return object;
                        };
    
                        /**
                         * Converts this ReviewDocumentRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.ReviewDocumentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ReviewDocumentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ReviewDocumentRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.ReviewDocumentRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ReviewDocumentRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.ReviewDocumentRequest";
                        };
    
                        /**
                         * Priority enum.
                         * @name google.cloud.documentai.v1.ReviewDocumentRequest.Priority
                         * @enum {number}
                         * @property {number} DEFAULT=0 DEFAULT value
                         * @property {number} URGENT=1 URGENT value
                         */
                        ReviewDocumentRequest.Priority = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DEFAULT"] = 0;
                            values[valuesById[1] = "URGENT"] = 1;
                            return values;
                        })();
    
                        return ReviewDocumentRequest;
                    })();
    
                    v1.ReviewDocumentResponse = (function() {
    
                        /**
                         * Properties of a ReviewDocumentResponse.
                         * @memberof google.cloud.documentai.v1
                         * @interface IReviewDocumentResponse
                         * @property {string|null} [gcsDestination] ReviewDocumentResponse gcsDestination
                         * @property {google.cloud.documentai.v1.ReviewDocumentResponse.State|null} [state] ReviewDocumentResponse state
                         * @property {string|null} [rejectionReason] ReviewDocumentResponse rejectionReason
                         */
    
                        /**
                         * Constructs a new ReviewDocumentResponse.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a ReviewDocumentResponse.
                         * @implements IReviewDocumentResponse
                         * @constructor
                         * @param {google.cloud.documentai.v1.IReviewDocumentResponse=} [properties] Properties to set
                         */
                        function ReviewDocumentResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ReviewDocumentResponse gcsDestination.
                         * @member {string} gcsDestination
                         * @memberof google.cloud.documentai.v1.ReviewDocumentResponse
                         * @instance
                         */
                        ReviewDocumentResponse.prototype.gcsDestination = "";
    
                        /**
                         * ReviewDocumentResponse state.
                         * @member {google.cloud.documentai.v1.ReviewDocumentResponse.State} state
                         * @memberof google.cloud.documentai.v1.ReviewDocumentResponse
                         * @instance
                         */
                        ReviewDocumentResponse.prototype.state = 0;
    
                        /**
                         * ReviewDocumentResponse rejectionReason.
                         * @member {string} rejectionReason
                         * @memberof google.cloud.documentai.v1.ReviewDocumentResponse
                         * @instance
                         */
                        ReviewDocumentResponse.prototype.rejectionReason = "";
    
                        /**
                         * Creates a new ReviewDocumentResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.ReviewDocumentResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IReviewDocumentResponse=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.ReviewDocumentResponse} ReviewDocumentResponse instance
                         */
                        ReviewDocumentResponse.create = function create(properties) {
                            return new ReviewDocumentResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ReviewDocumentResponse message. Does not implicitly {@link google.cloud.documentai.v1.ReviewDocumentResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.ReviewDocumentResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IReviewDocumentResponse} message ReviewDocumentResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReviewDocumentResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.gcsDestination != null && Object.hasOwnProperty.call(message, "gcsDestination"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.gcsDestination);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.state);
                            if (message.rejectionReason != null && Object.hasOwnProperty.call(message, "rejectionReason"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.rejectionReason);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ReviewDocumentResponse message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.ReviewDocumentResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.ReviewDocumentResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IReviewDocumentResponse} message ReviewDocumentResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReviewDocumentResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ReviewDocumentResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.ReviewDocumentResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.ReviewDocumentResponse} ReviewDocumentResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReviewDocumentResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.ReviewDocumentResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.gcsDestination = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.rejectionReason = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ReviewDocumentResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.ReviewDocumentResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.ReviewDocumentResponse} ReviewDocumentResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReviewDocumentResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ReviewDocumentResponse message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.ReviewDocumentResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ReviewDocumentResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.gcsDestination != null && message.hasOwnProperty("gcsDestination"))
                                if (!$util.isString(message.gcsDestination))
                                    return "gcsDestination: string expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.rejectionReason != null && message.hasOwnProperty("rejectionReason"))
                                if (!$util.isString(message.rejectionReason))
                                    return "rejectionReason: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ReviewDocumentResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.ReviewDocumentResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.ReviewDocumentResponse} ReviewDocumentResponse
                         */
                        ReviewDocumentResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.ReviewDocumentResponse)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.ReviewDocumentResponse();
                            if (object.gcsDestination != null)
                                message.gcsDestination = String(object.gcsDestination);
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "REJECTED":
                            case 1:
                                message.state = 1;
                                break;
                            case "SUCCEEDED":
                            case 2:
                                message.state = 2;
                                break;
                            }
                            if (object.rejectionReason != null)
                                message.rejectionReason = String(object.rejectionReason);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ReviewDocumentResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.ReviewDocumentResponse
                         * @static
                         * @param {google.cloud.documentai.v1.ReviewDocumentResponse} message ReviewDocumentResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ReviewDocumentResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.gcsDestination = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.rejectionReason = "";
                            }
                            if (message.gcsDestination != null && message.hasOwnProperty("gcsDestination"))
                                object.gcsDestination = message.gcsDestination;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.documentai.v1.ReviewDocumentResponse.State[message.state] === undefined ? message.state : $root.google.cloud.documentai.v1.ReviewDocumentResponse.State[message.state] : message.state;
                            if (message.rejectionReason != null && message.hasOwnProperty("rejectionReason"))
                                object.rejectionReason = message.rejectionReason;
                            return object;
                        };
    
                        /**
                         * Converts this ReviewDocumentResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.ReviewDocumentResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ReviewDocumentResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ReviewDocumentResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.ReviewDocumentResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ReviewDocumentResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.ReviewDocumentResponse";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.documentai.v1.ReviewDocumentResponse.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} REJECTED=1 REJECTED value
                         * @property {number} SUCCEEDED=2 SUCCEEDED value
                         */
                        ReviewDocumentResponse.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "REJECTED"] = 1;
                            values[valuesById[2] = "SUCCEEDED"] = 2;
                            return values;
                        })();
    
                        return ReviewDocumentResponse;
                    })();
    
                    v1.ReviewDocumentOperationMetadata = (function() {
    
                        /**
                         * Properties of a ReviewDocumentOperationMetadata.
                         * @memberof google.cloud.documentai.v1
                         * @interface IReviewDocumentOperationMetadata
                         * @property {google.cloud.documentai.v1.ICommonOperationMetadata|null} [commonMetadata] ReviewDocumentOperationMetadata commonMetadata
                         * @property {string|null} [questionId] ReviewDocumentOperationMetadata questionId
                         */
    
                        /**
                         * Constructs a new ReviewDocumentOperationMetadata.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a ReviewDocumentOperationMetadata.
                         * @implements IReviewDocumentOperationMetadata
                         * @constructor
                         * @param {google.cloud.documentai.v1.IReviewDocumentOperationMetadata=} [properties] Properties to set
                         */
                        function ReviewDocumentOperationMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ReviewDocumentOperationMetadata commonMetadata.
                         * @member {google.cloud.documentai.v1.ICommonOperationMetadata|null|undefined} commonMetadata
                         * @memberof google.cloud.documentai.v1.ReviewDocumentOperationMetadata
                         * @instance
                         */
                        ReviewDocumentOperationMetadata.prototype.commonMetadata = null;
    
                        /**
                         * ReviewDocumentOperationMetadata questionId.
                         * @member {string} questionId
                         * @memberof google.cloud.documentai.v1.ReviewDocumentOperationMetadata
                         * @instance
                         */
                        ReviewDocumentOperationMetadata.prototype.questionId = "";
    
                        /**
                         * Creates a new ReviewDocumentOperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.ReviewDocumentOperationMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.IReviewDocumentOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.ReviewDocumentOperationMetadata} ReviewDocumentOperationMetadata instance
                         */
                        ReviewDocumentOperationMetadata.create = function create(properties) {
                            return new ReviewDocumentOperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified ReviewDocumentOperationMetadata message. Does not implicitly {@link google.cloud.documentai.v1.ReviewDocumentOperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.ReviewDocumentOperationMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.IReviewDocumentOperationMetadata} message ReviewDocumentOperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReviewDocumentOperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.commonMetadata != null && Object.hasOwnProperty.call(message, "commonMetadata"))
                                $root.google.cloud.documentai.v1.CommonOperationMetadata.encode(message.commonMetadata, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.questionId != null && Object.hasOwnProperty.call(message, "questionId"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.questionId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ReviewDocumentOperationMetadata message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.ReviewDocumentOperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.ReviewDocumentOperationMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.IReviewDocumentOperationMetadata} message ReviewDocumentOperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReviewDocumentOperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ReviewDocumentOperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.ReviewDocumentOperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.ReviewDocumentOperationMetadata} ReviewDocumentOperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReviewDocumentOperationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.ReviewDocumentOperationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 5: {
                                        message.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.questionId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ReviewDocumentOperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.ReviewDocumentOperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.ReviewDocumentOperationMetadata} ReviewDocumentOperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReviewDocumentOperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ReviewDocumentOperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.ReviewDocumentOperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ReviewDocumentOperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.commonMetadata != null && message.hasOwnProperty("commonMetadata")) {
                                var error = $root.google.cloud.documentai.v1.CommonOperationMetadata.verify(message.commonMetadata);
                                if (error)
                                    return "commonMetadata." + error;
                            }
                            if (message.questionId != null && message.hasOwnProperty("questionId"))
                                if (!$util.isString(message.questionId))
                                    return "questionId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ReviewDocumentOperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.ReviewDocumentOperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.ReviewDocumentOperationMetadata} ReviewDocumentOperationMetadata
                         */
                        ReviewDocumentOperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.ReviewDocumentOperationMetadata)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.ReviewDocumentOperationMetadata();
                            if (object.commonMetadata != null) {
                                if (typeof object.commonMetadata !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.ReviewDocumentOperationMetadata.commonMetadata: object expected");
                                message.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.fromObject(object.commonMetadata);
                            }
                            if (object.questionId != null)
                                message.questionId = String(object.questionId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ReviewDocumentOperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.ReviewDocumentOperationMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.ReviewDocumentOperationMetadata} message ReviewDocumentOperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ReviewDocumentOperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.commonMetadata = null;
                                object.questionId = "";
                            }
                            if (message.commonMetadata != null && message.hasOwnProperty("commonMetadata"))
                                object.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.toObject(message.commonMetadata, options);
                            if (message.questionId != null && message.hasOwnProperty("questionId"))
                                object.questionId = message.questionId;
                            return object;
                        };
    
                        /**
                         * Converts this ReviewDocumentOperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.ReviewDocumentOperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ReviewDocumentOperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ReviewDocumentOperationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.ReviewDocumentOperationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ReviewDocumentOperationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.ReviewDocumentOperationMetadata";
                        };
    
                        return ReviewDocumentOperationMetadata;
                    })();
    
                    v1.EvaluateProcessorVersionRequest = (function() {
    
                        /**
                         * Properties of an EvaluateProcessorVersionRequest.
                         * @memberof google.cloud.documentai.v1
                         * @interface IEvaluateProcessorVersionRequest
                         * @property {string|null} [processorVersion] EvaluateProcessorVersionRequest processorVersion
                         * @property {google.cloud.documentai.v1.IBatchDocumentsInputConfig|null} [evaluationDocuments] EvaluateProcessorVersionRequest evaluationDocuments
                         */
    
                        /**
                         * Constructs a new EvaluateProcessorVersionRequest.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents an EvaluateProcessorVersionRequest.
                         * @implements IEvaluateProcessorVersionRequest
                         * @constructor
                         * @param {google.cloud.documentai.v1.IEvaluateProcessorVersionRequest=} [properties] Properties to set
                         */
                        function EvaluateProcessorVersionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EvaluateProcessorVersionRequest processorVersion.
                         * @member {string} processorVersion
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionRequest
                         * @instance
                         */
                        EvaluateProcessorVersionRequest.prototype.processorVersion = "";
    
                        /**
                         * EvaluateProcessorVersionRequest evaluationDocuments.
                         * @member {google.cloud.documentai.v1.IBatchDocumentsInputConfig|null|undefined} evaluationDocuments
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionRequest
                         * @instance
                         */
                        EvaluateProcessorVersionRequest.prototype.evaluationDocuments = null;
    
                        /**
                         * Creates a new EvaluateProcessorVersionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IEvaluateProcessorVersionRequest=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.EvaluateProcessorVersionRequest} EvaluateProcessorVersionRequest instance
                         */
                        EvaluateProcessorVersionRequest.create = function create(properties) {
                            return new EvaluateProcessorVersionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified EvaluateProcessorVersionRequest message. Does not implicitly {@link google.cloud.documentai.v1.EvaluateProcessorVersionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IEvaluateProcessorVersionRequest} message EvaluateProcessorVersionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EvaluateProcessorVersionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.processorVersion != null && Object.hasOwnProperty.call(message, "processorVersion"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.processorVersion);
                            if (message.evaluationDocuments != null && Object.hasOwnProperty.call(message, "evaluationDocuments"))
                                $root.google.cloud.documentai.v1.BatchDocumentsInputConfig.encode(message.evaluationDocuments, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EvaluateProcessorVersionRequest message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.EvaluateProcessorVersionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IEvaluateProcessorVersionRequest} message EvaluateProcessorVersionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EvaluateProcessorVersionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EvaluateProcessorVersionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.EvaluateProcessorVersionRequest} EvaluateProcessorVersionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EvaluateProcessorVersionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.EvaluateProcessorVersionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.processorVersion = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.evaluationDocuments = $root.google.cloud.documentai.v1.BatchDocumentsInputConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EvaluateProcessorVersionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.EvaluateProcessorVersionRequest} EvaluateProcessorVersionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EvaluateProcessorVersionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EvaluateProcessorVersionRequest message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EvaluateProcessorVersionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.processorVersion != null && message.hasOwnProperty("processorVersion"))
                                if (!$util.isString(message.processorVersion))
                                    return "processorVersion: string expected";
                            if (message.evaluationDocuments != null && message.hasOwnProperty("evaluationDocuments")) {
                                var error = $root.google.cloud.documentai.v1.BatchDocumentsInputConfig.verify(message.evaluationDocuments);
                                if (error)
                                    return "evaluationDocuments." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an EvaluateProcessorVersionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.EvaluateProcessorVersionRequest} EvaluateProcessorVersionRequest
                         */
                        EvaluateProcessorVersionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.EvaluateProcessorVersionRequest)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.EvaluateProcessorVersionRequest();
                            if (object.processorVersion != null)
                                message.processorVersion = String(object.processorVersion);
                            if (object.evaluationDocuments != null) {
                                if (typeof object.evaluationDocuments !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.EvaluateProcessorVersionRequest.evaluationDocuments: object expected");
                                message.evaluationDocuments = $root.google.cloud.documentai.v1.BatchDocumentsInputConfig.fromObject(object.evaluationDocuments);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EvaluateProcessorVersionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionRequest
                         * @static
                         * @param {google.cloud.documentai.v1.EvaluateProcessorVersionRequest} message EvaluateProcessorVersionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EvaluateProcessorVersionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.processorVersion = "";
                                object.evaluationDocuments = null;
                            }
                            if (message.processorVersion != null && message.hasOwnProperty("processorVersion"))
                                object.processorVersion = message.processorVersion;
                            if (message.evaluationDocuments != null && message.hasOwnProperty("evaluationDocuments"))
                                object.evaluationDocuments = $root.google.cloud.documentai.v1.BatchDocumentsInputConfig.toObject(message.evaluationDocuments, options);
                            return object;
                        };
    
                        /**
                         * Converts this EvaluateProcessorVersionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EvaluateProcessorVersionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EvaluateProcessorVersionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EvaluateProcessorVersionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.EvaluateProcessorVersionRequest";
                        };
    
                        return EvaluateProcessorVersionRequest;
                    })();
    
                    v1.EvaluateProcessorVersionMetadata = (function() {
    
                        /**
                         * Properties of an EvaluateProcessorVersionMetadata.
                         * @memberof google.cloud.documentai.v1
                         * @interface IEvaluateProcessorVersionMetadata
                         * @property {google.cloud.documentai.v1.ICommonOperationMetadata|null} [commonMetadata] EvaluateProcessorVersionMetadata commonMetadata
                         */
    
                        /**
                         * Constructs a new EvaluateProcessorVersionMetadata.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents an EvaluateProcessorVersionMetadata.
                         * @implements IEvaluateProcessorVersionMetadata
                         * @constructor
                         * @param {google.cloud.documentai.v1.IEvaluateProcessorVersionMetadata=} [properties] Properties to set
                         */
                        function EvaluateProcessorVersionMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EvaluateProcessorVersionMetadata commonMetadata.
                         * @member {google.cloud.documentai.v1.ICommonOperationMetadata|null|undefined} commonMetadata
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionMetadata
                         * @instance
                         */
                        EvaluateProcessorVersionMetadata.prototype.commonMetadata = null;
    
                        /**
                         * Creates a new EvaluateProcessorVersionMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.IEvaluateProcessorVersionMetadata=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.EvaluateProcessorVersionMetadata} EvaluateProcessorVersionMetadata instance
                         */
                        EvaluateProcessorVersionMetadata.create = function create(properties) {
                            return new EvaluateProcessorVersionMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified EvaluateProcessorVersionMetadata message. Does not implicitly {@link google.cloud.documentai.v1.EvaluateProcessorVersionMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.IEvaluateProcessorVersionMetadata} message EvaluateProcessorVersionMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EvaluateProcessorVersionMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.commonMetadata != null && Object.hasOwnProperty.call(message, "commonMetadata"))
                                $root.google.cloud.documentai.v1.CommonOperationMetadata.encode(message.commonMetadata, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EvaluateProcessorVersionMetadata message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.EvaluateProcessorVersionMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.IEvaluateProcessorVersionMetadata} message EvaluateProcessorVersionMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EvaluateProcessorVersionMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EvaluateProcessorVersionMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.EvaluateProcessorVersionMetadata} EvaluateProcessorVersionMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EvaluateProcessorVersionMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.EvaluateProcessorVersionMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EvaluateProcessorVersionMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.EvaluateProcessorVersionMetadata} EvaluateProcessorVersionMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EvaluateProcessorVersionMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EvaluateProcessorVersionMetadata message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EvaluateProcessorVersionMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.commonMetadata != null && message.hasOwnProperty("commonMetadata")) {
                                var error = $root.google.cloud.documentai.v1.CommonOperationMetadata.verify(message.commonMetadata);
                                if (error)
                                    return "commonMetadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an EvaluateProcessorVersionMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.EvaluateProcessorVersionMetadata} EvaluateProcessorVersionMetadata
                         */
                        EvaluateProcessorVersionMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.EvaluateProcessorVersionMetadata)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.EvaluateProcessorVersionMetadata();
                            if (object.commonMetadata != null) {
                                if (typeof object.commonMetadata !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.EvaluateProcessorVersionMetadata.commonMetadata: object expected");
                                message.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.fromObject(object.commonMetadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EvaluateProcessorVersionMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.EvaluateProcessorVersionMetadata} message EvaluateProcessorVersionMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EvaluateProcessorVersionMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.commonMetadata = null;
                            if (message.commonMetadata != null && message.hasOwnProperty("commonMetadata"))
                                object.commonMetadata = $root.google.cloud.documentai.v1.CommonOperationMetadata.toObject(message.commonMetadata, options);
                            return object;
                        };
    
                        /**
                         * Converts this EvaluateProcessorVersionMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EvaluateProcessorVersionMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EvaluateProcessorVersionMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EvaluateProcessorVersionMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.EvaluateProcessorVersionMetadata";
                        };
    
                        return EvaluateProcessorVersionMetadata;
                    })();
    
                    v1.EvaluateProcessorVersionResponse = (function() {
    
                        /**
                         * Properties of an EvaluateProcessorVersionResponse.
                         * @memberof google.cloud.documentai.v1
                         * @interface IEvaluateProcessorVersionResponse
                         * @property {string|null} [evaluation] EvaluateProcessorVersionResponse evaluation
                         */
    
                        /**
                         * Constructs a new EvaluateProcessorVersionResponse.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents an EvaluateProcessorVersionResponse.
                         * @implements IEvaluateProcessorVersionResponse
                         * @constructor
                         * @param {google.cloud.documentai.v1.IEvaluateProcessorVersionResponse=} [properties] Properties to set
                         */
                        function EvaluateProcessorVersionResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EvaluateProcessorVersionResponse evaluation.
                         * @member {string} evaluation
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionResponse
                         * @instance
                         */
                        EvaluateProcessorVersionResponse.prototype.evaluation = "";
    
                        /**
                         * Creates a new EvaluateProcessorVersionResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IEvaluateProcessorVersionResponse=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.EvaluateProcessorVersionResponse} EvaluateProcessorVersionResponse instance
                         */
                        EvaluateProcessorVersionResponse.create = function create(properties) {
                            return new EvaluateProcessorVersionResponse(properties);
                        };
    
                        /**
                         * Encodes the specified EvaluateProcessorVersionResponse message. Does not implicitly {@link google.cloud.documentai.v1.EvaluateProcessorVersionResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IEvaluateProcessorVersionResponse} message EvaluateProcessorVersionResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EvaluateProcessorVersionResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.evaluation != null && Object.hasOwnProperty.call(message, "evaluation"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.evaluation);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EvaluateProcessorVersionResponse message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.EvaluateProcessorVersionResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IEvaluateProcessorVersionResponse} message EvaluateProcessorVersionResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EvaluateProcessorVersionResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EvaluateProcessorVersionResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.EvaluateProcessorVersionResponse} EvaluateProcessorVersionResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EvaluateProcessorVersionResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.EvaluateProcessorVersionResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.evaluation = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EvaluateProcessorVersionResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.EvaluateProcessorVersionResponse} EvaluateProcessorVersionResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EvaluateProcessorVersionResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EvaluateProcessorVersionResponse message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EvaluateProcessorVersionResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.evaluation != null && message.hasOwnProperty("evaluation"))
                                if (!$util.isString(message.evaluation))
                                    return "evaluation: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an EvaluateProcessorVersionResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.EvaluateProcessorVersionResponse} EvaluateProcessorVersionResponse
                         */
                        EvaluateProcessorVersionResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.EvaluateProcessorVersionResponse)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.EvaluateProcessorVersionResponse();
                            if (object.evaluation != null)
                                message.evaluation = String(object.evaluation);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EvaluateProcessorVersionResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionResponse
                         * @static
                         * @param {google.cloud.documentai.v1.EvaluateProcessorVersionResponse} message EvaluateProcessorVersionResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EvaluateProcessorVersionResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.evaluation = "";
                            if (message.evaluation != null && message.hasOwnProperty("evaluation"))
                                object.evaluation = message.evaluation;
                            return object;
                        };
    
                        /**
                         * Converts this EvaluateProcessorVersionResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EvaluateProcessorVersionResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EvaluateProcessorVersionResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.EvaluateProcessorVersionResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EvaluateProcessorVersionResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.EvaluateProcessorVersionResponse";
                        };
    
                        return EvaluateProcessorVersionResponse;
                    })();
    
                    v1.GetEvaluationRequest = (function() {
    
                        /**
                         * Properties of a GetEvaluationRequest.
                         * @memberof google.cloud.documentai.v1
                         * @interface IGetEvaluationRequest
                         * @property {string|null} [name] GetEvaluationRequest name
                         */
    
                        /**
                         * Constructs a new GetEvaluationRequest.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a GetEvaluationRequest.
                         * @implements IGetEvaluationRequest
                         * @constructor
                         * @param {google.cloud.documentai.v1.IGetEvaluationRequest=} [properties] Properties to set
                         */
                        function GetEvaluationRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetEvaluationRequest name.
                         * @member {string} name
                         * @memberof google.cloud.documentai.v1.GetEvaluationRequest
                         * @instance
                         */
                        GetEvaluationRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetEvaluationRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.GetEvaluationRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IGetEvaluationRequest=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.GetEvaluationRequest} GetEvaluationRequest instance
                         */
                        GetEvaluationRequest.create = function create(properties) {
                            return new GetEvaluationRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetEvaluationRequest message. Does not implicitly {@link google.cloud.documentai.v1.GetEvaluationRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.GetEvaluationRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IGetEvaluationRequest} message GetEvaluationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetEvaluationRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetEvaluationRequest message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.GetEvaluationRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.GetEvaluationRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IGetEvaluationRequest} message GetEvaluationRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetEvaluationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetEvaluationRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.GetEvaluationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.GetEvaluationRequest} GetEvaluationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetEvaluationRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.GetEvaluationRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetEvaluationRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.GetEvaluationRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.GetEvaluationRequest} GetEvaluationRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetEvaluationRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetEvaluationRequest message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.GetEvaluationRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetEvaluationRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetEvaluationRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.GetEvaluationRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.GetEvaluationRequest} GetEvaluationRequest
                         */
                        GetEvaluationRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.GetEvaluationRequest)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.GetEvaluationRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetEvaluationRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.GetEvaluationRequest
                         * @static
                         * @param {google.cloud.documentai.v1.GetEvaluationRequest} message GetEvaluationRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetEvaluationRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetEvaluationRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.GetEvaluationRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetEvaluationRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetEvaluationRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.GetEvaluationRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetEvaluationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.GetEvaluationRequest";
                        };
    
                        return GetEvaluationRequest;
                    })();
    
                    v1.ListEvaluationsRequest = (function() {
    
                        /**
                         * Properties of a ListEvaluationsRequest.
                         * @memberof google.cloud.documentai.v1
                         * @interface IListEvaluationsRequest
                         * @property {string|null} [parent] ListEvaluationsRequest parent
                         * @property {number|null} [pageSize] ListEvaluationsRequest pageSize
                         * @property {string|null} [pageToken] ListEvaluationsRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListEvaluationsRequest.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a ListEvaluationsRequest.
                         * @implements IListEvaluationsRequest
                         * @constructor
                         * @param {google.cloud.documentai.v1.IListEvaluationsRequest=} [properties] Properties to set
                         */
                        function ListEvaluationsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListEvaluationsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.documentai.v1.ListEvaluationsRequest
                         * @instance
                         */
                        ListEvaluationsRequest.prototype.parent = "";
    
                        /**
                         * ListEvaluationsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.documentai.v1.ListEvaluationsRequest
                         * @instance
                         */
                        ListEvaluationsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListEvaluationsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.documentai.v1.ListEvaluationsRequest
                         * @instance
                         */
                        ListEvaluationsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListEvaluationsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.ListEvaluationsRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IListEvaluationsRequest=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.ListEvaluationsRequest} ListEvaluationsRequest instance
                         */
                        ListEvaluationsRequest.create = function create(properties) {
                            return new ListEvaluationsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListEvaluationsRequest message. Does not implicitly {@link google.cloud.documentai.v1.ListEvaluationsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.ListEvaluationsRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IListEvaluationsRequest} message ListEvaluationsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListEvaluationsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListEvaluationsRequest message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.ListEvaluationsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.ListEvaluationsRequest
                         * @static
                         * @param {google.cloud.documentai.v1.IListEvaluationsRequest} message ListEvaluationsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListEvaluationsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListEvaluationsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.ListEvaluationsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.ListEvaluationsRequest} ListEvaluationsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListEvaluationsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.ListEvaluationsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListEvaluationsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.ListEvaluationsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.ListEvaluationsRequest} ListEvaluationsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListEvaluationsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListEvaluationsRequest message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.ListEvaluationsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListEvaluationsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListEvaluationsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.ListEvaluationsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.ListEvaluationsRequest} ListEvaluationsRequest
                         */
                        ListEvaluationsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.ListEvaluationsRequest)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.ListEvaluationsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListEvaluationsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.ListEvaluationsRequest
                         * @static
                         * @param {google.cloud.documentai.v1.ListEvaluationsRequest} message ListEvaluationsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListEvaluationsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListEvaluationsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.ListEvaluationsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListEvaluationsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListEvaluationsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.ListEvaluationsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListEvaluationsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.ListEvaluationsRequest";
                        };
    
                        return ListEvaluationsRequest;
                    })();
    
                    v1.ListEvaluationsResponse = (function() {
    
                        /**
                         * Properties of a ListEvaluationsResponse.
                         * @memberof google.cloud.documentai.v1
                         * @interface IListEvaluationsResponse
                         * @property {Array.<google.cloud.documentai.v1.IEvaluation>|null} [evaluations] ListEvaluationsResponse evaluations
                         * @property {string|null} [nextPageToken] ListEvaluationsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListEvaluationsResponse.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a ListEvaluationsResponse.
                         * @implements IListEvaluationsResponse
                         * @constructor
                         * @param {google.cloud.documentai.v1.IListEvaluationsResponse=} [properties] Properties to set
                         */
                        function ListEvaluationsResponse(properties) {
                            this.evaluations = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListEvaluationsResponse evaluations.
                         * @member {Array.<google.cloud.documentai.v1.IEvaluation>} evaluations
                         * @memberof google.cloud.documentai.v1.ListEvaluationsResponse
                         * @instance
                         */
                        ListEvaluationsResponse.prototype.evaluations = $util.emptyArray;
    
                        /**
                         * ListEvaluationsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.documentai.v1.ListEvaluationsResponse
                         * @instance
                         */
                        ListEvaluationsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListEvaluationsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.ListEvaluationsResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IListEvaluationsResponse=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.ListEvaluationsResponse} ListEvaluationsResponse instance
                         */
                        ListEvaluationsResponse.create = function create(properties) {
                            return new ListEvaluationsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListEvaluationsResponse message. Does not implicitly {@link google.cloud.documentai.v1.ListEvaluationsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.ListEvaluationsResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IListEvaluationsResponse} message ListEvaluationsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListEvaluationsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.evaluations != null && message.evaluations.length)
                                for (var i = 0; i < message.evaluations.length; ++i)
                                    $root.google.cloud.documentai.v1.Evaluation.encode(message.evaluations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListEvaluationsResponse message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.ListEvaluationsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.ListEvaluationsResponse
                         * @static
                         * @param {google.cloud.documentai.v1.IListEvaluationsResponse} message ListEvaluationsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListEvaluationsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListEvaluationsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.ListEvaluationsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.ListEvaluationsResponse} ListEvaluationsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListEvaluationsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.ListEvaluationsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.evaluations && message.evaluations.length))
                                            message.evaluations = [];
                                        message.evaluations.push($root.google.cloud.documentai.v1.Evaluation.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListEvaluationsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.ListEvaluationsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.ListEvaluationsResponse} ListEvaluationsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListEvaluationsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListEvaluationsResponse message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.ListEvaluationsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListEvaluationsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.evaluations != null && message.hasOwnProperty("evaluations")) {
                                if (!Array.isArray(message.evaluations))
                                    return "evaluations: array expected";
                                for (var i = 0; i < message.evaluations.length; ++i) {
                                    var error = $root.google.cloud.documentai.v1.Evaluation.verify(message.evaluations[i]);
                                    if (error)
                                        return "evaluations." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListEvaluationsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.ListEvaluationsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.ListEvaluationsResponse} ListEvaluationsResponse
                         */
                        ListEvaluationsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.ListEvaluationsResponse)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.ListEvaluationsResponse();
                            if (object.evaluations) {
                                if (!Array.isArray(object.evaluations))
                                    throw TypeError(".google.cloud.documentai.v1.ListEvaluationsResponse.evaluations: array expected");
                                message.evaluations = [];
                                for (var i = 0; i < object.evaluations.length; ++i) {
                                    if (typeof object.evaluations[i] !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.ListEvaluationsResponse.evaluations: object expected");
                                    message.evaluations[i] = $root.google.cloud.documentai.v1.Evaluation.fromObject(object.evaluations[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListEvaluationsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.ListEvaluationsResponse
                         * @static
                         * @param {google.cloud.documentai.v1.ListEvaluationsResponse} message ListEvaluationsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListEvaluationsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.evaluations = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.evaluations && message.evaluations.length) {
                                object.evaluations = [];
                                for (var j = 0; j < message.evaluations.length; ++j)
                                    object.evaluations[j] = $root.google.cloud.documentai.v1.Evaluation.toObject(message.evaluations[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListEvaluationsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.ListEvaluationsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListEvaluationsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListEvaluationsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.ListEvaluationsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListEvaluationsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.ListEvaluationsResponse";
                        };
    
                        return ListEvaluationsResponse;
                    })();
    
                    v1.DocumentSchema = (function() {
    
                        /**
                         * Properties of a DocumentSchema.
                         * @memberof google.cloud.documentai.v1
                         * @interface IDocumentSchema
                         * @property {string|null} [displayName] DocumentSchema displayName
                         * @property {string|null} [description] DocumentSchema description
                         * @property {Array.<google.cloud.documentai.v1.DocumentSchema.IEntityType>|null} [entityTypes] DocumentSchema entityTypes
                         * @property {google.cloud.documentai.v1.DocumentSchema.IMetadata|null} [metadata] DocumentSchema metadata
                         */
    
                        /**
                         * Constructs a new DocumentSchema.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a DocumentSchema.
                         * @implements IDocumentSchema
                         * @constructor
                         * @param {google.cloud.documentai.v1.IDocumentSchema=} [properties] Properties to set
                         */
                        function DocumentSchema(properties) {
                            this.entityTypes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DocumentSchema displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.documentai.v1.DocumentSchema
                         * @instance
                         */
                        DocumentSchema.prototype.displayName = "";
    
                        /**
                         * DocumentSchema description.
                         * @member {string} description
                         * @memberof google.cloud.documentai.v1.DocumentSchema
                         * @instance
                         */
                        DocumentSchema.prototype.description = "";
    
                        /**
                         * DocumentSchema entityTypes.
                         * @member {Array.<google.cloud.documentai.v1.DocumentSchema.IEntityType>} entityTypes
                         * @memberof google.cloud.documentai.v1.DocumentSchema
                         * @instance
                         */
                        DocumentSchema.prototype.entityTypes = $util.emptyArray;
    
                        /**
                         * DocumentSchema metadata.
                         * @member {google.cloud.documentai.v1.DocumentSchema.IMetadata|null|undefined} metadata
                         * @memberof google.cloud.documentai.v1.DocumentSchema
                         * @instance
                         */
                        DocumentSchema.prototype.metadata = null;
    
                        /**
                         * Creates a new DocumentSchema instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.DocumentSchema
                         * @static
                         * @param {google.cloud.documentai.v1.IDocumentSchema=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.DocumentSchema} DocumentSchema instance
                         */
                        DocumentSchema.create = function create(properties) {
                            return new DocumentSchema(properties);
                        };
    
                        /**
                         * Encodes the specified DocumentSchema message. Does not implicitly {@link google.cloud.documentai.v1.DocumentSchema.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.DocumentSchema
                         * @static
                         * @param {google.cloud.documentai.v1.IDocumentSchema} message DocumentSchema message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DocumentSchema.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.displayName);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                            if (message.entityTypes != null && message.entityTypes.length)
                                for (var i = 0; i < message.entityTypes.length; ++i)
                                    $root.google.cloud.documentai.v1.DocumentSchema.EntityType.encode(message.entityTypes[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                                $root.google.cloud.documentai.v1.DocumentSchema.Metadata.encode(message.metadata, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DocumentSchema message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.DocumentSchema.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.DocumentSchema
                         * @static
                         * @param {google.cloud.documentai.v1.IDocumentSchema} message DocumentSchema message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DocumentSchema.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DocumentSchema message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.DocumentSchema
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.DocumentSchema} DocumentSchema
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DocumentSchema.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.DocumentSchema();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.entityTypes && message.entityTypes.length))
                                            message.entityTypes = [];
                                        message.entityTypes.push($root.google.cloud.documentai.v1.DocumentSchema.EntityType.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 4: {
                                        message.metadata = $root.google.cloud.documentai.v1.DocumentSchema.Metadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DocumentSchema message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.DocumentSchema
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.DocumentSchema} DocumentSchema
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DocumentSchema.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DocumentSchema message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.DocumentSchema
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DocumentSchema.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.entityTypes != null && message.hasOwnProperty("entityTypes")) {
                                if (!Array.isArray(message.entityTypes))
                                    return "entityTypes: array expected";
                                for (var i = 0; i < message.entityTypes.length; ++i) {
                                    var error = $root.google.cloud.documentai.v1.DocumentSchema.EntityType.verify(message.entityTypes[i]);
                                    if (error)
                                        return "entityTypes." + error;
                                }
                            }
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                var error = $root.google.cloud.documentai.v1.DocumentSchema.Metadata.verify(message.metadata);
                                if (error)
                                    return "metadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DocumentSchema message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.DocumentSchema
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.DocumentSchema} DocumentSchema
                         */
                        DocumentSchema.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.DocumentSchema)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.DocumentSchema();
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.entityTypes) {
                                if (!Array.isArray(object.entityTypes))
                                    throw TypeError(".google.cloud.documentai.v1.DocumentSchema.entityTypes: array expected");
                                message.entityTypes = [];
                                for (var i = 0; i < object.entityTypes.length; ++i) {
                                    if (typeof object.entityTypes[i] !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.DocumentSchema.entityTypes: object expected");
                                    message.entityTypes[i] = $root.google.cloud.documentai.v1.DocumentSchema.EntityType.fromObject(object.entityTypes[i]);
                                }
                            }
                            if (object.metadata != null) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.DocumentSchema.metadata: object expected");
                                message.metadata = $root.google.cloud.documentai.v1.DocumentSchema.Metadata.fromObject(object.metadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DocumentSchema message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.DocumentSchema
                         * @static
                         * @param {google.cloud.documentai.v1.DocumentSchema} message DocumentSchema
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DocumentSchema.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.entityTypes = [];
                            if (options.defaults) {
                                object.displayName = "";
                                object.description = "";
                                object.metadata = null;
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.entityTypes && message.entityTypes.length) {
                                object.entityTypes = [];
                                for (var j = 0; j < message.entityTypes.length; ++j)
                                    object.entityTypes[j] = $root.google.cloud.documentai.v1.DocumentSchema.EntityType.toObject(message.entityTypes[j], options);
                            }
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                object.metadata = $root.google.cloud.documentai.v1.DocumentSchema.Metadata.toObject(message.metadata, options);
                            return object;
                        };
    
                        /**
                         * Converts this DocumentSchema to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.DocumentSchema
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DocumentSchema.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DocumentSchema
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.DocumentSchema
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DocumentSchema.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.DocumentSchema";
                        };
    
                        DocumentSchema.EntityType = (function() {
    
                            /**
                             * Properties of an EntityType.
                             * @memberof google.cloud.documentai.v1.DocumentSchema
                             * @interface IEntityType
                             * @property {google.cloud.documentai.v1.DocumentSchema.EntityType.IEnumValues|null} [enumValues] EntityType enumValues
                             * @property {string|null} [displayName] EntityType displayName
                             * @property {string|null} [name] EntityType name
                             * @property {Array.<string>|null} [baseTypes] EntityType baseTypes
                             * @property {Array.<google.cloud.documentai.v1.DocumentSchema.EntityType.IProperty>|null} [properties] EntityType properties
                             */
    
                            /**
                             * Constructs a new EntityType.
                             * @memberof google.cloud.documentai.v1.DocumentSchema
                             * @classdesc Represents an EntityType.
                             * @implements IEntityType
                             * @constructor
                             * @param {google.cloud.documentai.v1.DocumentSchema.IEntityType=} [properties] Properties to set
                             */
                            function EntityType(properties) {
                                this.baseTypes = [];
                                this.properties = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * EntityType enumValues.
                             * @member {google.cloud.documentai.v1.DocumentSchema.EntityType.IEnumValues|null|undefined} enumValues
                             * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType
                             * @instance
                             */
                            EntityType.prototype.enumValues = null;
    
                            /**
                             * EntityType displayName.
                             * @member {string} displayName
                             * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType
                             * @instance
                             */
                            EntityType.prototype.displayName = "";
    
                            /**
                             * EntityType name.
                             * @member {string} name
                             * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType
                             * @instance
                             */
                            EntityType.prototype.name = "";
    
                            /**
                             * EntityType baseTypes.
                             * @member {Array.<string>} baseTypes
                             * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType
                             * @instance
                             */
                            EntityType.prototype.baseTypes = $util.emptyArray;
    
                            /**
                             * EntityType properties.
                             * @member {Array.<google.cloud.documentai.v1.DocumentSchema.EntityType.IProperty>} properties
                             * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType
                             * @instance
                             */
                            EntityType.prototype.properties = $util.emptyArray;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * EntityType valueSource.
                             * @member {"enumValues"|undefined} valueSource
                             * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType
                             * @instance
                             */
                            Object.defineProperty(EntityType.prototype, "valueSource", {
                                get: $util.oneOfGetter($oneOfFields = ["enumValues"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new EntityType instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType
                             * @static
                             * @param {google.cloud.documentai.v1.DocumentSchema.IEntityType=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.DocumentSchema.EntityType} EntityType instance
                             */
                            EntityType.create = function create(properties) {
                                return new EntityType(properties);
                            };
    
                            /**
                             * Encodes the specified EntityType message. Does not implicitly {@link google.cloud.documentai.v1.DocumentSchema.EntityType.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType
                             * @static
                             * @param {google.cloud.documentai.v1.DocumentSchema.IEntityType} message EntityType message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            EntityType.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.baseTypes != null && message.baseTypes.length)
                                    for (var i = 0; i < message.baseTypes.length; ++i)
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.baseTypes[i]);
                                if (message.properties != null && message.properties.length)
                                    for (var i = 0; i < message.properties.length; ++i)
                                        $root.google.cloud.documentai.v1.DocumentSchema.EntityType.Property.encode(message.properties[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                                if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                    writer.uint32(/* id 13, wireType 2 =*/106).string(message.displayName);
                                if (message.enumValues != null && Object.hasOwnProperty.call(message, "enumValues"))
                                    $root.google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues.encode(message.enumValues, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified EntityType message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.DocumentSchema.EntityType.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType
                             * @static
                             * @param {google.cloud.documentai.v1.DocumentSchema.IEntityType} message EntityType message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            EntityType.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an EntityType message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.DocumentSchema.EntityType} EntityType
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            EntityType.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.DocumentSchema.EntityType();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 14: {
                                            message.enumValues = $root.google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 13: {
                                            message.displayName = reader.string();
                                            break;
                                        }
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            if (!(message.baseTypes && message.baseTypes.length))
                                                message.baseTypes = [];
                                            message.baseTypes.push(reader.string());
                                            break;
                                        }
                                    case 6: {
                                            if (!(message.properties && message.properties.length))
                                                message.properties = [];
                                            message.properties.push($root.google.cloud.documentai.v1.DocumentSchema.EntityType.Property.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an EntityType message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.DocumentSchema.EntityType} EntityType
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            EntityType.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an EntityType message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            EntityType.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.enumValues != null && message.hasOwnProperty("enumValues")) {
                                    properties.valueSource = 1;
                                    {
                                        var error = $root.google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues.verify(message.enumValues);
                                        if (error)
                                            return "enumValues." + error;
                                    }
                                }
                                if (message.displayName != null && message.hasOwnProperty("displayName"))
                                    if (!$util.isString(message.displayName))
                                        return "displayName: string expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.baseTypes != null && message.hasOwnProperty("baseTypes")) {
                                    if (!Array.isArray(message.baseTypes))
                                        return "baseTypes: array expected";
                                    for (var i = 0; i < message.baseTypes.length; ++i)
                                        if (!$util.isString(message.baseTypes[i]))
                                            return "baseTypes: string[] expected";
                                }
                                if (message.properties != null && message.hasOwnProperty("properties")) {
                                    if (!Array.isArray(message.properties))
                                        return "properties: array expected";
                                    for (var i = 0; i < message.properties.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.DocumentSchema.EntityType.Property.verify(message.properties[i]);
                                        if (error)
                                            return "properties." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates an EntityType message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.DocumentSchema.EntityType} EntityType
                             */
                            EntityType.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.DocumentSchema.EntityType)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.DocumentSchema.EntityType();
                                if (object.enumValues != null) {
                                    if (typeof object.enumValues !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.DocumentSchema.EntityType.enumValues: object expected");
                                    message.enumValues = $root.google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues.fromObject(object.enumValues);
                                }
                                if (object.displayName != null)
                                    message.displayName = String(object.displayName);
                                if (object.name != null)
                                    message.name = String(object.name);
                                if (object.baseTypes) {
                                    if (!Array.isArray(object.baseTypes))
                                        throw TypeError(".google.cloud.documentai.v1.DocumentSchema.EntityType.baseTypes: array expected");
                                    message.baseTypes = [];
                                    for (var i = 0; i < object.baseTypes.length; ++i)
                                        message.baseTypes[i] = String(object.baseTypes[i]);
                                }
                                if (object.properties) {
                                    if (!Array.isArray(object.properties))
                                        throw TypeError(".google.cloud.documentai.v1.DocumentSchema.EntityType.properties: array expected");
                                    message.properties = [];
                                    for (var i = 0; i < object.properties.length; ++i) {
                                        if (typeof object.properties[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.DocumentSchema.EntityType.properties: object expected");
                                        message.properties[i] = $root.google.cloud.documentai.v1.DocumentSchema.EntityType.Property.fromObject(object.properties[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an EntityType message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType
                             * @static
                             * @param {google.cloud.documentai.v1.DocumentSchema.EntityType} message EntityType
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            EntityType.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.baseTypes = [];
                                    object.properties = [];
                                }
                                if (options.defaults) {
                                    object.name = "";
                                    object.displayName = "";
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.baseTypes && message.baseTypes.length) {
                                    object.baseTypes = [];
                                    for (var j = 0; j < message.baseTypes.length; ++j)
                                        object.baseTypes[j] = message.baseTypes[j];
                                }
                                if (message.properties && message.properties.length) {
                                    object.properties = [];
                                    for (var j = 0; j < message.properties.length; ++j)
                                        object.properties[j] = $root.google.cloud.documentai.v1.DocumentSchema.EntityType.Property.toObject(message.properties[j], options);
                                }
                                if (message.displayName != null && message.hasOwnProperty("displayName"))
                                    object.displayName = message.displayName;
                                if (message.enumValues != null && message.hasOwnProperty("enumValues")) {
                                    object.enumValues = $root.google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues.toObject(message.enumValues, options);
                                    if (options.oneofs)
                                        object.valueSource = "enumValues";
                                }
                                return object;
                            };
    
                            /**
                             * Converts this EntityType to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            EntityType.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for EntityType
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            EntityType.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.DocumentSchema.EntityType";
                            };
    
                            EntityType.EnumValues = (function() {
    
                                /**
                                 * Properties of an EnumValues.
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType
                                 * @interface IEnumValues
                                 * @property {Array.<string>|null} [values] EnumValues values
                                 */
    
                                /**
                                 * Constructs a new EnumValues.
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType
                                 * @classdesc Represents an EnumValues.
                                 * @implements IEnumValues
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.DocumentSchema.EntityType.IEnumValues=} [properties] Properties to set
                                 */
                                function EnumValues(properties) {
                                    this.values = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * EnumValues values.
                                 * @member {Array.<string>} values
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues
                                 * @instance
                                 */
                                EnumValues.prototype.values = $util.emptyArray;
    
                                /**
                                 * Creates a new EnumValues instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues
                                 * @static
                                 * @param {google.cloud.documentai.v1.DocumentSchema.EntityType.IEnumValues=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues} EnumValues instance
                                 */
                                EnumValues.create = function create(properties) {
                                    return new EnumValues(properties);
                                };
    
                                /**
                                 * Encodes the specified EnumValues message. Does not implicitly {@link google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues
                                 * @static
                                 * @param {google.cloud.documentai.v1.DocumentSchema.EntityType.IEnumValues} message EnumValues message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                EnumValues.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.values != null && message.values.length)
                                        for (var i = 0; i < message.values.length; ++i)
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.values[i]);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified EnumValues message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues
                                 * @static
                                 * @param {google.cloud.documentai.v1.DocumentSchema.EntityType.IEnumValues} message EnumValues message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                EnumValues.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes an EnumValues message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues} EnumValues
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                EnumValues.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                if (!(message.values && message.values.length))
                                                    message.values = [];
                                                message.values.push(reader.string());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes an EnumValues message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues} EnumValues
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                EnumValues.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies an EnumValues message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                EnumValues.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.values != null && message.hasOwnProperty("values")) {
                                        if (!Array.isArray(message.values))
                                            return "values: array expected";
                                        for (var i = 0; i < message.values.length; ++i)
                                            if (!$util.isString(message.values[i]))
                                                return "values: string[] expected";
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates an EnumValues message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues} EnumValues
                                 */
                                EnumValues.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues();
                                    if (object.values) {
                                        if (!Array.isArray(object.values))
                                            throw TypeError(".google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues.values: array expected");
                                        message.values = [];
                                        for (var i = 0; i < object.values.length; ++i)
                                            message.values[i] = String(object.values[i]);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from an EnumValues message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues
                                 * @static
                                 * @param {google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues} message EnumValues
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                EnumValues.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults)
                                        object.values = [];
                                    if (message.values && message.values.length) {
                                        object.values = [];
                                        for (var j = 0; j < message.values.length; ++j)
                                            object.values[j] = message.values[j];
                                    }
                                    return object;
                                };
    
                                /**
                                 * Converts this EnumValues to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                EnumValues.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for EnumValues
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                EnumValues.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.DocumentSchema.EntityType.EnumValues";
                                };
    
                                return EnumValues;
                            })();
    
                            EntityType.Property = (function() {
    
                                /**
                                 * Properties of a Property.
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType
                                 * @interface IProperty
                                 * @property {string|null} [name] Property name
                                 * @property {string|null} [displayName] Property displayName
                                 * @property {string|null} [valueType] Property valueType
                                 * @property {google.cloud.documentai.v1.DocumentSchema.EntityType.Property.OccurrenceType|null} [occurrenceType] Property occurrenceType
                                 */
    
                                /**
                                 * Constructs a new Property.
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType
                                 * @classdesc Represents a Property.
                                 * @implements IProperty
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.DocumentSchema.EntityType.IProperty=} [properties] Properties to set
                                 */
                                function Property(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * Property name.
                                 * @member {string} name
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType.Property
                                 * @instance
                                 */
                                Property.prototype.name = "";
    
                                /**
                                 * Property displayName.
                                 * @member {string} displayName
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType.Property
                                 * @instance
                                 */
                                Property.prototype.displayName = "";
    
                                /**
                                 * Property valueType.
                                 * @member {string} valueType
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType.Property
                                 * @instance
                                 */
                                Property.prototype.valueType = "";
    
                                /**
                                 * Property occurrenceType.
                                 * @member {google.cloud.documentai.v1.DocumentSchema.EntityType.Property.OccurrenceType} occurrenceType
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType.Property
                                 * @instance
                                 */
                                Property.prototype.occurrenceType = 0;
    
                                /**
                                 * Creates a new Property instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType.Property
                                 * @static
                                 * @param {google.cloud.documentai.v1.DocumentSchema.EntityType.IProperty=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.DocumentSchema.EntityType.Property} Property instance
                                 */
                                Property.create = function create(properties) {
                                    return new Property(properties);
                                };
    
                                /**
                                 * Encodes the specified Property message. Does not implicitly {@link google.cloud.documentai.v1.DocumentSchema.EntityType.Property.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType.Property
                                 * @static
                                 * @param {google.cloud.documentai.v1.DocumentSchema.EntityType.IProperty} message Property message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Property.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                    if (message.valueType != null && Object.hasOwnProperty.call(message, "valueType"))
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.valueType);
                                    if (message.occurrenceType != null && Object.hasOwnProperty.call(message, "occurrenceType"))
                                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.occurrenceType);
                                    if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.displayName);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified Property message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.DocumentSchema.EntityType.Property.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType.Property
                                 * @static
                                 * @param {google.cloud.documentai.v1.DocumentSchema.EntityType.IProperty} message Property message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Property.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a Property message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType.Property
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.DocumentSchema.EntityType.Property} Property
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Property.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.DocumentSchema.EntityType.Property();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.name = reader.string();
                                                break;
                                            }
                                        case 6: {
                                                message.displayName = reader.string();
                                                break;
                                            }
                                        case 2: {
                                                message.valueType = reader.string();
                                                break;
                                            }
                                        case 3: {
                                                message.occurrenceType = reader.int32();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a Property message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType.Property
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.DocumentSchema.EntityType.Property} Property
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Property.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a Property message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType.Property
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                Property.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.name != null && message.hasOwnProperty("name"))
                                        if (!$util.isString(message.name))
                                            return "name: string expected";
                                    if (message.displayName != null && message.hasOwnProperty("displayName"))
                                        if (!$util.isString(message.displayName))
                                            return "displayName: string expected";
                                    if (message.valueType != null && message.hasOwnProperty("valueType"))
                                        if (!$util.isString(message.valueType))
                                            return "valueType: string expected";
                                    if (message.occurrenceType != null && message.hasOwnProperty("occurrenceType"))
                                        switch (message.occurrenceType) {
                                        default:
                                            return "occurrenceType: enum value expected";
                                        case 0:
                                        case 1:
                                        case 2:
                                        case 3:
                                        case 4:
                                            break;
                                        }
                                    return null;
                                };
    
                                /**
                                 * Creates a Property message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType.Property
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.DocumentSchema.EntityType.Property} Property
                                 */
                                Property.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.DocumentSchema.EntityType.Property)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.DocumentSchema.EntityType.Property();
                                    if (object.name != null)
                                        message.name = String(object.name);
                                    if (object.displayName != null)
                                        message.displayName = String(object.displayName);
                                    if (object.valueType != null)
                                        message.valueType = String(object.valueType);
                                    switch (object.occurrenceType) {
                                    default:
                                        if (typeof object.occurrenceType === "number") {
                                            message.occurrenceType = object.occurrenceType;
                                            break;
                                        }
                                        break;
                                    case "OCCURRENCE_TYPE_UNSPECIFIED":
                                    case 0:
                                        message.occurrenceType = 0;
                                        break;
                                    case "OPTIONAL_ONCE":
                                    case 1:
                                        message.occurrenceType = 1;
                                        break;
                                    case "OPTIONAL_MULTIPLE":
                                    case 2:
                                        message.occurrenceType = 2;
                                        break;
                                    case "REQUIRED_ONCE":
                                    case 3:
                                        message.occurrenceType = 3;
                                        break;
                                    case "REQUIRED_MULTIPLE":
                                    case 4:
                                        message.occurrenceType = 4;
                                        break;
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a Property message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType.Property
                                 * @static
                                 * @param {google.cloud.documentai.v1.DocumentSchema.EntityType.Property} message Property
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                Property.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.name = "";
                                        object.valueType = "";
                                        object.occurrenceType = options.enums === String ? "OCCURRENCE_TYPE_UNSPECIFIED" : 0;
                                        object.displayName = "";
                                    }
                                    if (message.name != null && message.hasOwnProperty("name"))
                                        object.name = message.name;
                                    if (message.valueType != null && message.hasOwnProperty("valueType"))
                                        object.valueType = message.valueType;
                                    if (message.occurrenceType != null && message.hasOwnProperty("occurrenceType"))
                                        object.occurrenceType = options.enums === String ? $root.google.cloud.documentai.v1.DocumentSchema.EntityType.Property.OccurrenceType[message.occurrenceType] === undefined ? message.occurrenceType : $root.google.cloud.documentai.v1.DocumentSchema.EntityType.Property.OccurrenceType[message.occurrenceType] : message.occurrenceType;
                                    if (message.displayName != null && message.hasOwnProperty("displayName"))
                                        object.displayName = message.displayName;
                                    return object;
                                };
    
                                /**
                                 * Converts this Property to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType.Property
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                Property.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for Property
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.DocumentSchema.EntityType.Property
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                Property.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.DocumentSchema.EntityType.Property";
                                };
    
                                /**
                                 * OccurrenceType enum.
                                 * @name google.cloud.documentai.v1.DocumentSchema.EntityType.Property.OccurrenceType
                                 * @enum {number}
                                 * @property {number} OCCURRENCE_TYPE_UNSPECIFIED=0 OCCURRENCE_TYPE_UNSPECIFIED value
                                 * @property {number} OPTIONAL_ONCE=1 OPTIONAL_ONCE value
                                 * @property {number} OPTIONAL_MULTIPLE=2 OPTIONAL_MULTIPLE value
                                 * @property {number} REQUIRED_ONCE=3 REQUIRED_ONCE value
                                 * @property {number} REQUIRED_MULTIPLE=4 REQUIRED_MULTIPLE value
                                 */
                                Property.OccurrenceType = (function() {
                                    var valuesById = {}, values = Object.create(valuesById);
                                    values[valuesById[0] = "OCCURRENCE_TYPE_UNSPECIFIED"] = 0;
                                    values[valuesById[1] = "OPTIONAL_ONCE"] = 1;
                                    values[valuesById[2] = "OPTIONAL_MULTIPLE"] = 2;
                                    values[valuesById[3] = "REQUIRED_ONCE"] = 3;
                                    values[valuesById[4] = "REQUIRED_MULTIPLE"] = 4;
                                    return values;
                                })();
    
                                return Property;
                            })();
    
                            return EntityType;
                        })();
    
                        DocumentSchema.Metadata = (function() {
    
                            /**
                             * Properties of a Metadata.
                             * @memberof google.cloud.documentai.v1.DocumentSchema
                             * @interface IMetadata
                             * @property {boolean|null} [documentSplitter] Metadata documentSplitter
                             * @property {boolean|null} [documentAllowMultipleLabels] Metadata documentAllowMultipleLabels
                             * @property {boolean|null} [prefixedNamingOnProperties] Metadata prefixedNamingOnProperties
                             * @property {boolean|null} [skipNamingValidation] Metadata skipNamingValidation
                             */
    
                            /**
                             * Constructs a new Metadata.
                             * @memberof google.cloud.documentai.v1.DocumentSchema
                             * @classdesc Represents a Metadata.
                             * @implements IMetadata
                             * @constructor
                             * @param {google.cloud.documentai.v1.DocumentSchema.IMetadata=} [properties] Properties to set
                             */
                            function Metadata(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Metadata documentSplitter.
                             * @member {boolean} documentSplitter
                             * @memberof google.cloud.documentai.v1.DocumentSchema.Metadata
                             * @instance
                             */
                            Metadata.prototype.documentSplitter = false;
    
                            /**
                             * Metadata documentAllowMultipleLabels.
                             * @member {boolean} documentAllowMultipleLabels
                             * @memberof google.cloud.documentai.v1.DocumentSchema.Metadata
                             * @instance
                             */
                            Metadata.prototype.documentAllowMultipleLabels = false;
    
                            /**
                             * Metadata prefixedNamingOnProperties.
                             * @member {boolean} prefixedNamingOnProperties
                             * @memberof google.cloud.documentai.v1.DocumentSchema.Metadata
                             * @instance
                             */
                            Metadata.prototype.prefixedNamingOnProperties = false;
    
                            /**
                             * Metadata skipNamingValidation.
                             * @member {boolean} skipNamingValidation
                             * @memberof google.cloud.documentai.v1.DocumentSchema.Metadata
                             * @instance
                             */
                            Metadata.prototype.skipNamingValidation = false;
    
                            /**
                             * Creates a new Metadata instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.DocumentSchema.Metadata
                             * @static
                             * @param {google.cloud.documentai.v1.DocumentSchema.IMetadata=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.DocumentSchema.Metadata} Metadata instance
                             */
                            Metadata.create = function create(properties) {
                                return new Metadata(properties);
                            };
    
                            /**
                             * Encodes the specified Metadata message. Does not implicitly {@link google.cloud.documentai.v1.DocumentSchema.Metadata.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.DocumentSchema.Metadata
                             * @static
                             * @param {google.cloud.documentai.v1.DocumentSchema.IMetadata} message Metadata message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Metadata.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.documentSplitter != null && Object.hasOwnProperty.call(message, "documentSplitter"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.documentSplitter);
                                if (message.documentAllowMultipleLabels != null && Object.hasOwnProperty.call(message, "documentAllowMultipleLabels"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.documentAllowMultipleLabels);
                                if (message.prefixedNamingOnProperties != null && Object.hasOwnProperty.call(message, "prefixedNamingOnProperties"))
                                    writer.uint32(/* id 6, wireType 0 =*/48).bool(message.prefixedNamingOnProperties);
                                if (message.skipNamingValidation != null && Object.hasOwnProperty.call(message, "skipNamingValidation"))
                                    writer.uint32(/* id 7, wireType 0 =*/56).bool(message.skipNamingValidation);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Metadata message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.DocumentSchema.Metadata.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.DocumentSchema.Metadata
                             * @static
                             * @param {google.cloud.documentai.v1.DocumentSchema.IMetadata} message Metadata message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Metadata.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Metadata message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.DocumentSchema.Metadata
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.DocumentSchema.Metadata} Metadata
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Metadata.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.DocumentSchema.Metadata();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.documentSplitter = reader.bool();
                                            break;
                                        }
                                    case 2: {
                                            message.documentAllowMultipleLabels = reader.bool();
                                            break;
                                        }
                                    case 6: {
                                            message.prefixedNamingOnProperties = reader.bool();
                                            break;
                                        }
                                    case 7: {
                                            message.skipNamingValidation = reader.bool();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Metadata message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.DocumentSchema.Metadata
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.DocumentSchema.Metadata} Metadata
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Metadata.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Metadata message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.DocumentSchema.Metadata
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Metadata.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.documentSplitter != null && message.hasOwnProperty("documentSplitter"))
                                    if (typeof message.documentSplitter !== "boolean")
                                        return "documentSplitter: boolean expected";
                                if (message.documentAllowMultipleLabels != null && message.hasOwnProperty("documentAllowMultipleLabels"))
                                    if (typeof message.documentAllowMultipleLabels !== "boolean")
                                        return "documentAllowMultipleLabels: boolean expected";
                                if (message.prefixedNamingOnProperties != null && message.hasOwnProperty("prefixedNamingOnProperties"))
                                    if (typeof message.prefixedNamingOnProperties !== "boolean")
                                        return "prefixedNamingOnProperties: boolean expected";
                                if (message.skipNamingValidation != null && message.hasOwnProperty("skipNamingValidation"))
                                    if (typeof message.skipNamingValidation !== "boolean")
                                        return "skipNamingValidation: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates a Metadata message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.DocumentSchema.Metadata
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.DocumentSchema.Metadata} Metadata
                             */
                            Metadata.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.DocumentSchema.Metadata)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.DocumentSchema.Metadata();
                                if (object.documentSplitter != null)
                                    message.documentSplitter = Boolean(object.documentSplitter);
                                if (object.documentAllowMultipleLabels != null)
                                    message.documentAllowMultipleLabels = Boolean(object.documentAllowMultipleLabels);
                                if (object.prefixedNamingOnProperties != null)
                                    message.prefixedNamingOnProperties = Boolean(object.prefixedNamingOnProperties);
                                if (object.skipNamingValidation != null)
                                    message.skipNamingValidation = Boolean(object.skipNamingValidation);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Metadata message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.DocumentSchema.Metadata
                             * @static
                             * @param {google.cloud.documentai.v1.DocumentSchema.Metadata} message Metadata
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Metadata.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.documentSplitter = false;
                                    object.documentAllowMultipleLabels = false;
                                    object.prefixedNamingOnProperties = false;
                                    object.skipNamingValidation = false;
                                }
                                if (message.documentSplitter != null && message.hasOwnProperty("documentSplitter"))
                                    object.documentSplitter = message.documentSplitter;
                                if (message.documentAllowMultipleLabels != null && message.hasOwnProperty("documentAllowMultipleLabels"))
                                    object.documentAllowMultipleLabels = message.documentAllowMultipleLabels;
                                if (message.prefixedNamingOnProperties != null && message.hasOwnProperty("prefixedNamingOnProperties"))
                                    object.prefixedNamingOnProperties = message.prefixedNamingOnProperties;
                                if (message.skipNamingValidation != null && message.hasOwnProperty("skipNamingValidation"))
                                    object.skipNamingValidation = message.skipNamingValidation;
                                return object;
                            };
    
                            /**
                             * Converts this Metadata to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.DocumentSchema.Metadata
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Metadata.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Metadata
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.DocumentSchema.Metadata
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Metadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.DocumentSchema.Metadata";
                            };
    
                            return Metadata;
                        })();
    
                        return DocumentSchema;
                    })();
    
                    v1.EvaluationReference = (function() {
    
                        /**
                         * Properties of an EvaluationReference.
                         * @memberof google.cloud.documentai.v1
                         * @interface IEvaluationReference
                         * @property {string|null} [operation] EvaluationReference operation
                         * @property {string|null} [evaluation] EvaluationReference evaluation
                         * @property {google.cloud.documentai.v1.Evaluation.IMetrics|null} [aggregateMetrics] EvaluationReference aggregateMetrics
                         * @property {google.cloud.documentai.v1.Evaluation.IMetrics|null} [aggregateMetricsExact] EvaluationReference aggregateMetricsExact
                         */
    
                        /**
                         * Constructs a new EvaluationReference.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents an EvaluationReference.
                         * @implements IEvaluationReference
                         * @constructor
                         * @param {google.cloud.documentai.v1.IEvaluationReference=} [properties] Properties to set
                         */
                        function EvaluationReference(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EvaluationReference operation.
                         * @member {string} operation
                         * @memberof google.cloud.documentai.v1.EvaluationReference
                         * @instance
                         */
                        EvaluationReference.prototype.operation = "";
    
                        /**
                         * EvaluationReference evaluation.
                         * @member {string} evaluation
                         * @memberof google.cloud.documentai.v1.EvaluationReference
                         * @instance
                         */
                        EvaluationReference.prototype.evaluation = "";
    
                        /**
                         * EvaluationReference aggregateMetrics.
                         * @member {google.cloud.documentai.v1.Evaluation.IMetrics|null|undefined} aggregateMetrics
                         * @memberof google.cloud.documentai.v1.EvaluationReference
                         * @instance
                         */
                        EvaluationReference.prototype.aggregateMetrics = null;
    
                        /**
                         * EvaluationReference aggregateMetricsExact.
                         * @member {google.cloud.documentai.v1.Evaluation.IMetrics|null|undefined} aggregateMetricsExact
                         * @memberof google.cloud.documentai.v1.EvaluationReference
                         * @instance
                         */
                        EvaluationReference.prototype.aggregateMetricsExact = null;
    
                        /**
                         * Creates a new EvaluationReference instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.EvaluationReference
                         * @static
                         * @param {google.cloud.documentai.v1.IEvaluationReference=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.EvaluationReference} EvaluationReference instance
                         */
                        EvaluationReference.create = function create(properties) {
                            return new EvaluationReference(properties);
                        };
    
                        /**
                         * Encodes the specified EvaluationReference message. Does not implicitly {@link google.cloud.documentai.v1.EvaluationReference.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.EvaluationReference
                         * @static
                         * @param {google.cloud.documentai.v1.IEvaluationReference} message EvaluationReference message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EvaluationReference.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.operation != null && Object.hasOwnProperty.call(message, "operation"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.operation);
                            if (message.evaluation != null && Object.hasOwnProperty.call(message, "evaluation"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.evaluation);
                            if (message.aggregateMetrics != null && Object.hasOwnProperty.call(message, "aggregateMetrics"))
                                $root.google.cloud.documentai.v1.Evaluation.Metrics.encode(message.aggregateMetrics, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.aggregateMetricsExact != null && Object.hasOwnProperty.call(message, "aggregateMetricsExact"))
                                $root.google.cloud.documentai.v1.Evaluation.Metrics.encode(message.aggregateMetricsExact, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EvaluationReference message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.EvaluationReference.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.EvaluationReference
                         * @static
                         * @param {google.cloud.documentai.v1.IEvaluationReference} message EvaluationReference message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EvaluationReference.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EvaluationReference message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.EvaluationReference
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.EvaluationReference} EvaluationReference
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EvaluationReference.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.EvaluationReference();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.operation = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.evaluation = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.aggregateMetrics = $root.google.cloud.documentai.v1.Evaluation.Metrics.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.aggregateMetricsExact = $root.google.cloud.documentai.v1.Evaluation.Metrics.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EvaluationReference message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.EvaluationReference
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.EvaluationReference} EvaluationReference
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EvaluationReference.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EvaluationReference message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.EvaluationReference
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EvaluationReference.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.operation != null && message.hasOwnProperty("operation"))
                                if (!$util.isString(message.operation))
                                    return "operation: string expected";
                            if (message.evaluation != null && message.hasOwnProperty("evaluation"))
                                if (!$util.isString(message.evaluation))
                                    return "evaluation: string expected";
                            if (message.aggregateMetrics != null && message.hasOwnProperty("aggregateMetrics")) {
                                var error = $root.google.cloud.documentai.v1.Evaluation.Metrics.verify(message.aggregateMetrics);
                                if (error)
                                    return "aggregateMetrics." + error;
                            }
                            if (message.aggregateMetricsExact != null && message.hasOwnProperty("aggregateMetricsExact")) {
                                var error = $root.google.cloud.documentai.v1.Evaluation.Metrics.verify(message.aggregateMetricsExact);
                                if (error)
                                    return "aggregateMetricsExact." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an EvaluationReference message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.EvaluationReference
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.EvaluationReference} EvaluationReference
                         */
                        EvaluationReference.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.EvaluationReference)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.EvaluationReference();
                            if (object.operation != null)
                                message.operation = String(object.operation);
                            if (object.evaluation != null)
                                message.evaluation = String(object.evaluation);
                            if (object.aggregateMetrics != null) {
                                if (typeof object.aggregateMetrics !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.EvaluationReference.aggregateMetrics: object expected");
                                message.aggregateMetrics = $root.google.cloud.documentai.v1.Evaluation.Metrics.fromObject(object.aggregateMetrics);
                            }
                            if (object.aggregateMetricsExact != null) {
                                if (typeof object.aggregateMetricsExact !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.EvaluationReference.aggregateMetricsExact: object expected");
                                message.aggregateMetricsExact = $root.google.cloud.documentai.v1.Evaluation.Metrics.fromObject(object.aggregateMetricsExact);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EvaluationReference message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.EvaluationReference
                         * @static
                         * @param {google.cloud.documentai.v1.EvaluationReference} message EvaluationReference
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EvaluationReference.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.operation = "";
                                object.evaluation = "";
                                object.aggregateMetrics = null;
                                object.aggregateMetricsExact = null;
                            }
                            if (message.operation != null && message.hasOwnProperty("operation"))
                                object.operation = message.operation;
                            if (message.evaluation != null && message.hasOwnProperty("evaluation"))
                                object.evaluation = message.evaluation;
                            if (message.aggregateMetrics != null && message.hasOwnProperty("aggregateMetrics"))
                                object.aggregateMetrics = $root.google.cloud.documentai.v1.Evaluation.Metrics.toObject(message.aggregateMetrics, options);
                            if (message.aggregateMetricsExact != null && message.hasOwnProperty("aggregateMetricsExact"))
                                object.aggregateMetricsExact = $root.google.cloud.documentai.v1.Evaluation.Metrics.toObject(message.aggregateMetricsExact, options);
                            return object;
                        };
    
                        /**
                         * Converts this EvaluationReference to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.EvaluationReference
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EvaluationReference.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EvaluationReference
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.EvaluationReference
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EvaluationReference.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.EvaluationReference";
                        };
    
                        return EvaluationReference;
                    })();
    
                    v1.Evaluation = (function() {
    
                        /**
                         * Properties of an Evaluation.
                         * @memberof google.cloud.documentai.v1
                         * @interface IEvaluation
                         * @property {string|null} [name] Evaluation name
                         * @property {google.protobuf.ITimestamp|null} [createTime] Evaluation createTime
                         * @property {google.cloud.documentai.v1.Evaluation.ICounters|null} [documentCounters] Evaluation documentCounters
                         * @property {google.cloud.documentai.v1.Evaluation.IMultiConfidenceMetrics|null} [allEntitiesMetrics] Evaluation allEntitiesMetrics
                         * @property {Object.<string,google.cloud.documentai.v1.Evaluation.IMultiConfidenceMetrics>|null} [entityMetrics] Evaluation entityMetrics
                         * @property {string|null} [kmsKeyName] Evaluation kmsKeyName
                         * @property {string|null} [kmsKeyVersionName] Evaluation kmsKeyVersionName
                         */
    
                        /**
                         * Constructs a new Evaluation.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents an Evaluation.
                         * @implements IEvaluation
                         * @constructor
                         * @param {google.cloud.documentai.v1.IEvaluation=} [properties] Properties to set
                         */
                        function Evaluation(properties) {
                            this.entityMetrics = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Evaluation name.
                         * @member {string} name
                         * @memberof google.cloud.documentai.v1.Evaluation
                         * @instance
                         */
                        Evaluation.prototype.name = "";
    
                        /**
                         * Evaluation createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.documentai.v1.Evaluation
                         * @instance
                         */
                        Evaluation.prototype.createTime = null;
    
                        /**
                         * Evaluation documentCounters.
                         * @member {google.cloud.documentai.v1.Evaluation.ICounters|null|undefined} documentCounters
                         * @memberof google.cloud.documentai.v1.Evaluation
                         * @instance
                         */
                        Evaluation.prototype.documentCounters = null;
    
                        /**
                         * Evaluation allEntitiesMetrics.
                         * @member {google.cloud.documentai.v1.Evaluation.IMultiConfidenceMetrics|null|undefined} allEntitiesMetrics
                         * @memberof google.cloud.documentai.v1.Evaluation
                         * @instance
                         */
                        Evaluation.prototype.allEntitiesMetrics = null;
    
                        /**
                         * Evaluation entityMetrics.
                         * @member {Object.<string,google.cloud.documentai.v1.Evaluation.IMultiConfidenceMetrics>} entityMetrics
                         * @memberof google.cloud.documentai.v1.Evaluation
                         * @instance
                         */
                        Evaluation.prototype.entityMetrics = $util.emptyObject;
    
                        /**
                         * Evaluation kmsKeyName.
                         * @member {string} kmsKeyName
                         * @memberof google.cloud.documentai.v1.Evaluation
                         * @instance
                         */
                        Evaluation.prototype.kmsKeyName = "";
    
                        /**
                         * Evaluation kmsKeyVersionName.
                         * @member {string} kmsKeyVersionName
                         * @memberof google.cloud.documentai.v1.Evaluation
                         * @instance
                         */
                        Evaluation.prototype.kmsKeyVersionName = "";
    
                        /**
                         * Creates a new Evaluation instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.Evaluation
                         * @static
                         * @param {google.cloud.documentai.v1.IEvaluation=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.Evaluation} Evaluation instance
                         */
                        Evaluation.create = function create(properties) {
                            return new Evaluation(properties);
                        };
    
                        /**
                         * Encodes the specified Evaluation message. Does not implicitly {@link google.cloud.documentai.v1.Evaluation.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.Evaluation
                         * @static
                         * @param {google.cloud.documentai.v1.IEvaluation} message Evaluation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Evaluation.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.allEntitiesMetrics != null && Object.hasOwnProperty.call(message, "allEntitiesMetrics"))
                                $root.google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics.encode(message.allEntitiesMetrics, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.entityMetrics != null && Object.hasOwnProperty.call(message, "entityMetrics"))
                                for (var keys = Object.keys(message.entityMetrics), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics.encode(message.entityMetrics[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.documentCounters != null && Object.hasOwnProperty.call(message, "documentCounters"))
                                $root.google.cloud.documentai.v1.Evaluation.Counters.encode(message.documentCounters, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.kmsKeyName != null && Object.hasOwnProperty.call(message, "kmsKeyName"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.kmsKeyName);
                            if (message.kmsKeyVersionName != null && Object.hasOwnProperty.call(message, "kmsKeyVersionName"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.kmsKeyVersionName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Evaluation message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Evaluation.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.Evaluation
                         * @static
                         * @param {google.cloud.documentai.v1.IEvaluation} message Evaluation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Evaluation.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Evaluation message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.Evaluation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.Evaluation} Evaluation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Evaluation.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Evaluation(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.documentCounters = $root.google.cloud.documentai.v1.Evaluation.Counters.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.allEntitiesMetrics = $root.google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        if (message.entityMetrics === $util.emptyObject)
                                            message.entityMetrics = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.entityMetrics[key] = value;
                                        break;
                                    }
                                case 6: {
                                        message.kmsKeyName = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.kmsKeyVersionName = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Evaluation message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.Evaluation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.Evaluation} Evaluation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Evaluation.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Evaluation message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.Evaluation
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Evaluation.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.documentCounters != null && message.hasOwnProperty("documentCounters")) {
                                var error = $root.google.cloud.documentai.v1.Evaluation.Counters.verify(message.documentCounters);
                                if (error)
                                    return "documentCounters." + error;
                            }
                            if (message.allEntitiesMetrics != null && message.hasOwnProperty("allEntitiesMetrics")) {
                                var error = $root.google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics.verify(message.allEntitiesMetrics);
                                if (error)
                                    return "allEntitiesMetrics." + error;
                            }
                            if (message.entityMetrics != null && message.hasOwnProperty("entityMetrics")) {
                                if (!$util.isObject(message.entityMetrics))
                                    return "entityMetrics: object expected";
                                var key = Object.keys(message.entityMetrics);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics.verify(message.entityMetrics[key[i]]);
                                    if (error)
                                        return "entityMetrics." + error;
                                }
                            }
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                if (!$util.isString(message.kmsKeyName))
                                    return "kmsKeyName: string expected";
                            if (message.kmsKeyVersionName != null && message.hasOwnProperty("kmsKeyVersionName"))
                                if (!$util.isString(message.kmsKeyVersionName))
                                    return "kmsKeyVersionName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an Evaluation message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.Evaluation
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.Evaluation} Evaluation
                         */
                        Evaluation.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.Evaluation)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.Evaluation();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.Evaluation.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.documentCounters != null) {
                                if (typeof object.documentCounters !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.Evaluation.documentCounters: object expected");
                                message.documentCounters = $root.google.cloud.documentai.v1.Evaluation.Counters.fromObject(object.documentCounters);
                            }
                            if (object.allEntitiesMetrics != null) {
                                if (typeof object.allEntitiesMetrics !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.Evaluation.allEntitiesMetrics: object expected");
                                message.allEntitiesMetrics = $root.google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics.fromObject(object.allEntitiesMetrics);
                            }
                            if (object.entityMetrics) {
                                if (typeof object.entityMetrics !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.Evaluation.entityMetrics: object expected");
                                message.entityMetrics = {};
                                for (var keys = Object.keys(object.entityMetrics), i = 0; i < keys.length; ++i) {
                                    if (typeof object.entityMetrics[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Evaluation.entityMetrics: object expected");
                                    message.entityMetrics[keys[i]] = $root.google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics.fromObject(object.entityMetrics[keys[i]]);
                                }
                            }
                            if (object.kmsKeyName != null)
                                message.kmsKeyName = String(object.kmsKeyName);
                            if (object.kmsKeyVersionName != null)
                                message.kmsKeyVersionName = String(object.kmsKeyVersionName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Evaluation message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.Evaluation
                         * @static
                         * @param {google.cloud.documentai.v1.Evaluation} message Evaluation
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Evaluation.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.entityMetrics = {};
                            if (options.defaults) {
                                object.name = "";
                                object.createTime = null;
                                object.allEntitiesMetrics = null;
                                object.documentCounters = null;
                                object.kmsKeyName = "";
                                object.kmsKeyVersionName = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.allEntitiesMetrics != null && message.hasOwnProperty("allEntitiesMetrics"))
                                object.allEntitiesMetrics = $root.google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics.toObject(message.allEntitiesMetrics, options);
                            var keys2;
                            if (message.entityMetrics && (keys2 = Object.keys(message.entityMetrics)).length) {
                                object.entityMetrics = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.entityMetrics[keys2[j]] = $root.google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics.toObject(message.entityMetrics[keys2[j]], options);
                            }
                            if (message.documentCounters != null && message.hasOwnProperty("documentCounters"))
                                object.documentCounters = $root.google.cloud.documentai.v1.Evaluation.Counters.toObject(message.documentCounters, options);
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                object.kmsKeyName = message.kmsKeyName;
                            if (message.kmsKeyVersionName != null && message.hasOwnProperty("kmsKeyVersionName"))
                                object.kmsKeyVersionName = message.kmsKeyVersionName;
                            return object;
                        };
    
                        /**
                         * Converts this Evaluation to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.Evaluation
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Evaluation.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Evaluation
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.Evaluation
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Evaluation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.Evaluation";
                        };
    
                        Evaluation.Counters = (function() {
    
                            /**
                             * Properties of a Counters.
                             * @memberof google.cloud.documentai.v1.Evaluation
                             * @interface ICounters
                             * @property {number|null} [inputDocumentsCount] Counters inputDocumentsCount
                             * @property {number|null} [invalidDocumentsCount] Counters invalidDocumentsCount
                             * @property {number|null} [failedDocumentsCount] Counters failedDocumentsCount
                             * @property {number|null} [evaluatedDocumentsCount] Counters evaluatedDocumentsCount
                             */
    
                            /**
                             * Constructs a new Counters.
                             * @memberof google.cloud.documentai.v1.Evaluation
                             * @classdesc Represents a Counters.
                             * @implements ICounters
                             * @constructor
                             * @param {google.cloud.documentai.v1.Evaluation.ICounters=} [properties] Properties to set
                             */
                            function Counters(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Counters inputDocumentsCount.
                             * @member {number} inputDocumentsCount
                             * @memberof google.cloud.documentai.v1.Evaluation.Counters
                             * @instance
                             */
                            Counters.prototype.inputDocumentsCount = 0;
    
                            /**
                             * Counters invalidDocumentsCount.
                             * @member {number} invalidDocumentsCount
                             * @memberof google.cloud.documentai.v1.Evaluation.Counters
                             * @instance
                             */
                            Counters.prototype.invalidDocumentsCount = 0;
    
                            /**
                             * Counters failedDocumentsCount.
                             * @member {number} failedDocumentsCount
                             * @memberof google.cloud.documentai.v1.Evaluation.Counters
                             * @instance
                             */
                            Counters.prototype.failedDocumentsCount = 0;
    
                            /**
                             * Counters evaluatedDocumentsCount.
                             * @member {number} evaluatedDocumentsCount
                             * @memberof google.cloud.documentai.v1.Evaluation.Counters
                             * @instance
                             */
                            Counters.prototype.evaluatedDocumentsCount = 0;
    
                            /**
                             * Creates a new Counters instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.Evaluation.Counters
                             * @static
                             * @param {google.cloud.documentai.v1.Evaluation.ICounters=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.Evaluation.Counters} Counters instance
                             */
                            Counters.create = function create(properties) {
                                return new Counters(properties);
                            };
    
                            /**
                             * Encodes the specified Counters message. Does not implicitly {@link google.cloud.documentai.v1.Evaluation.Counters.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.Evaluation.Counters
                             * @static
                             * @param {google.cloud.documentai.v1.Evaluation.ICounters} message Counters message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Counters.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.inputDocumentsCount != null && Object.hasOwnProperty.call(message, "inputDocumentsCount"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.inputDocumentsCount);
                                if (message.invalidDocumentsCount != null && Object.hasOwnProperty.call(message, "invalidDocumentsCount"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.invalidDocumentsCount);
                                if (message.failedDocumentsCount != null && Object.hasOwnProperty.call(message, "failedDocumentsCount"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.failedDocumentsCount);
                                if (message.evaluatedDocumentsCount != null && Object.hasOwnProperty.call(message, "evaluatedDocumentsCount"))
                                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.evaluatedDocumentsCount);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Counters message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Evaluation.Counters.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.Evaluation.Counters
                             * @static
                             * @param {google.cloud.documentai.v1.Evaluation.ICounters} message Counters message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Counters.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Counters message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.Evaluation.Counters
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.Evaluation.Counters} Counters
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Counters.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Evaluation.Counters();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.inputDocumentsCount = reader.int32();
                                            break;
                                        }
                                    case 2: {
                                            message.invalidDocumentsCount = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.failedDocumentsCount = reader.int32();
                                            break;
                                        }
                                    case 4: {
                                            message.evaluatedDocumentsCount = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Counters message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.Evaluation.Counters
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.Evaluation.Counters} Counters
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Counters.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Counters message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.Evaluation.Counters
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Counters.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.inputDocumentsCount != null && message.hasOwnProperty("inputDocumentsCount"))
                                    if (!$util.isInteger(message.inputDocumentsCount))
                                        return "inputDocumentsCount: integer expected";
                                if (message.invalidDocumentsCount != null && message.hasOwnProperty("invalidDocumentsCount"))
                                    if (!$util.isInteger(message.invalidDocumentsCount))
                                        return "invalidDocumentsCount: integer expected";
                                if (message.failedDocumentsCount != null && message.hasOwnProperty("failedDocumentsCount"))
                                    if (!$util.isInteger(message.failedDocumentsCount))
                                        return "failedDocumentsCount: integer expected";
                                if (message.evaluatedDocumentsCount != null && message.hasOwnProperty("evaluatedDocumentsCount"))
                                    if (!$util.isInteger(message.evaluatedDocumentsCount))
                                        return "evaluatedDocumentsCount: integer expected";
                                return null;
                            };
    
                            /**
                             * Creates a Counters message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.Evaluation.Counters
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.Evaluation.Counters} Counters
                             */
                            Counters.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.Evaluation.Counters)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.Evaluation.Counters();
                                if (object.inputDocumentsCount != null)
                                    message.inputDocumentsCount = object.inputDocumentsCount | 0;
                                if (object.invalidDocumentsCount != null)
                                    message.invalidDocumentsCount = object.invalidDocumentsCount | 0;
                                if (object.failedDocumentsCount != null)
                                    message.failedDocumentsCount = object.failedDocumentsCount | 0;
                                if (object.evaluatedDocumentsCount != null)
                                    message.evaluatedDocumentsCount = object.evaluatedDocumentsCount | 0;
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Counters message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.Evaluation.Counters
                             * @static
                             * @param {google.cloud.documentai.v1.Evaluation.Counters} message Counters
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Counters.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.inputDocumentsCount = 0;
                                    object.invalidDocumentsCount = 0;
                                    object.failedDocumentsCount = 0;
                                    object.evaluatedDocumentsCount = 0;
                                }
                                if (message.inputDocumentsCount != null && message.hasOwnProperty("inputDocumentsCount"))
                                    object.inputDocumentsCount = message.inputDocumentsCount;
                                if (message.invalidDocumentsCount != null && message.hasOwnProperty("invalidDocumentsCount"))
                                    object.invalidDocumentsCount = message.invalidDocumentsCount;
                                if (message.failedDocumentsCount != null && message.hasOwnProperty("failedDocumentsCount"))
                                    object.failedDocumentsCount = message.failedDocumentsCount;
                                if (message.evaluatedDocumentsCount != null && message.hasOwnProperty("evaluatedDocumentsCount"))
                                    object.evaluatedDocumentsCount = message.evaluatedDocumentsCount;
                                return object;
                            };
    
                            /**
                             * Converts this Counters to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.Evaluation.Counters
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Counters.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Counters
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.Evaluation.Counters
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Counters.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.Evaluation.Counters";
                            };
    
                            return Counters;
                        })();
    
                        Evaluation.Metrics = (function() {
    
                            /**
                             * Properties of a Metrics.
                             * @memberof google.cloud.documentai.v1.Evaluation
                             * @interface IMetrics
                             * @property {number|null} [precision] Metrics precision
                             * @property {number|null} [recall] Metrics recall
                             * @property {number|null} [f1Score] Metrics f1Score
                             * @property {number|null} [predictedOccurrencesCount] Metrics predictedOccurrencesCount
                             * @property {number|null} [groundTruthOccurrencesCount] Metrics groundTruthOccurrencesCount
                             * @property {number|null} [predictedDocumentCount] Metrics predictedDocumentCount
                             * @property {number|null} [groundTruthDocumentCount] Metrics groundTruthDocumentCount
                             * @property {number|null} [truePositivesCount] Metrics truePositivesCount
                             * @property {number|null} [falsePositivesCount] Metrics falsePositivesCount
                             * @property {number|null} [falseNegativesCount] Metrics falseNegativesCount
                             * @property {number|null} [totalDocumentsCount] Metrics totalDocumentsCount
                             */
    
                            /**
                             * Constructs a new Metrics.
                             * @memberof google.cloud.documentai.v1.Evaluation
                             * @classdesc Represents a Metrics.
                             * @implements IMetrics
                             * @constructor
                             * @param {google.cloud.documentai.v1.Evaluation.IMetrics=} [properties] Properties to set
                             */
                            function Metrics(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Metrics precision.
                             * @member {number} precision
                             * @memberof google.cloud.documentai.v1.Evaluation.Metrics
                             * @instance
                             */
                            Metrics.prototype.precision = 0;
    
                            /**
                             * Metrics recall.
                             * @member {number} recall
                             * @memberof google.cloud.documentai.v1.Evaluation.Metrics
                             * @instance
                             */
                            Metrics.prototype.recall = 0;
    
                            /**
                             * Metrics f1Score.
                             * @member {number} f1Score
                             * @memberof google.cloud.documentai.v1.Evaluation.Metrics
                             * @instance
                             */
                            Metrics.prototype.f1Score = 0;
    
                            /**
                             * Metrics predictedOccurrencesCount.
                             * @member {number} predictedOccurrencesCount
                             * @memberof google.cloud.documentai.v1.Evaluation.Metrics
                             * @instance
                             */
                            Metrics.prototype.predictedOccurrencesCount = 0;
    
                            /**
                             * Metrics groundTruthOccurrencesCount.
                             * @member {number} groundTruthOccurrencesCount
                             * @memberof google.cloud.documentai.v1.Evaluation.Metrics
                             * @instance
                             */
                            Metrics.prototype.groundTruthOccurrencesCount = 0;
    
                            /**
                             * Metrics predictedDocumentCount.
                             * @member {number} predictedDocumentCount
                             * @memberof google.cloud.documentai.v1.Evaluation.Metrics
                             * @instance
                             */
                            Metrics.prototype.predictedDocumentCount = 0;
    
                            /**
                             * Metrics groundTruthDocumentCount.
                             * @member {number} groundTruthDocumentCount
                             * @memberof google.cloud.documentai.v1.Evaluation.Metrics
                             * @instance
                             */
                            Metrics.prototype.groundTruthDocumentCount = 0;
    
                            /**
                             * Metrics truePositivesCount.
                             * @member {number} truePositivesCount
                             * @memberof google.cloud.documentai.v1.Evaluation.Metrics
                             * @instance
                             */
                            Metrics.prototype.truePositivesCount = 0;
    
                            /**
                             * Metrics falsePositivesCount.
                             * @member {number} falsePositivesCount
                             * @memberof google.cloud.documentai.v1.Evaluation.Metrics
                             * @instance
                             */
                            Metrics.prototype.falsePositivesCount = 0;
    
                            /**
                             * Metrics falseNegativesCount.
                             * @member {number} falseNegativesCount
                             * @memberof google.cloud.documentai.v1.Evaluation.Metrics
                             * @instance
                             */
                            Metrics.prototype.falseNegativesCount = 0;
    
                            /**
                             * Metrics totalDocumentsCount.
                             * @member {number} totalDocumentsCount
                             * @memberof google.cloud.documentai.v1.Evaluation.Metrics
                             * @instance
                             */
                            Metrics.prototype.totalDocumentsCount = 0;
    
                            /**
                             * Creates a new Metrics instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.Evaluation.Metrics
                             * @static
                             * @param {google.cloud.documentai.v1.Evaluation.IMetrics=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.Evaluation.Metrics} Metrics instance
                             */
                            Metrics.create = function create(properties) {
                                return new Metrics(properties);
                            };
    
                            /**
                             * Encodes the specified Metrics message. Does not implicitly {@link google.cloud.documentai.v1.Evaluation.Metrics.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.Evaluation.Metrics
                             * @static
                             * @param {google.cloud.documentai.v1.Evaluation.IMetrics} message Metrics message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Metrics.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.precision != null && Object.hasOwnProperty.call(message, "precision"))
                                    writer.uint32(/* id 1, wireType 5 =*/13).float(message.precision);
                                if (message.recall != null && Object.hasOwnProperty.call(message, "recall"))
                                    writer.uint32(/* id 2, wireType 5 =*/21).float(message.recall);
                                if (message.f1Score != null && Object.hasOwnProperty.call(message, "f1Score"))
                                    writer.uint32(/* id 3, wireType 5 =*/29).float(message.f1Score);
                                if (message.predictedOccurrencesCount != null && Object.hasOwnProperty.call(message, "predictedOccurrencesCount"))
                                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.predictedOccurrencesCount);
                                if (message.groundTruthOccurrencesCount != null && Object.hasOwnProperty.call(message, "groundTruthOccurrencesCount"))
                                    writer.uint32(/* id 5, wireType 0 =*/40).int32(message.groundTruthOccurrencesCount);
                                if (message.truePositivesCount != null && Object.hasOwnProperty.call(message, "truePositivesCount"))
                                    writer.uint32(/* id 6, wireType 0 =*/48).int32(message.truePositivesCount);
                                if (message.falsePositivesCount != null && Object.hasOwnProperty.call(message, "falsePositivesCount"))
                                    writer.uint32(/* id 7, wireType 0 =*/56).int32(message.falsePositivesCount);
                                if (message.falseNegativesCount != null && Object.hasOwnProperty.call(message, "falseNegativesCount"))
                                    writer.uint32(/* id 8, wireType 0 =*/64).int32(message.falseNegativesCount);
                                if (message.totalDocumentsCount != null && Object.hasOwnProperty.call(message, "totalDocumentsCount"))
                                    writer.uint32(/* id 9, wireType 0 =*/72).int32(message.totalDocumentsCount);
                                if (message.predictedDocumentCount != null && Object.hasOwnProperty.call(message, "predictedDocumentCount"))
                                    writer.uint32(/* id 10, wireType 0 =*/80).int32(message.predictedDocumentCount);
                                if (message.groundTruthDocumentCount != null && Object.hasOwnProperty.call(message, "groundTruthDocumentCount"))
                                    writer.uint32(/* id 11, wireType 0 =*/88).int32(message.groundTruthDocumentCount);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Metrics message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Evaluation.Metrics.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.Evaluation.Metrics
                             * @static
                             * @param {google.cloud.documentai.v1.Evaluation.IMetrics} message Metrics message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Metrics.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Metrics message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.Evaluation.Metrics
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.Evaluation.Metrics} Metrics
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Metrics.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Evaluation.Metrics();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.precision = reader.float();
                                            break;
                                        }
                                    case 2: {
                                            message.recall = reader.float();
                                            break;
                                        }
                                    case 3: {
                                            message.f1Score = reader.float();
                                            break;
                                        }
                                    case 4: {
                                            message.predictedOccurrencesCount = reader.int32();
                                            break;
                                        }
                                    case 5: {
                                            message.groundTruthOccurrencesCount = reader.int32();
                                            break;
                                        }
                                    case 10: {
                                            message.predictedDocumentCount = reader.int32();
                                            break;
                                        }
                                    case 11: {
                                            message.groundTruthDocumentCount = reader.int32();
                                            break;
                                        }
                                    case 6: {
                                            message.truePositivesCount = reader.int32();
                                            break;
                                        }
                                    case 7: {
                                            message.falsePositivesCount = reader.int32();
                                            break;
                                        }
                                    case 8: {
                                            message.falseNegativesCount = reader.int32();
                                            break;
                                        }
                                    case 9: {
                                            message.totalDocumentsCount = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Metrics message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.Evaluation.Metrics
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.Evaluation.Metrics} Metrics
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Metrics.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Metrics message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.Evaluation.Metrics
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Metrics.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.precision != null && message.hasOwnProperty("precision"))
                                    if (typeof message.precision !== "number")
                                        return "precision: number expected";
                                if (message.recall != null && message.hasOwnProperty("recall"))
                                    if (typeof message.recall !== "number")
                                        return "recall: number expected";
                                if (message.f1Score != null && message.hasOwnProperty("f1Score"))
                                    if (typeof message.f1Score !== "number")
                                        return "f1Score: number expected";
                                if (message.predictedOccurrencesCount != null && message.hasOwnProperty("predictedOccurrencesCount"))
                                    if (!$util.isInteger(message.predictedOccurrencesCount))
                                        return "predictedOccurrencesCount: integer expected";
                                if (message.groundTruthOccurrencesCount != null && message.hasOwnProperty("groundTruthOccurrencesCount"))
                                    if (!$util.isInteger(message.groundTruthOccurrencesCount))
                                        return "groundTruthOccurrencesCount: integer expected";
                                if (message.predictedDocumentCount != null && message.hasOwnProperty("predictedDocumentCount"))
                                    if (!$util.isInteger(message.predictedDocumentCount))
                                        return "predictedDocumentCount: integer expected";
                                if (message.groundTruthDocumentCount != null && message.hasOwnProperty("groundTruthDocumentCount"))
                                    if (!$util.isInteger(message.groundTruthDocumentCount))
                                        return "groundTruthDocumentCount: integer expected";
                                if (message.truePositivesCount != null && message.hasOwnProperty("truePositivesCount"))
                                    if (!$util.isInteger(message.truePositivesCount))
                                        return "truePositivesCount: integer expected";
                                if (message.falsePositivesCount != null && message.hasOwnProperty("falsePositivesCount"))
                                    if (!$util.isInteger(message.falsePositivesCount))
                                        return "falsePositivesCount: integer expected";
                                if (message.falseNegativesCount != null && message.hasOwnProperty("falseNegativesCount"))
                                    if (!$util.isInteger(message.falseNegativesCount))
                                        return "falseNegativesCount: integer expected";
                                if (message.totalDocumentsCount != null && message.hasOwnProperty("totalDocumentsCount"))
                                    if (!$util.isInteger(message.totalDocumentsCount))
                                        return "totalDocumentsCount: integer expected";
                                return null;
                            };
    
                            /**
                             * Creates a Metrics message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.Evaluation.Metrics
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.Evaluation.Metrics} Metrics
                             */
                            Metrics.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.Evaluation.Metrics)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.Evaluation.Metrics();
                                if (object.precision != null)
                                    message.precision = Number(object.precision);
                                if (object.recall != null)
                                    message.recall = Number(object.recall);
                                if (object.f1Score != null)
                                    message.f1Score = Number(object.f1Score);
                                if (object.predictedOccurrencesCount != null)
                                    message.predictedOccurrencesCount = object.predictedOccurrencesCount | 0;
                                if (object.groundTruthOccurrencesCount != null)
                                    message.groundTruthOccurrencesCount = object.groundTruthOccurrencesCount | 0;
                                if (object.predictedDocumentCount != null)
                                    message.predictedDocumentCount = object.predictedDocumentCount | 0;
                                if (object.groundTruthDocumentCount != null)
                                    message.groundTruthDocumentCount = object.groundTruthDocumentCount | 0;
                                if (object.truePositivesCount != null)
                                    message.truePositivesCount = object.truePositivesCount | 0;
                                if (object.falsePositivesCount != null)
                                    message.falsePositivesCount = object.falsePositivesCount | 0;
                                if (object.falseNegativesCount != null)
                                    message.falseNegativesCount = object.falseNegativesCount | 0;
                                if (object.totalDocumentsCount != null)
                                    message.totalDocumentsCount = object.totalDocumentsCount | 0;
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Metrics message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.Evaluation.Metrics
                             * @static
                             * @param {google.cloud.documentai.v1.Evaluation.Metrics} message Metrics
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Metrics.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.precision = 0;
                                    object.recall = 0;
                                    object.f1Score = 0;
                                    object.predictedOccurrencesCount = 0;
                                    object.groundTruthOccurrencesCount = 0;
                                    object.truePositivesCount = 0;
                                    object.falsePositivesCount = 0;
                                    object.falseNegativesCount = 0;
                                    object.totalDocumentsCount = 0;
                                    object.predictedDocumentCount = 0;
                                    object.groundTruthDocumentCount = 0;
                                }
                                if (message.precision != null && message.hasOwnProperty("precision"))
                                    object.precision = options.json && !isFinite(message.precision) ? String(message.precision) : message.precision;
                                if (message.recall != null && message.hasOwnProperty("recall"))
                                    object.recall = options.json && !isFinite(message.recall) ? String(message.recall) : message.recall;
                                if (message.f1Score != null && message.hasOwnProperty("f1Score"))
                                    object.f1Score = options.json && !isFinite(message.f1Score) ? String(message.f1Score) : message.f1Score;
                                if (message.predictedOccurrencesCount != null && message.hasOwnProperty("predictedOccurrencesCount"))
                                    object.predictedOccurrencesCount = message.predictedOccurrencesCount;
                                if (message.groundTruthOccurrencesCount != null && message.hasOwnProperty("groundTruthOccurrencesCount"))
                                    object.groundTruthOccurrencesCount = message.groundTruthOccurrencesCount;
                                if (message.truePositivesCount != null && message.hasOwnProperty("truePositivesCount"))
                                    object.truePositivesCount = message.truePositivesCount;
                                if (message.falsePositivesCount != null && message.hasOwnProperty("falsePositivesCount"))
                                    object.falsePositivesCount = message.falsePositivesCount;
                                if (message.falseNegativesCount != null && message.hasOwnProperty("falseNegativesCount"))
                                    object.falseNegativesCount = message.falseNegativesCount;
                                if (message.totalDocumentsCount != null && message.hasOwnProperty("totalDocumentsCount"))
                                    object.totalDocumentsCount = message.totalDocumentsCount;
                                if (message.predictedDocumentCount != null && message.hasOwnProperty("predictedDocumentCount"))
                                    object.predictedDocumentCount = message.predictedDocumentCount;
                                if (message.groundTruthDocumentCount != null && message.hasOwnProperty("groundTruthDocumentCount"))
                                    object.groundTruthDocumentCount = message.groundTruthDocumentCount;
                                return object;
                            };
    
                            /**
                             * Converts this Metrics to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.Evaluation.Metrics
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Metrics.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Metrics
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.Evaluation.Metrics
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Metrics.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.Evaluation.Metrics";
                            };
    
                            return Metrics;
                        })();
    
                        Evaluation.ConfidenceLevelMetrics = (function() {
    
                            /**
                             * Properties of a ConfidenceLevelMetrics.
                             * @memberof google.cloud.documentai.v1.Evaluation
                             * @interface IConfidenceLevelMetrics
                             * @property {number|null} [confidenceLevel] ConfidenceLevelMetrics confidenceLevel
                             * @property {google.cloud.documentai.v1.Evaluation.IMetrics|null} [metrics] ConfidenceLevelMetrics metrics
                             */
    
                            /**
                             * Constructs a new ConfidenceLevelMetrics.
                             * @memberof google.cloud.documentai.v1.Evaluation
                             * @classdesc Represents a ConfidenceLevelMetrics.
                             * @implements IConfidenceLevelMetrics
                             * @constructor
                             * @param {google.cloud.documentai.v1.Evaluation.IConfidenceLevelMetrics=} [properties] Properties to set
                             */
                            function ConfidenceLevelMetrics(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ConfidenceLevelMetrics confidenceLevel.
                             * @member {number} confidenceLevel
                             * @memberof google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics
                             * @instance
                             */
                            ConfidenceLevelMetrics.prototype.confidenceLevel = 0;
    
                            /**
                             * ConfidenceLevelMetrics metrics.
                             * @member {google.cloud.documentai.v1.Evaluation.IMetrics|null|undefined} metrics
                             * @memberof google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics
                             * @instance
                             */
                            ConfidenceLevelMetrics.prototype.metrics = null;
    
                            /**
                             * Creates a new ConfidenceLevelMetrics instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics
                             * @static
                             * @param {google.cloud.documentai.v1.Evaluation.IConfidenceLevelMetrics=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics} ConfidenceLevelMetrics instance
                             */
                            ConfidenceLevelMetrics.create = function create(properties) {
                                return new ConfidenceLevelMetrics(properties);
                            };
    
                            /**
                             * Encodes the specified ConfidenceLevelMetrics message. Does not implicitly {@link google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics
                             * @static
                             * @param {google.cloud.documentai.v1.Evaluation.IConfidenceLevelMetrics} message ConfidenceLevelMetrics message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConfidenceLevelMetrics.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.confidenceLevel != null && Object.hasOwnProperty.call(message, "confidenceLevel"))
                                    writer.uint32(/* id 1, wireType 5 =*/13).float(message.confidenceLevel);
                                if (message.metrics != null && Object.hasOwnProperty.call(message, "metrics"))
                                    $root.google.cloud.documentai.v1.Evaluation.Metrics.encode(message.metrics, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ConfidenceLevelMetrics message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics
                             * @static
                             * @param {google.cloud.documentai.v1.Evaluation.IConfidenceLevelMetrics} message ConfidenceLevelMetrics message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConfidenceLevelMetrics.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ConfidenceLevelMetrics message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics} ConfidenceLevelMetrics
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConfidenceLevelMetrics.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.confidenceLevel = reader.float();
                                            break;
                                        }
                                    case 2: {
                                            message.metrics = $root.google.cloud.documentai.v1.Evaluation.Metrics.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ConfidenceLevelMetrics message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics} ConfidenceLevelMetrics
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConfidenceLevelMetrics.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ConfidenceLevelMetrics message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ConfidenceLevelMetrics.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.confidenceLevel != null && message.hasOwnProperty("confidenceLevel"))
                                    if (typeof message.confidenceLevel !== "number")
                                        return "confidenceLevel: number expected";
                                if (message.metrics != null && message.hasOwnProperty("metrics")) {
                                    var error = $root.google.cloud.documentai.v1.Evaluation.Metrics.verify(message.metrics);
                                    if (error)
                                        return "metrics." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ConfidenceLevelMetrics message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics} ConfidenceLevelMetrics
                             */
                            ConfidenceLevelMetrics.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics();
                                if (object.confidenceLevel != null)
                                    message.confidenceLevel = Number(object.confidenceLevel);
                                if (object.metrics != null) {
                                    if (typeof object.metrics !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics.metrics: object expected");
                                    message.metrics = $root.google.cloud.documentai.v1.Evaluation.Metrics.fromObject(object.metrics);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ConfidenceLevelMetrics message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics
                             * @static
                             * @param {google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics} message ConfidenceLevelMetrics
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ConfidenceLevelMetrics.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.confidenceLevel = 0;
                                    object.metrics = null;
                                }
                                if (message.confidenceLevel != null && message.hasOwnProperty("confidenceLevel"))
                                    object.confidenceLevel = options.json && !isFinite(message.confidenceLevel) ? String(message.confidenceLevel) : message.confidenceLevel;
                                if (message.metrics != null && message.hasOwnProperty("metrics"))
                                    object.metrics = $root.google.cloud.documentai.v1.Evaluation.Metrics.toObject(message.metrics, options);
                                return object;
                            };
    
                            /**
                             * Converts this ConfidenceLevelMetrics to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ConfidenceLevelMetrics.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ConfidenceLevelMetrics
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ConfidenceLevelMetrics.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics";
                            };
    
                            return ConfidenceLevelMetrics;
                        })();
    
                        Evaluation.MultiConfidenceMetrics = (function() {
    
                            /**
                             * Properties of a MultiConfidenceMetrics.
                             * @memberof google.cloud.documentai.v1.Evaluation
                             * @interface IMultiConfidenceMetrics
                             * @property {Array.<google.cloud.documentai.v1.Evaluation.IConfidenceLevelMetrics>|null} [confidenceLevelMetrics] MultiConfidenceMetrics confidenceLevelMetrics
                             * @property {Array.<google.cloud.documentai.v1.Evaluation.IConfidenceLevelMetrics>|null} [confidenceLevelMetricsExact] MultiConfidenceMetrics confidenceLevelMetricsExact
                             * @property {number|null} [auprc] MultiConfidenceMetrics auprc
                             * @property {number|null} [estimatedCalibrationError] MultiConfidenceMetrics estimatedCalibrationError
                             * @property {number|null} [auprcExact] MultiConfidenceMetrics auprcExact
                             * @property {number|null} [estimatedCalibrationErrorExact] MultiConfidenceMetrics estimatedCalibrationErrorExact
                             * @property {google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics.MetricsType|null} [metricsType] MultiConfidenceMetrics metricsType
                             */
    
                            /**
                             * Constructs a new MultiConfidenceMetrics.
                             * @memberof google.cloud.documentai.v1.Evaluation
                             * @classdesc Represents a MultiConfidenceMetrics.
                             * @implements IMultiConfidenceMetrics
                             * @constructor
                             * @param {google.cloud.documentai.v1.Evaluation.IMultiConfidenceMetrics=} [properties] Properties to set
                             */
                            function MultiConfidenceMetrics(properties) {
                                this.confidenceLevelMetrics = [];
                                this.confidenceLevelMetricsExact = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * MultiConfidenceMetrics confidenceLevelMetrics.
                             * @member {Array.<google.cloud.documentai.v1.Evaluation.IConfidenceLevelMetrics>} confidenceLevelMetrics
                             * @memberof google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics
                             * @instance
                             */
                            MultiConfidenceMetrics.prototype.confidenceLevelMetrics = $util.emptyArray;
    
                            /**
                             * MultiConfidenceMetrics confidenceLevelMetricsExact.
                             * @member {Array.<google.cloud.documentai.v1.Evaluation.IConfidenceLevelMetrics>} confidenceLevelMetricsExact
                             * @memberof google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics
                             * @instance
                             */
                            MultiConfidenceMetrics.prototype.confidenceLevelMetricsExact = $util.emptyArray;
    
                            /**
                             * MultiConfidenceMetrics auprc.
                             * @member {number} auprc
                             * @memberof google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics
                             * @instance
                             */
                            MultiConfidenceMetrics.prototype.auprc = 0;
    
                            /**
                             * MultiConfidenceMetrics estimatedCalibrationError.
                             * @member {number} estimatedCalibrationError
                             * @memberof google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics
                             * @instance
                             */
                            MultiConfidenceMetrics.prototype.estimatedCalibrationError = 0;
    
                            /**
                             * MultiConfidenceMetrics auprcExact.
                             * @member {number} auprcExact
                             * @memberof google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics
                             * @instance
                             */
                            MultiConfidenceMetrics.prototype.auprcExact = 0;
    
                            /**
                             * MultiConfidenceMetrics estimatedCalibrationErrorExact.
                             * @member {number} estimatedCalibrationErrorExact
                             * @memberof google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics
                             * @instance
                             */
                            MultiConfidenceMetrics.prototype.estimatedCalibrationErrorExact = 0;
    
                            /**
                             * MultiConfidenceMetrics metricsType.
                             * @member {google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics.MetricsType} metricsType
                             * @memberof google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics
                             * @instance
                             */
                            MultiConfidenceMetrics.prototype.metricsType = 0;
    
                            /**
                             * Creates a new MultiConfidenceMetrics instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics
                             * @static
                             * @param {google.cloud.documentai.v1.Evaluation.IMultiConfidenceMetrics=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics} MultiConfidenceMetrics instance
                             */
                            MultiConfidenceMetrics.create = function create(properties) {
                                return new MultiConfidenceMetrics(properties);
                            };
    
                            /**
                             * Encodes the specified MultiConfidenceMetrics message. Does not implicitly {@link google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics
                             * @static
                             * @param {google.cloud.documentai.v1.Evaluation.IMultiConfidenceMetrics} message MultiConfidenceMetrics message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MultiConfidenceMetrics.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.confidenceLevelMetrics != null && message.confidenceLevelMetrics.length)
                                    for (var i = 0; i < message.confidenceLevelMetrics.length; ++i)
                                        $root.google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics.encode(message.confidenceLevelMetrics[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.auprc != null && Object.hasOwnProperty.call(message, "auprc"))
                                    writer.uint32(/* id 2, wireType 5 =*/21).float(message.auprc);
                                if (message.estimatedCalibrationError != null && Object.hasOwnProperty.call(message, "estimatedCalibrationError"))
                                    writer.uint32(/* id 3, wireType 5 =*/29).float(message.estimatedCalibrationError);
                                if (message.confidenceLevelMetricsExact != null && message.confidenceLevelMetricsExact.length)
                                    for (var i = 0; i < message.confidenceLevelMetricsExact.length; ++i)
                                        $root.google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics.encode(message.confidenceLevelMetricsExact[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.auprcExact != null && Object.hasOwnProperty.call(message, "auprcExact"))
                                    writer.uint32(/* id 5, wireType 5 =*/45).float(message.auprcExact);
                                if (message.estimatedCalibrationErrorExact != null && Object.hasOwnProperty.call(message, "estimatedCalibrationErrorExact"))
                                    writer.uint32(/* id 6, wireType 5 =*/53).float(message.estimatedCalibrationErrorExact);
                                if (message.metricsType != null && Object.hasOwnProperty.call(message, "metricsType"))
                                    writer.uint32(/* id 7, wireType 0 =*/56).int32(message.metricsType);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified MultiConfidenceMetrics message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics
                             * @static
                             * @param {google.cloud.documentai.v1.Evaluation.IMultiConfidenceMetrics} message MultiConfidenceMetrics message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MultiConfidenceMetrics.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a MultiConfidenceMetrics message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics} MultiConfidenceMetrics
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MultiConfidenceMetrics.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.confidenceLevelMetrics && message.confidenceLevelMetrics.length))
                                                message.confidenceLevelMetrics = [];
                                            message.confidenceLevelMetrics.push($root.google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 4: {
                                            if (!(message.confidenceLevelMetricsExact && message.confidenceLevelMetricsExact.length))
                                                message.confidenceLevelMetricsExact = [];
                                            message.confidenceLevelMetricsExact.push($root.google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 2: {
                                            message.auprc = reader.float();
                                            break;
                                        }
                                    case 3: {
                                            message.estimatedCalibrationError = reader.float();
                                            break;
                                        }
                                    case 5: {
                                            message.auprcExact = reader.float();
                                            break;
                                        }
                                    case 6: {
                                            message.estimatedCalibrationErrorExact = reader.float();
                                            break;
                                        }
                                    case 7: {
                                            message.metricsType = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a MultiConfidenceMetrics message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics} MultiConfidenceMetrics
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MultiConfidenceMetrics.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a MultiConfidenceMetrics message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            MultiConfidenceMetrics.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.confidenceLevelMetrics != null && message.hasOwnProperty("confidenceLevelMetrics")) {
                                    if (!Array.isArray(message.confidenceLevelMetrics))
                                        return "confidenceLevelMetrics: array expected";
                                    for (var i = 0; i < message.confidenceLevelMetrics.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics.verify(message.confidenceLevelMetrics[i]);
                                        if (error)
                                            return "confidenceLevelMetrics." + error;
                                    }
                                }
                                if (message.confidenceLevelMetricsExact != null && message.hasOwnProperty("confidenceLevelMetricsExact")) {
                                    if (!Array.isArray(message.confidenceLevelMetricsExact))
                                        return "confidenceLevelMetricsExact: array expected";
                                    for (var i = 0; i < message.confidenceLevelMetricsExact.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics.verify(message.confidenceLevelMetricsExact[i]);
                                        if (error)
                                            return "confidenceLevelMetricsExact." + error;
                                    }
                                }
                                if (message.auprc != null && message.hasOwnProperty("auprc"))
                                    if (typeof message.auprc !== "number")
                                        return "auprc: number expected";
                                if (message.estimatedCalibrationError != null && message.hasOwnProperty("estimatedCalibrationError"))
                                    if (typeof message.estimatedCalibrationError !== "number")
                                        return "estimatedCalibrationError: number expected";
                                if (message.auprcExact != null && message.hasOwnProperty("auprcExact"))
                                    if (typeof message.auprcExact !== "number")
                                        return "auprcExact: number expected";
                                if (message.estimatedCalibrationErrorExact != null && message.hasOwnProperty("estimatedCalibrationErrorExact"))
                                    if (typeof message.estimatedCalibrationErrorExact !== "number")
                                        return "estimatedCalibrationErrorExact: number expected";
                                if (message.metricsType != null && message.hasOwnProperty("metricsType"))
                                    switch (message.metricsType) {
                                    default:
                                        return "metricsType: enum value expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a MultiConfidenceMetrics message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics} MultiConfidenceMetrics
                             */
                            MultiConfidenceMetrics.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics();
                                if (object.confidenceLevelMetrics) {
                                    if (!Array.isArray(object.confidenceLevelMetrics))
                                        throw TypeError(".google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics.confidenceLevelMetrics: array expected");
                                    message.confidenceLevelMetrics = [];
                                    for (var i = 0; i < object.confidenceLevelMetrics.length; ++i) {
                                        if (typeof object.confidenceLevelMetrics[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics.confidenceLevelMetrics: object expected");
                                        message.confidenceLevelMetrics[i] = $root.google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics.fromObject(object.confidenceLevelMetrics[i]);
                                    }
                                }
                                if (object.confidenceLevelMetricsExact) {
                                    if (!Array.isArray(object.confidenceLevelMetricsExact))
                                        throw TypeError(".google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics.confidenceLevelMetricsExact: array expected");
                                    message.confidenceLevelMetricsExact = [];
                                    for (var i = 0; i < object.confidenceLevelMetricsExact.length; ++i) {
                                        if (typeof object.confidenceLevelMetricsExact[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics.confidenceLevelMetricsExact: object expected");
                                        message.confidenceLevelMetricsExact[i] = $root.google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics.fromObject(object.confidenceLevelMetricsExact[i]);
                                    }
                                }
                                if (object.auprc != null)
                                    message.auprc = Number(object.auprc);
                                if (object.estimatedCalibrationError != null)
                                    message.estimatedCalibrationError = Number(object.estimatedCalibrationError);
                                if (object.auprcExact != null)
                                    message.auprcExact = Number(object.auprcExact);
                                if (object.estimatedCalibrationErrorExact != null)
                                    message.estimatedCalibrationErrorExact = Number(object.estimatedCalibrationErrorExact);
                                switch (object.metricsType) {
                                default:
                                    if (typeof object.metricsType === "number") {
                                        message.metricsType = object.metricsType;
                                        break;
                                    }
                                    break;
                                case "METRICS_TYPE_UNSPECIFIED":
                                case 0:
                                    message.metricsType = 0;
                                    break;
                                case "AGGREGATE":
                                case 1:
                                    message.metricsType = 1;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a MultiConfidenceMetrics message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics
                             * @static
                             * @param {google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics} message MultiConfidenceMetrics
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            MultiConfidenceMetrics.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.confidenceLevelMetrics = [];
                                    object.confidenceLevelMetricsExact = [];
                                }
                                if (options.defaults) {
                                    object.auprc = 0;
                                    object.estimatedCalibrationError = 0;
                                    object.auprcExact = 0;
                                    object.estimatedCalibrationErrorExact = 0;
                                    object.metricsType = options.enums === String ? "METRICS_TYPE_UNSPECIFIED" : 0;
                                }
                                if (message.confidenceLevelMetrics && message.confidenceLevelMetrics.length) {
                                    object.confidenceLevelMetrics = [];
                                    for (var j = 0; j < message.confidenceLevelMetrics.length; ++j)
                                        object.confidenceLevelMetrics[j] = $root.google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics.toObject(message.confidenceLevelMetrics[j], options);
                                }
                                if (message.auprc != null && message.hasOwnProperty("auprc"))
                                    object.auprc = options.json && !isFinite(message.auprc) ? String(message.auprc) : message.auprc;
                                if (message.estimatedCalibrationError != null && message.hasOwnProperty("estimatedCalibrationError"))
                                    object.estimatedCalibrationError = options.json && !isFinite(message.estimatedCalibrationError) ? String(message.estimatedCalibrationError) : message.estimatedCalibrationError;
                                if (message.confidenceLevelMetricsExact && message.confidenceLevelMetricsExact.length) {
                                    object.confidenceLevelMetricsExact = [];
                                    for (var j = 0; j < message.confidenceLevelMetricsExact.length; ++j)
                                        object.confidenceLevelMetricsExact[j] = $root.google.cloud.documentai.v1.Evaluation.ConfidenceLevelMetrics.toObject(message.confidenceLevelMetricsExact[j], options);
                                }
                                if (message.auprcExact != null && message.hasOwnProperty("auprcExact"))
                                    object.auprcExact = options.json && !isFinite(message.auprcExact) ? String(message.auprcExact) : message.auprcExact;
                                if (message.estimatedCalibrationErrorExact != null && message.hasOwnProperty("estimatedCalibrationErrorExact"))
                                    object.estimatedCalibrationErrorExact = options.json && !isFinite(message.estimatedCalibrationErrorExact) ? String(message.estimatedCalibrationErrorExact) : message.estimatedCalibrationErrorExact;
                                if (message.metricsType != null && message.hasOwnProperty("metricsType"))
                                    object.metricsType = options.enums === String ? $root.google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics.MetricsType[message.metricsType] === undefined ? message.metricsType : $root.google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics.MetricsType[message.metricsType] : message.metricsType;
                                return object;
                            };
    
                            /**
                             * Converts this MultiConfidenceMetrics to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            MultiConfidenceMetrics.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for MultiConfidenceMetrics
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            MultiConfidenceMetrics.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics";
                            };
    
                            /**
                             * MetricsType enum.
                             * @name google.cloud.documentai.v1.Evaluation.MultiConfidenceMetrics.MetricsType
                             * @enum {number}
                             * @property {number} METRICS_TYPE_UNSPECIFIED=0 METRICS_TYPE_UNSPECIFIED value
                             * @property {number} AGGREGATE=1 AGGREGATE value
                             */
                            MultiConfidenceMetrics.MetricsType = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "METRICS_TYPE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "AGGREGATE"] = 1;
                                return values;
                            })();
    
                            return MultiConfidenceMetrics;
                        })();
    
                        return Evaluation;
                    })();
    
                    v1.CommonOperationMetadata = (function() {
    
                        /**
                         * Properties of a CommonOperationMetadata.
                         * @memberof google.cloud.documentai.v1
                         * @interface ICommonOperationMetadata
                         * @property {google.cloud.documentai.v1.CommonOperationMetadata.State|null} [state] CommonOperationMetadata state
                         * @property {string|null} [stateMessage] CommonOperationMetadata stateMessage
                         * @property {string|null} [resource] CommonOperationMetadata resource
                         * @property {google.protobuf.ITimestamp|null} [createTime] CommonOperationMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] CommonOperationMetadata updateTime
                         */
    
                        /**
                         * Constructs a new CommonOperationMetadata.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a CommonOperationMetadata.
                         * @implements ICommonOperationMetadata
                         * @constructor
                         * @param {google.cloud.documentai.v1.ICommonOperationMetadata=} [properties] Properties to set
                         */
                        function CommonOperationMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CommonOperationMetadata state.
                         * @member {google.cloud.documentai.v1.CommonOperationMetadata.State} state
                         * @memberof google.cloud.documentai.v1.CommonOperationMetadata
                         * @instance
                         */
                        CommonOperationMetadata.prototype.state = 0;
    
                        /**
                         * CommonOperationMetadata stateMessage.
                         * @member {string} stateMessage
                         * @memberof google.cloud.documentai.v1.CommonOperationMetadata
                         * @instance
                         */
                        CommonOperationMetadata.prototype.stateMessage = "";
    
                        /**
                         * CommonOperationMetadata resource.
                         * @member {string} resource
                         * @memberof google.cloud.documentai.v1.CommonOperationMetadata
                         * @instance
                         */
                        CommonOperationMetadata.prototype.resource = "";
    
                        /**
                         * CommonOperationMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.documentai.v1.CommonOperationMetadata
                         * @instance
                         */
                        CommonOperationMetadata.prototype.createTime = null;
    
                        /**
                         * CommonOperationMetadata updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.documentai.v1.CommonOperationMetadata
                         * @instance
                         */
                        CommonOperationMetadata.prototype.updateTime = null;
    
                        /**
                         * Creates a new CommonOperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.CommonOperationMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.ICommonOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.CommonOperationMetadata} CommonOperationMetadata instance
                         */
                        CommonOperationMetadata.create = function create(properties) {
                            return new CommonOperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified CommonOperationMetadata message. Does not implicitly {@link google.cloud.documentai.v1.CommonOperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.CommonOperationMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.ICommonOperationMetadata} message CommonOperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CommonOperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.state);
                            if (message.stateMessage != null && Object.hasOwnProperty.call(message, "stateMessage"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.stateMessage);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.resource);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CommonOperationMetadata message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.CommonOperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.CommonOperationMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.ICommonOperationMetadata} message CommonOperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CommonOperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CommonOperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.CommonOperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.CommonOperationMetadata} CommonOperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CommonOperationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.CommonOperationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.stateMessage = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.resource = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CommonOperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.CommonOperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.CommonOperationMetadata} CommonOperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CommonOperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CommonOperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.CommonOperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CommonOperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.stateMessage != null && message.hasOwnProperty("stateMessage"))
                                if (!$util.isString(message.stateMessage))
                                    return "stateMessage: string expected";
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                if (!$util.isString(message.resource))
                                    return "resource: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CommonOperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.CommonOperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.CommonOperationMetadata} CommonOperationMetadata
                         */
                        CommonOperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.CommonOperationMetadata)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.CommonOperationMetadata();
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "RUNNING":
                            case 1:
                                message.state = 1;
                                break;
                            case "CANCELLING":
                            case 2:
                                message.state = 2;
                                break;
                            case "SUCCEEDED":
                            case 3:
                                message.state = 3;
                                break;
                            case "FAILED":
                            case 4:
                                message.state = 4;
                                break;
                            case "CANCELLED":
                            case 5:
                                message.state = 5;
                                break;
                            }
                            if (object.stateMessage != null)
                                message.stateMessage = String(object.stateMessage);
                            if (object.resource != null)
                                message.resource = String(object.resource);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.CommonOperationMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.CommonOperationMetadata.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CommonOperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.CommonOperationMetadata
                         * @static
                         * @param {google.cloud.documentai.v1.CommonOperationMetadata} message CommonOperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CommonOperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.stateMessage = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.resource = "";
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.documentai.v1.CommonOperationMetadata.State[message.state] === undefined ? message.state : $root.google.cloud.documentai.v1.CommonOperationMetadata.State[message.state] : message.state;
                            if (message.stateMessage != null && message.hasOwnProperty("stateMessage"))
                                object.stateMessage = message.stateMessage;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                object.resource = message.resource;
                            return object;
                        };
    
                        /**
                         * Converts this CommonOperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.CommonOperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CommonOperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CommonOperationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.CommonOperationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CommonOperationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.CommonOperationMetadata";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.documentai.v1.CommonOperationMetadata.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} RUNNING=1 RUNNING value
                         * @property {number} CANCELLING=2 CANCELLING value
                         * @property {number} SUCCEEDED=3 SUCCEEDED value
                         * @property {number} FAILED=4 FAILED value
                         * @property {number} CANCELLED=5 CANCELLED value
                         */
                        CommonOperationMetadata.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "RUNNING"] = 1;
                            values[valuesById[2] = "CANCELLING"] = 2;
                            values[valuesById[3] = "SUCCEEDED"] = 3;
                            values[valuesById[4] = "FAILED"] = 4;
                            values[valuesById[5] = "CANCELLED"] = 5;
                            return values;
                        })();
    
                        return CommonOperationMetadata;
                    })();
    
                    v1.ProcessorVersion = (function() {
    
                        /**
                         * Properties of a ProcessorVersion.
                         * @memberof google.cloud.documentai.v1
                         * @interface IProcessorVersion
                         * @property {string|null} [name] ProcessorVersion name
                         * @property {string|null} [displayName] ProcessorVersion displayName
                         * @property {google.cloud.documentai.v1.IDocumentSchema|null} [documentSchema] ProcessorVersion documentSchema
                         * @property {google.cloud.documentai.v1.ProcessorVersion.State|null} [state] ProcessorVersion state
                         * @property {google.protobuf.ITimestamp|null} [createTime] ProcessorVersion createTime
                         * @property {google.cloud.documentai.v1.IEvaluationReference|null} [latestEvaluation] ProcessorVersion latestEvaluation
                         * @property {string|null} [kmsKeyName] ProcessorVersion kmsKeyName
                         * @property {string|null} [kmsKeyVersionName] ProcessorVersion kmsKeyVersionName
                         * @property {boolean|null} [googleManaged] ProcessorVersion googleManaged
                         * @property {google.cloud.documentai.v1.ProcessorVersion.IDeprecationInfo|null} [deprecationInfo] ProcessorVersion deprecationInfo
                         * @property {google.cloud.documentai.v1.ProcessorVersion.ModelType|null} [modelType] ProcessorVersion modelType
                         */
    
                        /**
                         * Constructs a new ProcessorVersion.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a ProcessorVersion.
                         * @implements IProcessorVersion
                         * @constructor
                         * @param {google.cloud.documentai.v1.IProcessorVersion=} [properties] Properties to set
                         */
                        function ProcessorVersion(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ProcessorVersion name.
                         * @member {string} name
                         * @memberof google.cloud.documentai.v1.ProcessorVersion
                         * @instance
                         */
                        ProcessorVersion.prototype.name = "";
    
                        /**
                         * ProcessorVersion displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.documentai.v1.ProcessorVersion
                         * @instance
                         */
                        ProcessorVersion.prototype.displayName = "";
    
                        /**
                         * ProcessorVersion documentSchema.
                         * @member {google.cloud.documentai.v1.IDocumentSchema|null|undefined} documentSchema
                         * @memberof google.cloud.documentai.v1.ProcessorVersion
                         * @instance
                         */
                        ProcessorVersion.prototype.documentSchema = null;
    
                        /**
                         * ProcessorVersion state.
                         * @member {google.cloud.documentai.v1.ProcessorVersion.State} state
                         * @memberof google.cloud.documentai.v1.ProcessorVersion
                         * @instance
                         */
                        ProcessorVersion.prototype.state = 0;
    
                        /**
                         * ProcessorVersion createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.documentai.v1.ProcessorVersion
                         * @instance
                         */
                        ProcessorVersion.prototype.createTime = null;
    
                        /**
                         * ProcessorVersion latestEvaluation.
                         * @member {google.cloud.documentai.v1.IEvaluationReference|null|undefined} latestEvaluation
                         * @memberof google.cloud.documentai.v1.ProcessorVersion
                         * @instance
                         */
                        ProcessorVersion.prototype.latestEvaluation = null;
    
                        /**
                         * ProcessorVersion kmsKeyName.
                         * @member {string} kmsKeyName
                         * @memberof google.cloud.documentai.v1.ProcessorVersion
                         * @instance
                         */
                        ProcessorVersion.prototype.kmsKeyName = "";
    
                        /**
                         * ProcessorVersion kmsKeyVersionName.
                         * @member {string} kmsKeyVersionName
                         * @memberof google.cloud.documentai.v1.ProcessorVersion
                         * @instance
                         */
                        ProcessorVersion.prototype.kmsKeyVersionName = "";
    
                        /**
                         * ProcessorVersion googleManaged.
                         * @member {boolean} googleManaged
                         * @memberof google.cloud.documentai.v1.ProcessorVersion
                         * @instance
                         */
                        ProcessorVersion.prototype.googleManaged = false;
    
                        /**
                         * ProcessorVersion deprecationInfo.
                         * @member {google.cloud.documentai.v1.ProcessorVersion.IDeprecationInfo|null|undefined} deprecationInfo
                         * @memberof google.cloud.documentai.v1.ProcessorVersion
                         * @instance
                         */
                        ProcessorVersion.prototype.deprecationInfo = null;
    
                        /**
                         * ProcessorVersion modelType.
                         * @member {google.cloud.documentai.v1.ProcessorVersion.ModelType} modelType
                         * @memberof google.cloud.documentai.v1.ProcessorVersion
                         * @instance
                         */
                        ProcessorVersion.prototype.modelType = 0;
    
                        /**
                         * Creates a new ProcessorVersion instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.ProcessorVersion
                         * @static
                         * @param {google.cloud.documentai.v1.IProcessorVersion=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.ProcessorVersion} ProcessorVersion instance
                         */
                        ProcessorVersion.create = function create(properties) {
                            return new ProcessorVersion(properties);
                        };
    
                        /**
                         * Encodes the specified ProcessorVersion message. Does not implicitly {@link google.cloud.documentai.v1.ProcessorVersion.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.ProcessorVersion
                         * @static
                         * @param {google.cloud.documentai.v1.IProcessorVersion} message ProcessorVersion message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ProcessorVersion.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.displayName);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.state);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.latestEvaluation != null && Object.hasOwnProperty.call(message, "latestEvaluation"))
                                $root.google.cloud.documentai.v1.EvaluationReference.encode(message.latestEvaluation, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.kmsKeyName != null && Object.hasOwnProperty.call(message, "kmsKeyName"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.kmsKeyName);
                            if (message.kmsKeyVersionName != null && Object.hasOwnProperty.call(message, "kmsKeyVersionName"))
                                writer.uint32(/* id 10, wireType 2 =*/82).string(message.kmsKeyVersionName);
                            if (message.googleManaged != null && Object.hasOwnProperty.call(message, "googleManaged"))
                                writer.uint32(/* id 11, wireType 0 =*/88).bool(message.googleManaged);
                            if (message.documentSchema != null && Object.hasOwnProperty.call(message, "documentSchema"))
                                $root.google.cloud.documentai.v1.DocumentSchema.encode(message.documentSchema, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.deprecationInfo != null && Object.hasOwnProperty.call(message, "deprecationInfo"))
                                $root.google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo.encode(message.deprecationInfo, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            if (message.modelType != null && Object.hasOwnProperty.call(message, "modelType"))
                                writer.uint32(/* id 15, wireType 0 =*/120).int32(message.modelType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ProcessorVersion message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.ProcessorVersion.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.ProcessorVersion
                         * @static
                         * @param {google.cloud.documentai.v1.IProcessorVersion} message ProcessorVersion message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ProcessorVersion.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ProcessorVersion message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.ProcessorVersion
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.ProcessorVersion} ProcessorVersion
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ProcessorVersion.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.ProcessorVersion();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 12: {
                                        message.documentSchema = $root.google.cloud.documentai.v1.DocumentSchema.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.latestEvaluation = $root.google.cloud.documentai.v1.EvaluationReference.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.kmsKeyName = reader.string();
                                        break;
                                    }
                                case 10: {
                                        message.kmsKeyVersionName = reader.string();
                                        break;
                                    }
                                case 11: {
                                        message.googleManaged = reader.bool();
                                        break;
                                    }
                                case 13: {
                                        message.deprecationInfo = $root.google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 15: {
                                        message.modelType = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ProcessorVersion message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.ProcessorVersion
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.ProcessorVersion} ProcessorVersion
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ProcessorVersion.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ProcessorVersion message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.ProcessorVersion
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ProcessorVersion.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.documentSchema != null && message.hasOwnProperty("documentSchema")) {
                                var error = $root.google.cloud.documentai.v1.DocumentSchema.verify(message.documentSchema);
                                if (error)
                                    return "documentSchema." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                    break;
                                }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.latestEvaluation != null && message.hasOwnProperty("latestEvaluation")) {
                                var error = $root.google.cloud.documentai.v1.EvaluationReference.verify(message.latestEvaluation);
                                if (error)
                                    return "latestEvaluation." + error;
                            }
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                if (!$util.isString(message.kmsKeyName))
                                    return "kmsKeyName: string expected";
                            if (message.kmsKeyVersionName != null && message.hasOwnProperty("kmsKeyVersionName"))
                                if (!$util.isString(message.kmsKeyVersionName))
                                    return "kmsKeyVersionName: string expected";
                            if (message.googleManaged != null && message.hasOwnProperty("googleManaged"))
                                if (typeof message.googleManaged !== "boolean")
                                    return "googleManaged: boolean expected";
                            if (message.deprecationInfo != null && message.hasOwnProperty("deprecationInfo")) {
                                var error = $root.google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo.verify(message.deprecationInfo);
                                if (error)
                                    return "deprecationInfo." + error;
                            }
                            if (message.modelType != null && message.hasOwnProperty("modelType"))
                                switch (message.modelType) {
                                default:
                                    return "modelType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a ProcessorVersion message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.ProcessorVersion
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.ProcessorVersion} ProcessorVersion
                         */
                        ProcessorVersion.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.ProcessorVersion)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.ProcessorVersion();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.documentSchema != null) {
                                if (typeof object.documentSchema !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.ProcessorVersion.documentSchema: object expected");
                                message.documentSchema = $root.google.cloud.documentai.v1.DocumentSchema.fromObject(object.documentSchema);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "DEPLOYED":
                            case 1:
                                message.state = 1;
                                break;
                            case "DEPLOYING":
                            case 2:
                                message.state = 2;
                                break;
                            case "UNDEPLOYED":
                            case 3:
                                message.state = 3;
                                break;
                            case "UNDEPLOYING":
                            case 4:
                                message.state = 4;
                                break;
                            case "CREATING":
                            case 5:
                                message.state = 5;
                                break;
                            case "DELETING":
                            case 6:
                                message.state = 6;
                                break;
                            case "FAILED":
                            case 7:
                                message.state = 7;
                                break;
                            case "IMPORTING":
                            case 8:
                                message.state = 8;
                                break;
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.ProcessorVersion.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.latestEvaluation != null) {
                                if (typeof object.latestEvaluation !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.ProcessorVersion.latestEvaluation: object expected");
                                message.latestEvaluation = $root.google.cloud.documentai.v1.EvaluationReference.fromObject(object.latestEvaluation);
                            }
                            if (object.kmsKeyName != null)
                                message.kmsKeyName = String(object.kmsKeyName);
                            if (object.kmsKeyVersionName != null)
                                message.kmsKeyVersionName = String(object.kmsKeyVersionName);
                            if (object.googleManaged != null)
                                message.googleManaged = Boolean(object.googleManaged);
                            if (object.deprecationInfo != null) {
                                if (typeof object.deprecationInfo !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.ProcessorVersion.deprecationInfo: object expected");
                                message.deprecationInfo = $root.google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo.fromObject(object.deprecationInfo);
                            }
                            switch (object.modelType) {
                            default:
                                if (typeof object.modelType === "number") {
                                    message.modelType = object.modelType;
                                    break;
                                }
                                break;
                            case "MODEL_TYPE_UNSPECIFIED":
                            case 0:
                                message.modelType = 0;
                                break;
                            case "MODEL_TYPE_GENERATIVE":
                            case 1:
                                message.modelType = 1;
                                break;
                            case "MODEL_TYPE_CUSTOM":
                            case 2:
                                message.modelType = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ProcessorVersion message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.ProcessorVersion
                         * @static
                         * @param {google.cloud.documentai.v1.ProcessorVersion} message ProcessorVersion
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ProcessorVersion.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.displayName = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.createTime = null;
                                object.latestEvaluation = null;
                                object.kmsKeyName = "";
                                object.kmsKeyVersionName = "";
                                object.googleManaged = false;
                                object.documentSchema = null;
                                object.deprecationInfo = null;
                                object.modelType = options.enums === String ? "MODEL_TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.documentai.v1.ProcessorVersion.State[message.state] === undefined ? message.state : $root.google.cloud.documentai.v1.ProcessorVersion.State[message.state] : message.state;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.latestEvaluation != null && message.hasOwnProperty("latestEvaluation"))
                                object.latestEvaluation = $root.google.cloud.documentai.v1.EvaluationReference.toObject(message.latestEvaluation, options);
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                object.kmsKeyName = message.kmsKeyName;
                            if (message.kmsKeyVersionName != null && message.hasOwnProperty("kmsKeyVersionName"))
                                object.kmsKeyVersionName = message.kmsKeyVersionName;
                            if (message.googleManaged != null && message.hasOwnProperty("googleManaged"))
                                object.googleManaged = message.googleManaged;
                            if (message.documentSchema != null && message.hasOwnProperty("documentSchema"))
                                object.documentSchema = $root.google.cloud.documentai.v1.DocumentSchema.toObject(message.documentSchema, options);
                            if (message.deprecationInfo != null && message.hasOwnProperty("deprecationInfo"))
                                object.deprecationInfo = $root.google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo.toObject(message.deprecationInfo, options);
                            if (message.modelType != null && message.hasOwnProperty("modelType"))
                                object.modelType = options.enums === String ? $root.google.cloud.documentai.v1.ProcessorVersion.ModelType[message.modelType] === undefined ? message.modelType : $root.google.cloud.documentai.v1.ProcessorVersion.ModelType[message.modelType] : message.modelType;
                            return object;
                        };
    
                        /**
                         * Converts this ProcessorVersion to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.ProcessorVersion
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ProcessorVersion.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ProcessorVersion
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.ProcessorVersion
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ProcessorVersion.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.ProcessorVersion";
                        };
    
                        ProcessorVersion.DeprecationInfo = (function() {
    
                            /**
                             * Properties of a DeprecationInfo.
                             * @memberof google.cloud.documentai.v1.ProcessorVersion
                             * @interface IDeprecationInfo
                             * @property {google.protobuf.ITimestamp|null} [deprecationTime] DeprecationInfo deprecationTime
                             * @property {string|null} [replacementProcessorVersion] DeprecationInfo replacementProcessorVersion
                             */
    
                            /**
                             * Constructs a new DeprecationInfo.
                             * @memberof google.cloud.documentai.v1.ProcessorVersion
                             * @classdesc Represents a DeprecationInfo.
                             * @implements IDeprecationInfo
                             * @constructor
                             * @param {google.cloud.documentai.v1.ProcessorVersion.IDeprecationInfo=} [properties] Properties to set
                             */
                            function DeprecationInfo(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * DeprecationInfo deprecationTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} deprecationTime
                             * @memberof google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo
                             * @instance
                             */
                            DeprecationInfo.prototype.deprecationTime = null;
    
                            /**
                             * DeprecationInfo replacementProcessorVersion.
                             * @member {string} replacementProcessorVersion
                             * @memberof google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo
                             * @instance
                             */
                            DeprecationInfo.prototype.replacementProcessorVersion = "";
    
                            /**
                             * Creates a new DeprecationInfo instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo
                             * @static
                             * @param {google.cloud.documentai.v1.ProcessorVersion.IDeprecationInfo=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo} DeprecationInfo instance
                             */
                            DeprecationInfo.create = function create(properties) {
                                return new DeprecationInfo(properties);
                            };
    
                            /**
                             * Encodes the specified DeprecationInfo message. Does not implicitly {@link google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo
                             * @static
                             * @param {google.cloud.documentai.v1.ProcessorVersion.IDeprecationInfo} message DeprecationInfo message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DeprecationInfo.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.deprecationTime != null && Object.hasOwnProperty.call(message, "deprecationTime"))
                                    $root.google.protobuf.Timestamp.encode(message.deprecationTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.replacementProcessorVersion != null && Object.hasOwnProperty.call(message, "replacementProcessorVersion"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.replacementProcessorVersion);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified DeprecationInfo message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo
                             * @static
                             * @param {google.cloud.documentai.v1.ProcessorVersion.IDeprecationInfo} message DeprecationInfo message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DeprecationInfo.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a DeprecationInfo message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo} DeprecationInfo
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DeprecationInfo.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.deprecationTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.replacementProcessorVersion = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a DeprecationInfo message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo} DeprecationInfo
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DeprecationInfo.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a DeprecationInfo message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            DeprecationInfo.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.deprecationTime != null && message.hasOwnProperty("deprecationTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.deprecationTime);
                                    if (error)
                                        return "deprecationTime." + error;
                                }
                                if (message.replacementProcessorVersion != null && message.hasOwnProperty("replacementProcessorVersion"))
                                    if (!$util.isString(message.replacementProcessorVersion))
                                        return "replacementProcessorVersion: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a DeprecationInfo message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo} DeprecationInfo
                             */
                            DeprecationInfo.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo();
                                if (object.deprecationTime != null) {
                                    if (typeof object.deprecationTime !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo.deprecationTime: object expected");
                                    message.deprecationTime = $root.google.protobuf.Timestamp.fromObject(object.deprecationTime);
                                }
                                if (object.replacementProcessorVersion != null)
                                    message.replacementProcessorVersion = String(object.replacementProcessorVersion);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a DeprecationInfo message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo
                             * @static
                             * @param {google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo} message DeprecationInfo
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            DeprecationInfo.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.deprecationTime = null;
                                    object.replacementProcessorVersion = "";
                                }
                                if (message.deprecationTime != null && message.hasOwnProperty("deprecationTime"))
                                    object.deprecationTime = $root.google.protobuf.Timestamp.toObject(message.deprecationTime, options);
                                if (message.replacementProcessorVersion != null && message.hasOwnProperty("replacementProcessorVersion"))
                                    object.replacementProcessorVersion = message.replacementProcessorVersion;
                                return object;
                            };
    
                            /**
                             * Converts this DeprecationInfo to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            DeprecationInfo.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for DeprecationInfo
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            DeprecationInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.ProcessorVersion.DeprecationInfo";
                            };
    
                            return DeprecationInfo;
                        })();
    
                        /**
                         * State enum.
                         * @name google.cloud.documentai.v1.ProcessorVersion.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} DEPLOYED=1 DEPLOYED value
                         * @property {number} DEPLOYING=2 DEPLOYING value
                         * @property {number} UNDEPLOYED=3 UNDEPLOYED value
                         * @property {number} UNDEPLOYING=4 UNDEPLOYING value
                         * @property {number} CREATING=5 CREATING value
                         * @property {number} DELETING=6 DELETING value
                         * @property {number} FAILED=7 FAILED value
                         * @property {number} IMPORTING=8 IMPORTING value
                         */
                        ProcessorVersion.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "DEPLOYED"] = 1;
                            values[valuesById[2] = "DEPLOYING"] = 2;
                            values[valuesById[3] = "UNDEPLOYED"] = 3;
                            values[valuesById[4] = "UNDEPLOYING"] = 4;
                            values[valuesById[5] = "CREATING"] = 5;
                            values[valuesById[6] = "DELETING"] = 6;
                            values[valuesById[7] = "FAILED"] = 7;
                            values[valuesById[8] = "IMPORTING"] = 8;
                            return values;
                        })();
    
                        /**
                         * ModelType enum.
                         * @name google.cloud.documentai.v1.ProcessorVersion.ModelType
                         * @enum {number}
                         * @property {number} MODEL_TYPE_UNSPECIFIED=0 MODEL_TYPE_UNSPECIFIED value
                         * @property {number} MODEL_TYPE_GENERATIVE=1 MODEL_TYPE_GENERATIVE value
                         * @property {number} MODEL_TYPE_CUSTOM=2 MODEL_TYPE_CUSTOM value
                         */
                        ProcessorVersion.ModelType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "MODEL_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "MODEL_TYPE_GENERATIVE"] = 1;
                            values[valuesById[2] = "MODEL_TYPE_CUSTOM"] = 2;
                            return values;
                        })();
    
                        return ProcessorVersion;
                    })();
    
                    v1.ProcessorVersionAlias = (function() {
    
                        /**
                         * Properties of a ProcessorVersionAlias.
                         * @memberof google.cloud.documentai.v1
                         * @interface IProcessorVersionAlias
                         * @property {string|null} [alias] ProcessorVersionAlias alias
                         * @property {string|null} [processorVersion] ProcessorVersionAlias processorVersion
                         */
    
                        /**
                         * Constructs a new ProcessorVersionAlias.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a ProcessorVersionAlias.
                         * @implements IProcessorVersionAlias
                         * @constructor
                         * @param {google.cloud.documentai.v1.IProcessorVersionAlias=} [properties] Properties to set
                         */
                        function ProcessorVersionAlias(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ProcessorVersionAlias alias.
                         * @member {string} alias
                         * @memberof google.cloud.documentai.v1.ProcessorVersionAlias
                         * @instance
                         */
                        ProcessorVersionAlias.prototype.alias = "";
    
                        /**
                         * ProcessorVersionAlias processorVersion.
                         * @member {string} processorVersion
                         * @memberof google.cloud.documentai.v1.ProcessorVersionAlias
                         * @instance
                         */
                        ProcessorVersionAlias.prototype.processorVersion = "";
    
                        /**
                         * Creates a new ProcessorVersionAlias instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.ProcessorVersionAlias
                         * @static
                         * @param {google.cloud.documentai.v1.IProcessorVersionAlias=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.ProcessorVersionAlias} ProcessorVersionAlias instance
                         */
                        ProcessorVersionAlias.create = function create(properties) {
                            return new ProcessorVersionAlias(properties);
                        };
    
                        /**
                         * Encodes the specified ProcessorVersionAlias message. Does not implicitly {@link google.cloud.documentai.v1.ProcessorVersionAlias.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.ProcessorVersionAlias
                         * @static
                         * @param {google.cloud.documentai.v1.IProcessorVersionAlias} message ProcessorVersionAlias message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ProcessorVersionAlias.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.alias != null && Object.hasOwnProperty.call(message, "alias"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.alias);
                            if (message.processorVersion != null && Object.hasOwnProperty.call(message, "processorVersion"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.processorVersion);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ProcessorVersionAlias message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.ProcessorVersionAlias.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.ProcessorVersionAlias
                         * @static
                         * @param {google.cloud.documentai.v1.IProcessorVersionAlias} message ProcessorVersionAlias message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ProcessorVersionAlias.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ProcessorVersionAlias message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.ProcessorVersionAlias
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.ProcessorVersionAlias} ProcessorVersionAlias
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ProcessorVersionAlias.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.ProcessorVersionAlias();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.alias = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.processorVersion = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ProcessorVersionAlias message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.ProcessorVersionAlias
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.ProcessorVersionAlias} ProcessorVersionAlias
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ProcessorVersionAlias.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ProcessorVersionAlias message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.ProcessorVersionAlias
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ProcessorVersionAlias.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.alias != null && message.hasOwnProperty("alias"))
                                if (!$util.isString(message.alias))
                                    return "alias: string expected";
                            if (message.processorVersion != null && message.hasOwnProperty("processorVersion"))
                                if (!$util.isString(message.processorVersion))
                                    return "processorVersion: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ProcessorVersionAlias message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.ProcessorVersionAlias
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.ProcessorVersionAlias} ProcessorVersionAlias
                         */
                        ProcessorVersionAlias.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.ProcessorVersionAlias)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.ProcessorVersionAlias();
                            if (object.alias != null)
                                message.alias = String(object.alias);
                            if (object.processorVersion != null)
                                message.processorVersion = String(object.processorVersion);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ProcessorVersionAlias message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.ProcessorVersionAlias
                         * @static
                         * @param {google.cloud.documentai.v1.ProcessorVersionAlias} message ProcessorVersionAlias
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ProcessorVersionAlias.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.alias = "";
                                object.processorVersion = "";
                            }
                            if (message.alias != null && message.hasOwnProperty("alias"))
                                object.alias = message.alias;
                            if (message.processorVersion != null && message.hasOwnProperty("processorVersion"))
                                object.processorVersion = message.processorVersion;
                            return object;
                        };
    
                        /**
                         * Converts this ProcessorVersionAlias to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.ProcessorVersionAlias
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ProcessorVersionAlias.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ProcessorVersionAlias
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.ProcessorVersionAlias
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ProcessorVersionAlias.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.ProcessorVersionAlias";
                        };
    
                        return ProcessorVersionAlias;
                    })();
    
                    v1.Processor = (function() {
    
                        /**
                         * Properties of a Processor.
                         * @memberof google.cloud.documentai.v1
                         * @interface IProcessor
                         * @property {string|null} [name] Processor name
                         * @property {string|null} [type] Processor type
                         * @property {string|null} [displayName] Processor displayName
                         * @property {google.cloud.documentai.v1.Processor.State|null} [state] Processor state
                         * @property {string|null} [defaultProcessorVersion] Processor defaultProcessorVersion
                         * @property {Array.<google.cloud.documentai.v1.IProcessorVersionAlias>|null} [processorVersionAliases] Processor processorVersionAliases
                         * @property {string|null} [processEndpoint] Processor processEndpoint
                         * @property {google.protobuf.ITimestamp|null} [createTime] Processor createTime
                         * @property {string|null} [kmsKeyName] Processor kmsKeyName
                         */
    
                        /**
                         * Constructs a new Processor.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a Processor.
                         * @implements IProcessor
                         * @constructor
                         * @param {google.cloud.documentai.v1.IProcessor=} [properties] Properties to set
                         */
                        function Processor(properties) {
                            this.processorVersionAliases = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Processor name.
                         * @member {string} name
                         * @memberof google.cloud.documentai.v1.Processor
                         * @instance
                         */
                        Processor.prototype.name = "";
    
                        /**
                         * Processor type.
                         * @member {string} type
                         * @memberof google.cloud.documentai.v1.Processor
                         * @instance
                         */
                        Processor.prototype.type = "";
    
                        /**
                         * Processor displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.documentai.v1.Processor
                         * @instance
                         */
                        Processor.prototype.displayName = "";
    
                        /**
                         * Processor state.
                         * @member {google.cloud.documentai.v1.Processor.State} state
                         * @memberof google.cloud.documentai.v1.Processor
                         * @instance
                         */
                        Processor.prototype.state = 0;
    
                        /**
                         * Processor defaultProcessorVersion.
                         * @member {string} defaultProcessorVersion
                         * @memberof google.cloud.documentai.v1.Processor
                         * @instance
                         */
                        Processor.prototype.defaultProcessorVersion = "";
    
                        /**
                         * Processor processorVersionAliases.
                         * @member {Array.<google.cloud.documentai.v1.IProcessorVersionAlias>} processorVersionAliases
                         * @memberof google.cloud.documentai.v1.Processor
                         * @instance
                         */
                        Processor.prototype.processorVersionAliases = $util.emptyArray;
    
                        /**
                         * Processor processEndpoint.
                         * @member {string} processEndpoint
                         * @memberof google.cloud.documentai.v1.Processor
                         * @instance
                         */
                        Processor.prototype.processEndpoint = "";
    
                        /**
                         * Processor createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.documentai.v1.Processor
                         * @instance
                         */
                        Processor.prototype.createTime = null;
    
                        /**
                         * Processor kmsKeyName.
                         * @member {string} kmsKeyName
                         * @memberof google.cloud.documentai.v1.Processor
                         * @instance
                         */
                        Processor.prototype.kmsKeyName = "";
    
                        /**
                         * Creates a new Processor instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.Processor
                         * @static
                         * @param {google.cloud.documentai.v1.IProcessor=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.Processor} Processor instance
                         */
                        Processor.create = function create(properties) {
                            return new Processor(properties);
                        };
    
                        /**
                         * Encodes the specified Processor message. Does not implicitly {@link google.cloud.documentai.v1.Processor.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.Processor
                         * @static
                         * @param {google.cloud.documentai.v1.IProcessor} message Processor message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Processor.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.type);
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.displayName);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.state);
                            if (message.processEndpoint != null && Object.hasOwnProperty.call(message, "processEndpoint"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.processEndpoint);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.kmsKeyName != null && Object.hasOwnProperty.call(message, "kmsKeyName"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.kmsKeyName);
                            if (message.defaultProcessorVersion != null && Object.hasOwnProperty.call(message, "defaultProcessorVersion"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.defaultProcessorVersion);
                            if (message.processorVersionAliases != null && message.processorVersionAliases.length)
                                for (var i = 0; i < message.processorVersionAliases.length; ++i)
                                    $root.google.cloud.documentai.v1.ProcessorVersionAlias.encode(message.processorVersionAliases[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Processor message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Processor.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.Processor
                         * @static
                         * @param {google.cloud.documentai.v1.IProcessor} message Processor message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Processor.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Processor message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.Processor
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.Processor} Processor
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Processor.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Processor();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.type = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 9: {
                                        message.defaultProcessorVersion = reader.string();
                                        break;
                                    }
                                case 10: {
                                        if (!(message.processorVersionAliases && message.processorVersionAliases.length))
                                            message.processorVersionAliases = [];
                                        message.processorVersionAliases.push($root.google.cloud.documentai.v1.ProcessorVersionAlias.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 6: {
                                        message.processEndpoint = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.kmsKeyName = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Processor message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.Processor
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.Processor} Processor
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Processor.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Processor message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.Processor
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Processor.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                if (!$util.isString(message.type))
                                    return "type: string expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.defaultProcessorVersion != null && message.hasOwnProperty("defaultProcessorVersion"))
                                if (!$util.isString(message.defaultProcessorVersion))
                                    return "defaultProcessorVersion: string expected";
                            if (message.processorVersionAliases != null && message.hasOwnProperty("processorVersionAliases")) {
                                if (!Array.isArray(message.processorVersionAliases))
                                    return "processorVersionAliases: array expected";
                                for (var i = 0; i < message.processorVersionAliases.length; ++i) {
                                    var error = $root.google.cloud.documentai.v1.ProcessorVersionAlias.verify(message.processorVersionAliases[i]);
                                    if (error)
                                        return "processorVersionAliases." + error;
                                }
                            }
                            if (message.processEndpoint != null && message.hasOwnProperty("processEndpoint"))
                                if (!$util.isString(message.processEndpoint))
                                    return "processEndpoint: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                if (!$util.isString(message.kmsKeyName))
                                    return "kmsKeyName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Processor message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.Processor
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.Processor} Processor
                         */
                        Processor.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.Processor)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.Processor();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.type != null)
                                message.type = String(object.type);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "ENABLED":
                            case 1:
                                message.state = 1;
                                break;
                            case "DISABLED":
                            case 2:
                                message.state = 2;
                                break;
                            case "ENABLING":
                            case 3:
                                message.state = 3;
                                break;
                            case "DISABLING":
                            case 4:
                                message.state = 4;
                                break;
                            case "CREATING":
                            case 5:
                                message.state = 5;
                                break;
                            case "FAILED":
                            case 6:
                                message.state = 6;
                                break;
                            case "DELETING":
                            case 7:
                                message.state = 7;
                                break;
                            }
                            if (object.defaultProcessorVersion != null)
                                message.defaultProcessorVersion = String(object.defaultProcessorVersion);
                            if (object.processorVersionAliases) {
                                if (!Array.isArray(object.processorVersionAliases))
                                    throw TypeError(".google.cloud.documentai.v1.Processor.processorVersionAliases: array expected");
                                message.processorVersionAliases = [];
                                for (var i = 0; i < object.processorVersionAliases.length; ++i) {
                                    if (typeof object.processorVersionAliases[i] !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Processor.processorVersionAliases: object expected");
                                    message.processorVersionAliases[i] = $root.google.cloud.documentai.v1.ProcessorVersionAlias.fromObject(object.processorVersionAliases[i]);
                                }
                            }
                            if (object.processEndpoint != null)
                                message.processEndpoint = String(object.processEndpoint);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.Processor.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.kmsKeyName != null)
                                message.kmsKeyName = String(object.kmsKeyName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Processor message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.Processor
                         * @static
                         * @param {google.cloud.documentai.v1.Processor} message Processor
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Processor.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.processorVersionAliases = [];
                            if (options.defaults) {
                                object.name = "";
                                object.type = "";
                                object.displayName = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.processEndpoint = "";
                                object.createTime = null;
                                object.kmsKeyName = "";
                                object.defaultProcessorVersion = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = message.type;
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.documentai.v1.Processor.State[message.state] === undefined ? message.state : $root.google.cloud.documentai.v1.Processor.State[message.state] : message.state;
                            if (message.processEndpoint != null && message.hasOwnProperty("processEndpoint"))
                                object.processEndpoint = message.processEndpoint;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                object.kmsKeyName = message.kmsKeyName;
                            if (message.defaultProcessorVersion != null && message.hasOwnProperty("defaultProcessorVersion"))
                                object.defaultProcessorVersion = message.defaultProcessorVersion;
                            if (message.processorVersionAliases && message.processorVersionAliases.length) {
                                object.processorVersionAliases = [];
                                for (var j = 0; j < message.processorVersionAliases.length; ++j)
                                    object.processorVersionAliases[j] = $root.google.cloud.documentai.v1.ProcessorVersionAlias.toObject(message.processorVersionAliases[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Processor to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.Processor
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Processor.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Processor
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.Processor
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Processor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.Processor";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.documentai.v1.Processor.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} ENABLED=1 ENABLED value
                         * @property {number} DISABLED=2 DISABLED value
                         * @property {number} ENABLING=3 ENABLING value
                         * @property {number} DISABLING=4 DISABLING value
                         * @property {number} CREATING=5 CREATING value
                         * @property {number} FAILED=6 FAILED value
                         * @property {number} DELETING=7 DELETING value
                         */
                        Processor.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ENABLED"] = 1;
                            values[valuesById[2] = "DISABLED"] = 2;
                            values[valuesById[3] = "ENABLING"] = 3;
                            values[valuesById[4] = "DISABLING"] = 4;
                            values[valuesById[5] = "CREATING"] = 5;
                            values[valuesById[6] = "FAILED"] = 6;
                            values[valuesById[7] = "DELETING"] = 7;
                            return values;
                        })();
    
                        return Processor;
                    })();
    
                    v1.ProcessorType = (function() {
    
                        /**
                         * Properties of a ProcessorType.
                         * @memberof google.cloud.documentai.v1
                         * @interface IProcessorType
                         * @property {string|null} [name] ProcessorType name
                         * @property {string|null} [type] ProcessorType type
                         * @property {string|null} [category] ProcessorType category
                         * @property {Array.<google.cloud.documentai.v1.ProcessorType.ILocationInfo>|null} [availableLocations] ProcessorType availableLocations
                         * @property {boolean|null} [allowCreation] ProcessorType allowCreation
                         * @property {google.api.LaunchStage|null} [launchStage] ProcessorType launchStage
                         * @property {Array.<string>|null} [sampleDocumentUris] ProcessorType sampleDocumentUris
                         */
    
                        /**
                         * Constructs a new ProcessorType.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a ProcessorType.
                         * @implements IProcessorType
                         * @constructor
                         * @param {google.cloud.documentai.v1.IProcessorType=} [properties] Properties to set
                         */
                        function ProcessorType(properties) {
                            this.availableLocations = [];
                            this.sampleDocumentUris = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ProcessorType name.
                         * @member {string} name
                         * @memberof google.cloud.documentai.v1.ProcessorType
                         * @instance
                         */
                        ProcessorType.prototype.name = "";
    
                        /**
                         * ProcessorType type.
                         * @member {string} type
                         * @memberof google.cloud.documentai.v1.ProcessorType
                         * @instance
                         */
                        ProcessorType.prototype.type = "";
    
                        /**
                         * ProcessorType category.
                         * @member {string} category
                         * @memberof google.cloud.documentai.v1.ProcessorType
                         * @instance
                         */
                        ProcessorType.prototype.category = "";
    
                        /**
                         * ProcessorType availableLocations.
                         * @member {Array.<google.cloud.documentai.v1.ProcessorType.ILocationInfo>} availableLocations
                         * @memberof google.cloud.documentai.v1.ProcessorType
                         * @instance
                         */
                        ProcessorType.prototype.availableLocations = $util.emptyArray;
    
                        /**
                         * ProcessorType allowCreation.
                         * @member {boolean} allowCreation
                         * @memberof google.cloud.documentai.v1.ProcessorType
                         * @instance
                         */
                        ProcessorType.prototype.allowCreation = false;
    
                        /**
                         * ProcessorType launchStage.
                         * @member {google.api.LaunchStage} launchStage
                         * @memberof google.cloud.documentai.v1.ProcessorType
                         * @instance
                         */
                        ProcessorType.prototype.launchStage = 0;
    
                        /**
                         * ProcessorType sampleDocumentUris.
                         * @member {Array.<string>} sampleDocumentUris
                         * @memberof google.cloud.documentai.v1.ProcessorType
                         * @instance
                         */
                        ProcessorType.prototype.sampleDocumentUris = $util.emptyArray;
    
                        /**
                         * Creates a new ProcessorType instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.ProcessorType
                         * @static
                         * @param {google.cloud.documentai.v1.IProcessorType=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.ProcessorType} ProcessorType instance
                         */
                        ProcessorType.create = function create(properties) {
                            return new ProcessorType(properties);
                        };
    
                        /**
                         * Encodes the specified ProcessorType message. Does not implicitly {@link google.cloud.documentai.v1.ProcessorType.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.ProcessorType
                         * @static
                         * @param {google.cloud.documentai.v1.IProcessorType} message ProcessorType message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ProcessorType.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.type);
                            if (message.category != null && Object.hasOwnProperty.call(message, "category"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.category);
                            if (message.availableLocations != null && message.availableLocations.length)
                                for (var i = 0; i < message.availableLocations.length; ++i)
                                    $root.google.cloud.documentai.v1.ProcessorType.LocationInfo.encode(message.availableLocations[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.allowCreation != null && Object.hasOwnProperty.call(message, "allowCreation"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.allowCreation);
                            if (message.launchStage != null && Object.hasOwnProperty.call(message, "launchStage"))
                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.launchStage);
                            if (message.sampleDocumentUris != null && message.sampleDocumentUris.length)
                                for (var i = 0; i < message.sampleDocumentUris.length; ++i)
                                    writer.uint32(/* id 9, wireType 2 =*/74).string(message.sampleDocumentUris[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ProcessorType message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.ProcessorType.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.ProcessorType
                         * @static
                         * @param {google.cloud.documentai.v1.IProcessorType} message ProcessorType message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ProcessorType.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ProcessorType message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.ProcessorType
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.ProcessorType} ProcessorType
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ProcessorType.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.ProcessorType();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.type = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.category = reader.string();
                                        break;
                                    }
                                case 4: {
                                        if (!(message.availableLocations && message.availableLocations.length))
                                            message.availableLocations = [];
                                        message.availableLocations.push($root.google.cloud.documentai.v1.ProcessorType.LocationInfo.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 6: {
                                        message.allowCreation = reader.bool();
                                        break;
                                    }
                                case 8: {
                                        message.launchStage = reader.int32();
                                        break;
                                    }
                                case 9: {
                                        if (!(message.sampleDocumentUris && message.sampleDocumentUris.length))
                                            message.sampleDocumentUris = [];
                                        message.sampleDocumentUris.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ProcessorType message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.ProcessorType
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.ProcessorType} ProcessorType
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ProcessorType.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ProcessorType message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.ProcessorType
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ProcessorType.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                if (!$util.isString(message.type))
                                    return "type: string expected";
                            if (message.category != null && message.hasOwnProperty("category"))
                                if (!$util.isString(message.category))
                                    return "category: string expected";
                            if (message.availableLocations != null && message.hasOwnProperty("availableLocations")) {
                                if (!Array.isArray(message.availableLocations))
                                    return "availableLocations: array expected";
                                for (var i = 0; i < message.availableLocations.length; ++i) {
                                    var error = $root.google.cloud.documentai.v1.ProcessorType.LocationInfo.verify(message.availableLocations[i]);
                                    if (error)
                                        return "availableLocations." + error;
                                }
                            }
                            if (message.allowCreation != null && message.hasOwnProperty("allowCreation"))
                                if (typeof message.allowCreation !== "boolean")
                                    return "allowCreation: boolean expected";
                            if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                                switch (message.launchStage) {
                                default:
                                    return "launchStage: enum value expected";
                                case 0:
                                case 6:
                                case 7:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.sampleDocumentUris != null && message.hasOwnProperty("sampleDocumentUris")) {
                                if (!Array.isArray(message.sampleDocumentUris))
                                    return "sampleDocumentUris: array expected";
                                for (var i = 0; i < message.sampleDocumentUris.length; ++i)
                                    if (!$util.isString(message.sampleDocumentUris[i]))
                                        return "sampleDocumentUris: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ProcessorType message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.ProcessorType
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.ProcessorType} ProcessorType
                         */
                        ProcessorType.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.ProcessorType)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.ProcessorType();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.type != null)
                                message.type = String(object.type);
                            if (object.category != null)
                                message.category = String(object.category);
                            if (object.availableLocations) {
                                if (!Array.isArray(object.availableLocations))
                                    throw TypeError(".google.cloud.documentai.v1.ProcessorType.availableLocations: array expected");
                                message.availableLocations = [];
                                for (var i = 0; i < object.availableLocations.length; ++i) {
                                    if (typeof object.availableLocations[i] !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.ProcessorType.availableLocations: object expected");
                                    message.availableLocations[i] = $root.google.cloud.documentai.v1.ProcessorType.LocationInfo.fromObject(object.availableLocations[i]);
                                }
                            }
                            if (object.allowCreation != null)
                                message.allowCreation = Boolean(object.allowCreation);
                            switch (object.launchStage) {
                            default:
                                if (typeof object.launchStage === "number") {
                                    message.launchStage = object.launchStage;
                                    break;
                                }
                                break;
                            case "LAUNCH_STAGE_UNSPECIFIED":
                            case 0:
                                message.launchStage = 0;
                                break;
                            case "UNIMPLEMENTED":
                            case 6:
                                message.launchStage = 6;
                                break;
                            case "PRELAUNCH":
                            case 7:
                                message.launchStage = 7;
                                break;
                            case "EARLY_ACCESS":
                            case 1:
                                message.launchStage = 1;
                                break;
                            case "ALPHA":
                            case 2:
                                message.launchStage = 2;
                                break;
                            case "BETA":
                            case 3:
                                message.launchStage = 3;
                                break;
                            case "GA":
                            case 4:
                                message.launchStage = 4;
                                break;
                            case "DEPRECATED":
                            case 5:
                                message.launchStage = 5;
                                break;
                            }
                            if (object.sampleDocumentUris) {
                                if (!Array.isArray(object.sampleDocumentUris))
                                    throw TypeError(".google.cloud.documentai.v1.ProcessorType.sampleDocumentUris: array expected");
                                message.sampleDocumentUris = [];
                                for (var i = 0; i < object.sampleDocumentUris.length; ++i)
                                    message.sampleDocumentUris[i] = String(object.sampleDocumentUris[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ProcessorType message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.ProcessorType
                         * @static
                         * @param {google.cloud.documentai.v1.ProcessorType} message ProcessorType
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ProcessorType.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.availableLocations = [];
                                object.sampleDocumentUris = [];
                            }
                            if (options.defaults) {
                                object.name = "";
                                object.type = "";
                                object.category = "";
                                object.allowCreation = false;
                                object.launchStage = options.enums === String ? "LAUNCH_STAGE_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = message.type;
                            if (message.category != null && message.hasOwnProperty("category"))
                                object.category = message.category;
                            if (message.availableLocations && message.availableLocations.length) {
                                object.availableLocations = [];
                                for (var j = 0; j < message.availableLocations.length; ++j)
                                    object.availableLocations[j] = $root.google.cloud.documentai.v1.ProcessorType.LocationInfo.toObject(message.availableLocations[j], options);
                            }
                            if (message.allowCreation != null && message.hasOwnProperty("allowCreation"))
                                object.allowCreation = message.allowCreation;
                            if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                                object.launchStage = options.enums === String ? $root.google.api.LaunchStage[message.launchStage] === undefined ? message.launchStage : $root.google.api.LaunchStage[message.launchStage] : message.launchStage;
                            if (message.sampleDocumentUris && message.sampleDocumentUris.length) {
                                object.sampleDocumentUris = [];
                                for (var j = 0; j < message.sampleDocumentUris.length; ++j)
                                    object.sampleDocumentUris[j] = message.sampleDocumentUris[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ProcessorType to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.ProcessorType
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ProcessorType.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ProcessorType
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.ProcessorType
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ProcessorType.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.ProcessorType";
                        };
    
                        ProcessorType.LocationInfo = (function() {
    
                            /**
                             * Properties of a LocationInfo.
                             * @memberof google.cloud.documentai.v1.ProcessorType
                             * @interface ILocationInfo
                             * @property {string|null} [locationId] LocationInfo locationId
                             */
    
                            /**
                             * Constructs a new LocationInfo.
                             * @memberof google.cloud.documentai.v1.ProcessorType
                             * @classdesc Represents a LocationInfo.
                             * @implements ILocationInfo
                             * @constructor
                             * @param {google.cloud.documentai.v1.ProcessorType.ILocationInfo=} [properties] Properties to set
                             */
                            function LocationInfo(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * LocationInfo locationId.
                             * @member {string} locationId
                             * @memberof google.cloud.documentai.v1.ProcessorType.LocationInfo
                             * @instance
                             */
                            LocationInfo.prototype.locationId = "";
    
                            /**
                             * Creates a new LocationInfo instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.ProcessorType.LocationInfo
                             * @static
                             * @param {google.cloud.documentai.v1.ProcessorType.ILocationInfo=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.ProcessorType.LocationInfo} LocationInfo instance
                             */
                            LocationInfo.create = function create(properties) {
                                return new LocationInfo(properties);
                            };
    
                            /**
                             * Encodes the specified LocationInfo message. Does not implicitly {@link google.cloud.documentai.v1.ProcessorType.LocationInfo.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.ProcessorType.LocationInfo
                             * @static
                             * @param {google.cloud.documentai.v1.ProcessorType.ILocationInfo} message LocationInfo message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            LocationInfo.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.locationId != null && Object.hasOwnProperty.call(message, "locationId"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.locationId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified LocationInfo message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.ProcessorType.LocationInfo.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.ProcessorType.LocationInfo
                             * @static
                             * @param {google.cloud.documentai.v1.ProcessorType.ILocationInfo} message LocationInfo message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            LocationInfo.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a LocationInfo message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.ProcessorType.LocationInfo
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.ProcessorType.LocationInfo} LocationInfo
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            LocationInfo.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.ProcessorType.LocationInfo();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.locationId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a LocationInfo message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.ProcessorType.LocationInfo
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.ProcessorType.LocationInfo} LocationInfo
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            LocationInfo.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a LocationInfo message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.ProcessorType.LocationInfo
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            LocationInfo.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.locationId != null && message.hasOwnProperty("locationId"))
                                    if (!$util.isString(message.locationId))
                                        return "locationId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a LocationInfo message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.ProcessorType.LocationInfo
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.ProcessorType.LocationInfo} LocationInfo
                             */
                            LocationInfo.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.ProcessorType.LocationInfo)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.ProcessorType.LocationInfo();
                                if (object.locationId != null)
                                    message.locationId = String(object.locationId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a LocationInfo message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.ProcessorType.LocationInfo
                             * @static
                             * @param {google.cloud.documentai.v1.ProcessorType.LocationInfo} message LocationInfo
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            LocationInfo.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.locationId = "";
                                if (message.locationId != null && message.hasOwnProperty("locationId"))
                                    object.locationId = message.locationId;
                                return object;
                            };
    
                            /**
                             * Converts this LocationInfo to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.ProcessorType.LocationInfo
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            LocationInfo.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for LocationInfo
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.ProcessorType.LocationInfo
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            LocationInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.ProcessorType.LocationInfo";
                            };
    
                            return LocationInfo;
                        })();
    
                        return ProcessorType;
                    })();
    
                    return v1;
                })();
    
                return documentai;
            })();
    
            return cloud;
        })();
    
        google.api = (function() {
    
            /**
             * Namespace api.
             * @memberof google
             * @namespace
             */
            var api = {};
    
            /**
             * FieldBehavior enum.
             * @name google.api.FieldBehavior
             * @enum {number}
             * @property {number} FIELD_BEHAVIOR_UNSPECIFIED=0 FIELD_BEHAVIOR_UNSPECIFIED value
             * @property {number} OPTIONAL=1 OPTIONAL value
             * @property {number} REQUIRED=2 REQUIRED value
             * @property {number} OUTPUT_ONLY=3 OUTPUT_ONLY value
             * @property {number} INPUT_ONLY=4 INPUT_ONLY value
             * @property {number} IMMUTABLE=5 IMMUTABLE value
             * @property {number} UNORDERED_LIST=6 UNORDERED_LIST value
             * @property {number} NON_EMPTY_DEFAULT=7 NON_EMPTY_DEFAULT value
             * @property {number} IDENTIFIER=8 IDENTIFIER value
             */
            api.FieldBehavior = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "FIELD_BEHAVIOR_UNSPECIFIED"] = 0;
                values[valuesById[1] = "OPTIONAL"] = 1;
                values[valuesById[2] = "REQUIRED"] = 2;
                values[valuesById[3] = "OUTPUT_ONLY"] = 3;
                values[valuesById[4] = "INPUT_ONLY"] = 4;
                values[valuesById[5] = "IMMUTABLE"] = 5;
                values[valuesById[6] = "UNORDERED_LIST"] = 6;
                values[valuesById[7] = "NON_EMPTY_DEFAULT"] = 7;
                values[valuesById[8] = "IDENTIFIER"] = 8;
                return values;
            })();
    
            api.Http = (function() {
    
                /**
                 * Properties of a Http.
                 * @memberof google.api
                 * @interface IHttp
                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
                 * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion
                 */
    
                /**
                 * Constructs a new Http.
                 * @memberof google.api
                 * @classdesc Represents a Http.
                 * @implements IHttp
                 * @constructor
                 * @param {google.api.IHttp=} [properties] Properties to set
                 */
                function Http(properties) {
                    this.rules = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Http rules.
                 * @member {Array.<google.api.IHttpRule>} rules
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.rules = $util.emptyArray;
    
                /**
                 * Http fullyDecodeReservedExpansion.
                 * @member {boolean} fullyDecodeReservedExpansion
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.fullyDecodeReservedExpansion = false;
    
                /**
                 * Creates a new Http instance using the specified properties.
                 * @function create
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp=} [properties] Properties to set
                 * @returns {google.api.Http} Http instance
                 */
                Http.create = function create(properties) {
                    return new Http(properties);
                };
    
                /**
                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.rules != null && message.rules.length)
                        for (var i = 0; i < message.rules.length; ++i)
                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fullyDecodeReservedExpansion != null && Object.hasOwnProperty.call(message, "fullyDecodeReservedExpansion"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fullyDecodeReservedExpansion);
                    return writer;
                };
    
                /**
                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.rules && message.rules.length))
                                    message.rules = [];
                                message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.fullyDecodeReservedExpansion = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Http message.
                 * @function verify
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Http.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.rules != null && message.hasOwnProperty("rules")) {
                        if (!Array.isArray(message.rules))
                            return "rules: array expected";
                        for (var i = 0; i < message.rules.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.rules[i]);
                            if (error)
                                return "rules." + error;
                        }
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        if (typeof message.fullyDecodeReservedExpansion !== "boolean")
                            return "fullyDecodeReservedExpansion: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a Http message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Http} Http
                 */
                Http.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Http)
                        return object;
                    var message = new $root.google.api.Http();
                    if (object.rules) {
                        if (!Array.isArray(object.rules))
                            throw TypeError(".google.api.Http.rules: array expected");
                        message.rules = [];
                        for (var i = 0; i < object.rules.length; ++i) {
                            if (typeof object.rules[i] !== "object")
                                throw TypeError(".google.api.Http.rules: object expected");
                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                        }
                    }
                    if (object.fullyDecodeReservedExpansion != null)
                        message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Http message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.Http} message Http
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Http.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.rules = [];
                    if (options.defaults)
                        object.fullyDecodeReservedExpansion = false;
                    if (message.rules && message.rules.length) {
                        object.rules = [];
                        for (var j = 0; j < message.rules.length; ++j)
                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;
                    return object;
                };
    
                /**
                 * Converts this Http to JSON.
                 * @function toJSON
                 * @memberof google.api.Http
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Http.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Http
                 * @function getTypeUrl
                 * @memberof google.api.Http
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Http.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Http";
                };
    
                return Http;
            })();
    
            api.HttpRule = (function() {
    
                /**
                 * Properties of a HttpRule.
                 * @memberof google.api
                 * @interface IHttpRule
                 * @property {string|null} [selector] HttpRule selector
                 * @property {string|null} [get] HttpRule get
                 * @property {string|null} [put] HttpRule put
                 * @property {string|null} [post] HttpRule post
                 * @property {string|null} ["delete"] HttpRule delete
                 * @property {string|null} [patch] HttpRule patch
                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
                 * @property {string|null} [body] HttpRule body
                 * @property {string|null} [responseBody] HttpRule responseBody
                 * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings
                 */
    
                /**
                 * Constructs a new HttpRule.
                 * @memberof google.api
                 * @classdesc Represents a HttpRule.
                 * @implements IHttpRule
                 * @constructor
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 */
                function HttpRule(properties) {
                    this.additionalBindings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpRule selector.
                 * @member {string} selector
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.selector = "";
    
                /**
                 * HttpRule get.
                 * @member {string|null|undefined} get
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.get = null;
    
                /**
                 * HttpRule put.
                 * @member {string|null|undefined} put
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.put = null;
    
                /**
                 * HttpRule post.
                 * @member {string|null|undefined} post
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.post = null;
    
                /**
                 * HttpRule delete.
                 * @member {string|null|undefined} delete
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype["delete"] = null;
    
                /**
                 * HttpRule patch.
                 * @member {string|null|undefined} patch
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.patch = null;
    
                /**
                 * HttpRule custom.
                 * @member {google.api.ICustomHttpPattern|null|undefined} custom
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.custom = null;
    
                /**
                 * HttpRule body.
                 * @member {string} body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.body = "";
    
                /**
                 * HttpRule responseBody.
                 * @member {string} responseBody
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.responseBody = "";
    
                /**
                 * HttpRule additionalBindings.
                 * @member {Array.<google.api.IHttpRule>} additionalBindings
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.additionalBindings = $util.emptyArray;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * HttpRule pattern.
                 * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                Object.defineProperty(HttpRule.prototype, "pattern", {
                    get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new HttpRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 * @returns {google.api.HttpRule} HttpRule instance
                 */
                HttpRule.create = function create(properties) {
                    return new HttpRule(properties);
                };
    
                /**
                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.get != null && Object.hasOwnProperty.call(message, "get"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                    if (message.put != null && Object.hasOwnProperty.call(message, "put"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                    if (message.post != null && Object.hasOwnProperty.call(message, "post"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                    if (message["delete"] != null && Object.hasOwnProperty.call(message, "delete"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                    if (message.patch != null && Object.hasOwnProperty.call(message, "patch"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                    if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                    if (message.custom != null && Object.hasOwnProperty.call(message, "custom"))
                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.additionalBindings != null && message.additionalBindings.length)
                        for (var i = 0; i < message.additionalBindings.length; ++i)
                            $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    if (message.responseBody != null && Object.hasOwnProperty.call(message, "responseBody"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.responseBody);
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.get = reader.string();
                                break;
                            }
                        case 3: {
                                message.put = reader.string();
                                break;
                            }
                        case 4: {
                                message.post = reader.string();
                                break;
                            }
                        case 5: {
                                message["delete"] = reader.string();
                                break;
                            }
                        case 6: {
                                message.patch = reader.string();
                                break;
                            }
                        case 8: {
                                message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                                break;
                            }
                        case 7: {
                                message.body = reader.string();
                                break;
                            }
                        case 12: {
                                message.responseBody = reader.string();
                                break;
                            }
                        case 11: {
                                if (!(message.additionalBindings && message.additionalBindings.length))
                                    message.additionalBindings = [];
                                message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpRule message.
                 * @function verify
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.get != null && message.hasOwnProperty("get")) {
                        properties.pattern = 1;
                        if (!$util.isString(message.get))
                            return "get: string expected";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.put))
                            return "put: string expected";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.post))
                            return "post: string expected";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message["delete"]))
                            return "delete: string expected";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.patch))
                            return "patch: string expected";
                    }
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        {
                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);
                            if (error)
                                return "custom." + error;
                        }
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        if (!$util.isString(message.body))
                            return "body: string expected";
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        if (!$util.isString(message.responseBody))
                            return "responseBody: string expected";
                    if (message.additionalBindings != null && message.hasOwnProperty("additionalBindings")) {
                        if (!Array.isArray(message.additionalBindings))
                            return "additionalBindings: array expected";
                        for (var i = 0; i < message.additionalBindings.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);
                            if (error)
                                return "additionalBindings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpRule} HttpRule
                 */
                HttpRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpRule)
                        return object;
                    var message = new $root.google.api.HttpRule();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.get != null)
                        message.get = String(object.get);
                    if (object.put != null)
                        message.put = String(object.put);
                    if (object.post != null)
                        message.post = String(object.post);
                    if (object["delete"] != null)
                        message["delete"] = String(object["delete"]);
                    if (object.patch != null)
                        message.patch = String(object.patch);
                    if (object.custom != null) {
                        if (typeof object.custom !== "object")
                            throw TypeError(".google.api.HttpRule.custom: object expected");
                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                    }
                    if (object.body != null)
                        message.body = String(object.body);
                    if (object.responseBody != null)
                        message.responseBody = String(object.responseBody);
                    if (object.additionalBindings) {
                        if (!Array.isArray(object.additionalBindings))
                            throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
                        message.additionalBindings = [];
                        for (var i = 0; i < object.additionalBindings.length; ++i) {
                            if (typeof object.additionalBindings[i] !== "object")
                                throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                            message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.HttpRule} message HttpRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.additionalBindings = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.body = "";
                        object.responseBody = "";
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.get != null && message.hasOwnProperty("get")) {
                        object.get = message.get;
                        if (options.oneofs)
                            object.pattern = "get";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        object.put = message.put;
                        if (options.oneofs)
                            object.pattern = "put";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        object.post = message.post;
                        if (options.oneofs)
                            object.pattern = "post";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        object["delete"] = message["delete"];
                        if (options.oneofs)
                            object.pattern = "delete";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        object.patch = message.patch;
                        if (options.oneofs)
                            object.pattern = "patch";
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        object.body = message.body;
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                        if (options.oneofs)
                            object.pattern = "custom";
                    }
                    if (message.additionalBindings && message.additionalBindings.length) {
                        object.additionalBindings = [];
                        for (var j = 0; j < message.additionalBindings.length; ++j)
                            object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);
                    }
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        object.responseBody = message.responseBody;
                    return object;
                };
    
                /**
                 * Converts this HttpRule to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for HttpRule
                 * @function getTypeUrl
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                HttpRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.HttpRule";
                };
    
                return HttpRule;
            })();
    
            api.CustomHttpPattern = (function() {
    
                /**
                 * Properties of a CustomHttpPattern.
                 * @memberof google.api
                 * @interface ICustomHttpPattern
                 * @property {string|null} [kind] CustomHttpPattern kind
                 * @property {string|null} [path] CustomHttpPattern path
                 */
    
                /**
                 * Constructs a new CustomHttpPattern.
                 * @memberof google.api
                 * @classdesc Represents a CustomHttpPattern.
                 * @implements ICustomHttpPattern
                 * @constructor
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 */
                function CustomHttpPattern(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CustomHttpPattern kind.
                 * @member {string} kind
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.kind = "";
    
                /**
                 * CustomHttpPattern path.
                 * @member {string} path
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.path = "";
    
                /**
                 * Creates a new CustomHttpPattern instance using the specified properties.
                 * @function create
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance
                 */
                CustomHttpPattern.create = function create(properties) {
                    return new CustomHttpPattern(properties);
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                    if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                    return writer;
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.kind = reader.string();
                                break;
                            }
                        case 2: {
                                message.path = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CustomHttpPattern message.
                 * @function verify
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CustomHttpPattern.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        if (!$util.isString(message.kind))
                            return "kind: string expected";
                    if (message.path != null && message.hasOwnProperty("path"))
                        if (!$util.isString(message.path))
                            return "path: string expected";
                    return null;
                };
    
                /**
                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 */
                CustomHttpPattern.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CustomHttpPattern)
                        return object;
                    var message = new $root.google.api.CustomHttpPattern();
                    if (object.kind != null)
                        message.kind = String(object.kind);
                    if (object.path != null)
                        message.path = String(object.path);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CustomHttpPattern.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.kind = "";
                        object.path = "";
                    }
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        object.kind = message.kind;
                    if (message.path != null && message.hasOwnProperty("path"))
                        object.path = message.path;
                    return object;
                };
    
                /**
                 * Converts this CustomHttpPattern to JSON.
                 * @function toJSON
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CustomHttpPattern.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CustomHttpPattern
                 * @function getTypeUrl
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CustomHttpPattern.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CustomHttpPattern";
                };
    
                return CustomHttpPattern;
            })();
    
            api.CommonLanguageSettings = (function() {
    
                /**
                 * Properties of a CommonLanguageSettings.
                 * @memberof google.api
                 * @interface ICommonLanguageSettings
                 * @property {string|null} [referenceDocsUri] CommonLanguageSettings referenceDocsUri
                 * @property {Array.<google.api.ClientLibraryDestination>|null} [destinations] CommonLanguageSettings destinations
                 */
    
                /**
                 * Constructs a new CommonLanguageSettings.
                 * @memberof google.api
                 * @classdesc Represents a CommonLanguageSettings.
                 * @implements ICommonLanguageSettings
                 * @constructor
                 * @param {google.api.ICommonLanguageSettings=} [properties] Properties to set
                 */
                function CommonLanguageSettings(properties) {
                    this.destinations = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CommonLanguageSettings referenceDocsUri.
                 * @member {string} referenceDocsUri
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 */
                CommonLanguageSettings.prototype.referenceDocsUri = "";
    
                /**
                 * CommonLanguageSettings destinations.
                 * @member {Array.<google.api.ClientLibraryDestination>} destinations
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 */
                CommonLanguageSettings.prototype.destinations = $util.emptyArray;
    
                /**
                 * Creates a new CommonLanguageSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings=} [properties] Properties to set
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings instance
                 */
                CommonLanguageSettings.create = function create(properties) {
                    return new CommonLanguageSettings(properties);
                };
    
                /**
                 * Encodes the specified CommonLanguageSettings message. Does not implicitly {@link google.api.CommonLanguageSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings} message CommonLanguageSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CommonLanguageSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.referenceDocsUri != null && Object.hasOwnProperty.call(message, "referenceDocsUri"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.referenceDocsUri);
                    if (message.destinations != null && message.destinations.length) {
                        writer.uint32(/* id 2, wireType 2 =*/18).fork();
                        for (var i = 0; i < message.destinations.length; ++i)
                            writer.int32(message.destinations[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified CommonLanguageSettings message, length delimited. Does not implicitly {@link google.api.CommonLanguageSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings} message CommonLanguageSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CommonLanguageSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CommonLanguageSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CommonLanguageSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CommonLanguageSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.referenceDocsUri = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.destinations && message.destinations.length))
                                    message.destinations = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.destinations.push(reader.int32());
                                } else
                                    message.destinations.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CommonLanguageSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CommonLanguageSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CommonLanguageSettings message.
                 * @function verify
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CommonLanguageSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.referenceDocsUri != null && message.hasOwnProperty("referenceDocsUri"))
                        if (!$util.isString(message.referenceDocsUri))
                            return "referenceDocsUri: string expected";
                    if (message.destinations != null && message.hasOwnProperty("destinations")) {
                        if (!Array.isArray(message.destinations))
                            return "destinations: array expected";
                        for (var i = 0; i < message.destinations.length; ++i)
                            switch (message.destinations[i]) {
                            default:
                                return "destinations: enum value[] expected";
                            case 0:
                            case 10:
                            case 20:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a CommonLanguageSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 */
                CommonLanguageSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CommonLanguageSettings)
                        return object;
                    var message = new $root.google.api.CommonLanguageSettings();
                    if (object.referenceDocsUri != null)
                        message.referenceDocsUri = String(object.referenceDocsUri);
                    if (object.destinations) {
                        if (!Array.isArray(object.destinations))
                            throw TypeError(".google.api.CommonLanguageSettings.destinations: array expected");
                        message.destinations = [];
                        for (var i = 0; i < object.destinations.length; ++i)
                            switch (object.destinations[i]) {
                            default:
                                if (typeof object.destinations[i] === "number") {
                                    message.destinations[i] = object.destinations[i];
                                    break;
                                }
                            case "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED":
                            case 0:
                                message.destinations[i] = 0;
                                break;
                            case "GITHUB":
                            case 10:
                                message.destinations[i] = 10;
                                break;
                            case "PACKAGE_MANAGER":
                            case 20:
                                message.destinations[i] = 20;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a CommonLanguageSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.CommonLanguageSettings} message CommonLanguageSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CommonLanguageSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.destinations = [];
                    if (options.defaults)
                        object.referenceDocsUri = "";
                    if (message.referenceDocsUri != null && message.hasOwnProperty("referenceDocsUri"))
                        object.referenceDocsUri = message.referenceDocsUri;
                    if (message.destinations && message.destinations.length) {
                        object.destinations = [];
                        for (var j = 0; j < message.destinations.length; ++j)
                            object.destinations[j] = options.enums === String ? $root.google.api.ClientLibraryDestination[message.destinations[j]] === undefined ? message.destinations[j] : $root.google.api.ClientLibraryDestination[message.destinations[j]] : message.destinations[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this CommonLanguageSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CommonLanguageSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CommonLanguageSettings
                 * @function getTypeUrl
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CommonLanguageSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CommonLanguageSettings";
                };
    
                return CommonLanguageSettings;
            })();
    
            api.ClientLibrarySettings = (function() {
    
                /**
                 * Properties of a ClientLibrarySettings.
                 * @memberof google.api
                 * @interface IClientLibrarySettings
                 * @property {string|null} [version] ClientLibrarySettings version
                 * @property {google.api.LaunchStage|null} [launchStage] ClientLibrarySettings launchStage
                 * @property {boolean|null} [restNumericEnums] ClientLibrarySettings restNumericEnums
                 * @property {google.api.IJavaSettings|null} [javaSettings] ClientLibrarySettings javaSettings
                 * @property {google.api.ICppSettings|null} [cppSettings] ClientLibrarySettings cppSettings
                 * @property {google.api.IPhpSettings|null} [phpSettings] ClientLibrarySettings phpSettings
                 * @property {google.api.IPythonSettings|null} [pythonSettings] ClientLibrarySettings pythonSettings
                 * @property {google.api.INodeSettings|null} [nodeSettings] ClientLibrarySettings nodeSettings
                 * @property {google.api.IDotnetSettings|null} [dotnetSettings] ClientLibrarySettings dotnetSettings
                 * @property {google.api.IRubySettings|null} [rubySettings] ClientLibrarySettings rubySettings
                 * @property {google.api.IGoSettings|null} [goSettings] ClientLibrarySettings goSettings
                 */
    
                /**
                 * Constructs a new ClientLibrarySettings.
                 * @memberof google.api
                 * @classdesc Represents a ClientLibrarySettings.
                 * @implements IClientLibrarySettings
                 * @constructor
                 * @param {google.api.IClientLibrarySettings=} [properties] Properties to set
                 */
                function ClientLibrarySettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ClientLibrarySettings version.
                 * @member {string} version
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.version = "";
    
                /**
                 * ClientLibrarySettings launchStage.
                 * @member {google.api.LaunchStage} launchStage
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.launchStage = 0;
    
                /**
                 * ClientLibrarySettings restNumericEnums.
                 * @member {boolean} restNumericEnums
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.restNumericEnums = false;
    
                /**
                 * ClientLibrarySettings javaSettings.
                 * @member {google.api.IJavaSettings|null|undefined} javaSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.javaSettings = null;
    
                /**
                 * ClientLibrarySettings cppSettings.
                 * @member {google.api.ICppSettings|null|undefined} cppSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.cppSettings = null;
    
                /**
                 * ClientLibrarySettings phpSettings.
                 * @member {google.api.IPhpSettings|null|undefined} phpSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.phpSettings = null;
    
                /**
                 * ClientLibrarySettings pythonSettings.
                 * @member {google.api.IPythonSettings|null|undefined} pythonSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.pythonSettings = null;
    
                /**
                 * ClientLibrarySettings nodeSettings.
                 * @member {google.api.INodeSettings|null|undefined} nodeSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.nodeSettings = null;
    
                /**
                 * ClientLibrarySettings dotnetSettings.
                 * @member {google.api.IDotnetSettings|null|undefined} dotnetSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.dotnetSettings = null;
    
                /**
                 * ClientLibrarySettings rubySettings.
                 * @member {google.api.IRubySettings|null|undefined} rubySettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.rubySettings = null;
    
                /**
                 * ClientLibrarySettings goSettings.
                 * @member {google.api.IGoSettings|null|undefined} goSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.goSettings = null;
    
                /**
                 * Creates a new ClientLibrarySettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings=} [properties] Properties to set
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings instance
                 */
                ClientLibrarySettings.create = function create(properties) {
                    return new ClientLibrarySettings(properties);
                };
    
                /**
                 * Encodes the specified ClientLibrarySettings message. Does not implicitly {@link google.api.ClientLibrarySettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings} message ClientLibrarySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ClientLibrarySettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                    if (message.launchStage != null && Object.hasOwnProperty.call(message, "launchStage"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.launchStage);
                    if (message.restNumericEnums != null && Object.hasOwnProperty.call(message, "restNumericEnums"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.restNumericEnums);
                    if (message.javaSettings != null && Object.hasOwnProperty.call(message, "javaSettings"))
                        $root.google.api.JavaSettings.encode(message.javaSettings, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                    if (message.cppSettings != null && Object.hasOwnProperty.call(message, "cppSettings"))
                        $root.google.api.CppSettings.encode(message.cppSettings, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
                    if (message.phpSettings != null && Object.hasOwnProperty.call(message, "phpSettings"))
                        $root.google.api.PhpSettings.encode(message.phpSettings, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                    if (message.pythonSettings != null && Object.hasOwnProperty.call(message, "pythonSettings"))
                        $root.google.api.PythonSettings.encode(message.pythonSettings, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();
                    if (message.nodeSettings != null && Object.hasOwnProperty.call(message, "nodeSettings"))
                        $root.google.api.NodeSettings.encode(message.nodeSettings, writer.uint32(/* id 25, wireType 2 =*/202).fork()).ldelim();
                    if (message.dotnetSettings != null && Object.hasOwnProperty.call(message, "dotnetSettings"))
                        $root.google.api.DotnetSettings.encode(message.dotnetSettings, writer.uint32(/* id 26, wireType 2 =*/210).fork()).ldelim();
                    if (message.rubySettings != null && Object.hasOwnProperty.call(message, "rubySettings"))
                        $root.google.api.RubySettings.encode(message.rubySettings, writer.uint32(/* id 27, wireType 2 =*/218).fork()).ldelim();
                    if (message.goSettings != null && Object.hasOwnProperty.call(message, "goSettings"))
                        $root.google.api.GoSettings.encode(message.goSettings, writer.uint32(/* id 28, wireType 2 =*/226).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ClientLibrarySettings message, length delimited. Does not implicitly {@link google.api.ClientLibrarySettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings} message ClientLibrarySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ClientLibrarySettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ClientLibrarySettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ClientLibrarySettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ClientLibrarySettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.version = reader.string();
                                break;
                            }
                        case 2: {
                                message.launchStage = reader.int32();
                                break;
                            }
                        case 3: {
                                message.restNumericEnums = reader.bool();
                                break;
                            }
                        case 21: {
                                message.javaSettings = $root.google.api.JavaSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 22: {
                                message.cppSettings = $root.google.api.CppSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 23: {
                                message.phpSettings = $root.google.api.PhpSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 24: {
                                message.pythonSettings = $root.google.api.PythonSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 25: {
                                message.nodeSettings = $root.google.api.NodeSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 26: {
                                message.dotnetSettings = $root.google.api.DotnetSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 27: {
                                message.rubySettings = $root.google.api.RubySettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 28: {
                                message.goSettings = $root.google.api.GoSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ClientLibrarySettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ClientLibrarySettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ClientLibrarySettings message.
                 * @function verify
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ClientLibrarySettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.version != null && message.hasOwnProperty("version"))
                        if (!$util.isString(message.version))
                            return "version: string expected";
                    if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                        switch (message.launchStage) {
                        default:
                            return "launchStage: enum value expected";
                        case 0:
                        case 6:
                        case 7:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            break;
                        }
                    if (message.restNumericEnums != null && message.hasOwnProperty("restNumericEnums"))
                        if (typeof message.restNumericEnums !== "boolean")
                            return "restNumericEnums: boolean expected";
                    if (message.javaSettings != null && message.hasOwnProperty("javaSettings")) {
                        var error = $root.google.api.JavaSettings.verify(message.javaSettings);
                        if (error)
                            return "javaSettings." + error;
                    }
                    if (message.cppSettings != null && message.hasOwnProperty("cppSettings")) {
                        var error = $root.google.api.CppSettings.verify(message.cppSettings);
                        if (error)
                            return "cppSettings." + error;
                    }
                    if (message.phpSettings != null && message.hasOwnProperty("phpSettings")) {
                        var error = $root.google.api.PhpSettings.verify(message.phpSettings);
                        if (error)
                            return "phpSettings." + error;
                    }
                    if (message.pythonSettings != null && message.hasOwnProperty("pythonSettings")) {
                        var error = $root.google.api.PythonSettings.verify(message.pythonSettings);
                        if (error)
                            return "pythonSettings." + error;
                    }
                    if (message.nodeSettings != null && message.hasOwnProperty("nodeSettings")) {
                        var error = $root.google.api.NodeSettings.verify(message.nodeSettings);
                        if (error)
                            return "nodeSettings." + error;
                    }
                    if (message.dotnetSettings != null && message.hasOwnProperty("dotnetSettings")) {
                        var error = $root.google.api.DotnetSettings.verify(message.dotnetSettings);
                        if (error)
                            return "dotnetSettings." + error;
                    }
                    if (message.rubySettings != null && message.hasOwnProperty("rubySettings")) {
                        var error = $root.google.api.RubySettings.verify(message.rubySettings);
                        if (error)
                            return "rubySettings." + error;
                    }
                    if (message.goSettings != null && message.hasOwnProperty("goSettings")) {
                        var error = $root.google.api.GoSettings.verify(message.goSettings);
                        if (error)
                            return "goSettings." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ClientLibrarySettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 */
                ClientLibrarySettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ClientLibrarySettings)
                        return object;
                    var message = new $root.google.api.ClientLibrarySettings();
                    if (object.version != null)
                        message.version = String(object.version);
                    switch (object.launchStage) {
                    default:
                        if (typeof object.launchStage === "number") {
                            message.launchStage = object.launchStage;
                            break;
                        }
                        break;
                    case "LAUNCH_STAGE_UNSPECIFIED":
                    case 0:
                        message.launchStage = 0;
                        break;
                    case "UNIMPLEMENTED":
                    case 6:
                        message.launchStage = 6;
                        break;
                    case "PRELAUNCH":
                    case 7:
                        message.launchStage = 7;
                        break;
                    case "EARLY_ACCESS":
                    case 1:
                        message.launchStage = 1;
                        break;
                    case "ALPHA":
                    case 2:
                        message.launchStage = 2;
                        break;
                    case "BETA":
                    case 3:
                        message.launchStage = 3;
                        break;
                    case "GA":
                    case 4:
                        message.launchStage = 4;
                        break;
                    case "DEPRECATED":
                    case 5:
                        message.launchStage = 5;
                        break;
                    }
                    if (object.restNumericEnums != null)
                        message.restNumericEnums = Boolean(object.restNumericEnums);
                    if (object.javaSettings != null) {
                        if (typeof object.javaSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.javaSettings: object expected");
                        message.javaSettings = $root.google.api.JavaSettings.fromObject(object.javaSettings);
                    }
                    if (object.cppSettings != null) {
                        if (typeof object.cppSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.cppSettings: object expected");
                        message.cppSettings = $root.google.api.CppSettings.fromObject(object.cppSettings);
                    }
                    if (object.phpSettings != null) {
                        if (typeof object.phpSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.phpSettings: object expected");
                        message.phpSettings = $root.google.api.PhpSettings.fromObject(object.phpSettings);
                    }
                    if (object.pythonSettings != null) {
                        if (typeof object.pythonSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.pythonSettings: object expected");
                        message.pythonSettings = $root.google.api.PythonSettings.fromObject(object.pythonSettings);
                    }
                    if (object.nodeSettings != null) {
                        if (typeof object.nodeSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.nodeSettings: object expected");
                        message.nodeSettings = $root.google.api.NodeSettings.fromObject(object.nodeSettings);
                    }
                    if (object.dotnetSettings != null) {
                        if (typeof object.dotnetSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.dotnetSettings: object expected");
                        message.dotnetSettings = $root.google.api.DotnetSettings.fromObject(object.dotnetSettings);
                    }
                    if (object.rubySettings != null) {
                        if (typeof object.rubySettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.rubySettings: object expected");
                        message.rubySettings = $root.google.api.RubySettings.fromObject(object.rubySettings);
                    }
                    if (object.goSettings != null) {
                        if (typeof object.goSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.goSettings: object expected");
                        message.goSettings = $root.google.api.GoSettings.fromObject(object.goSettings);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ClientLibrarySettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.ClientLibrarySettings} message ClientLibrarySettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ClientLibrarySettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.version = "";
                        object.launchStage = options.enums === String ? "LAUNCH_STAGE_UNSPECIFIED" : 0;
                        object.restNumericEnums = false;
                        object.javaSettings = null;
                        object.cppSettings = null;
                        object.phpSettings = null;
                        object.pythonSettings = null;
                        object.nodeSettings = null;
                        object.dotnetSettings = null;
                        object.rubySettings = null;
                        object.goSettings = null;
                    }
                    if (message.version != null && message.hasOwnProperty("version"))
                        object.version = message.version;
                    if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                        object.launchStage = options.enums === String ? $root.google.api.LaunchStage[message.launchStage] === undefined ? message.launchStage : $root.google.api.LaunchStage[message.launchStage] : message.launchStage;
                    if (message.restNumericEnums != null && message.hasOwnProperty("restNumericEnums"))
                        object.restNumericEnums = message.restNumericEnums;
                    if (message.javaSettings != null && message.hasOwnProperty("javaSettings"))
                        object.javaSettings = $root.google.api.JavaSettings.toObject(message.javaSettings, options);
                    if (message.cppSettings != null && message.hasOwnProperty("cppSettings"))
                        object.cppSettings = $root.google.api.CppSettings.toObject(message.cppSettings, options);
                    if (message.phpSettings != null && message.hasOwnProperty("phpSettings"))
                        object.phpSettings = $root.google.api.PhpSettings.toObject(message.phpSettings, options);
                    if (message.pythonSettings != null && message.hasOwnProperty("pythonSettings"))
                        object.pythonSettings = $root.google.api.PythonSettings.toObject(message.pythonSettings, options);
                    if (message.nodeSettings != null && message.hasOwnProperty("nodeSettings"))
                        object.nodeSettings = $root.google.api.NodeSettings.toObject(message.nodeSettings, options);
                    if (message.dotnetSettings != null && message.hasOwnProperty("dotnetSettings"))
                        object.dotnetSettings = $root.google.api.DotnetSettings.toObject(message.dotnetSettings, options);
                    if (message.rubySettings != null && message.hasOwnProperty("rubySettings"))
                        object.rubySettings = $root.google.api.RubySettings.toObject(message.rubySettings, options);
                    if (message.goSettings != null && message.hasOwnProperty("goSettings"))
                        object.goSettings = $root.google.api.GoSettings.toObject(message.goSettings, options);
                    return object;
                };
    
                /**
                 * Converts this ClientLibrarySettings to JSON.
                 * @function toJSON
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ClientLibrarySettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ClientLibrarySettings
                 * @function getTypeUrl
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ClientLibrarySettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ClientLibrarySettings";
                };
    
                return ClientLibrarySettings;
            })();
    
            api.Publishing = (function() {
    
                /**
                 * Properties of a Publishing.
                 * @memberof google.api
                 * @interface IPublishing
                 * @property {Array.<google.api.IMethodSettings>|null} [methodSettings] Publishing methodSettings
                 * @property {string|null} [newIssueUri] Publishing newIssueUri
                 * @property {string|null} [documentationUri] Publishing documentationUri
                 * @property {string|null} [apiShortName] Publishing apiShortName
                 * @property {string|null} [githubLabel] Publishing githubLabel
                 * @property {Array.<string>|null} [codeownerGithubTeams] Publishing codeownerGithubTeams
                 * @property {string|null} [docTagPrefix] Publishing docTagPrefix
                 * @property {google.api.ClientLibraryOrganization|null} [organization] Publishing organization
                 * @property {Array.<google.api.IClientLibrarySettings>|null} [librarySettings] Publishing librarySettings
                 * @property {string|null} [protoReferenceDocumentationUri] Publishing protoReferenceDocumentationUri
                 */
    
                /**
                 * Constructs a new Publishing.
                 * @memberof google.api
                 * @classdesc Represents a Publishing.
                 * @implements IPublishing
                 * @constructor
                 * @param {google.api.IPublishing=} [properties] Properties to set
                 */
                function Publishing(properties) {
                    this.methodSettings = [];
                    this.codeownerGithubTeams = [];
                    this.librarySettings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Publishing methodSettings.
                 * @member {Array.<google.api.IMethodSettings>} methodSettings
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.methodSettings = $util.emptyArray;
    
                /**
                 * Publishing newIssueUri.
                 * @member {string} newIssueUri
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.newIssueUri = "";
    
                /**
                 * Publishing documentationUri.
                 * @member {string} documentationUri
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.documentationUri = "";
    
                /**
                 * Publishing apiShortName.
                 * @member {string} apiShortName
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.apiShortName = "";
    
                /**
                 * Publishing githubLabel.
                 * @member {string} githubLabel
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.githubLabel = "";
    
                /**
                 * Publishing codeownerGithubTeams.
                 * @member {Array.<string>} codeownerGithubTeams
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.codeownerGithubTeams = $util.emptyArray;
    
                /**
                 * Publishing docTagPrefix.
                 * @member {string} docTagPrefix
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.docTagPrefix = "";
    
                /**
                 * Publishing organization.
                 * @member {google.api.ClientLibraryOrganization} organization
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.organization = 0;
    
                /**
                 * Publishing librarySettings.
                 * @member {Array.<google.api.IClientLibrarySettings>} librarySettings
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.librarySettings = $util.emptyArray;
    
                /**
                 * Publishing protoReferenceDocumentationUri.
                 * @member {string} protoReferenceDocumentationUri
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.protoReferenceDocumentationUri = "";
    
                /**
                 * Creates a new Publishing instance using the specified properties.
                 * @function create
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing=} [properties] Properties to set
                 * @returns {google.api.Publishing} Publishing instance
                 */
                Publishing.create = function create(properties) {
                    return new Publishing(properties);
                };
    
                /**
                 * Encodes the specified Publishing message. Does not implicitly {@link google.api.Publishing.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing} message Publishing message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Publishing.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.methodSettings != null && message.methodSettings.length)
                        for (var i = 0; i < message.methodSettings.length; ++i)
                            $root.google.api.MethodSettings.encode(message.methodSettings[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.newIssueUri != null && Object.hasOwnProperty.call(message, "newIssueUri"))
                        writer.uint32(/* id 101, wireType 2 =*/810).string(message.newIssueUri);
                    if (message.documentationUri != null && Object.hasOwnProperty.call(message, "documentationUri"))
                        writer.uint32(/* id 102, wireType 2 =*/818).string(message.documentationUri);
                    if (message.apiShortName != null && Object.hasOwnProperty.call(message, "apiShortName"))
                        writer.uint32(/* id 103, wireType 2 =*/826).string(message.apiShortName);
                    if (message.githubLabel != null && Object.hasOwnProperty.call(message, "githubLabel"))
                        writer.uint32(/* id 104, wireType 2 =*/834).string(message.githubLabel);
                    if (message.codeownerGithubTeams != null && message.codeownerGithubTeams.length)
                        for (var i = 0; i < message.codeownerGithubTeams.length; ++i)
                            writer.uint32(/* id 105, wireType 2 =*/842).string(message.codeownerGithubTeams[i]);
                    if (message.docTagPrefix != null && Object.hasOwnProperty.call(message, "docTagPrefix"))
                        writer.uint32(/* id 106, wireType 2 =*/850).string(message.docTagPrefix);
                    if (message.organization != null && Object.hasOwnProperty.call(message, "organization"))
                        writer.uint32(/* id 107, wireType 0 =*/856).int32(message.organization);
                    if (message.librarySettings != null && message.librarySettings.length)
                        for (var i = 0; i < message.librarySettings.length; ++i)
                            $root.google.api.ClientLibrarySettings.encode(message.librarySettings[i], writer.uint32(/* id 109, wireType 2 =*/874).fork()).ldelim();
                    if (message.protoReferenceDocumentationUri != null && Object.hasOwnProperty.call(message, "protoReferenceDocumentationUri"))
                        writer.uint32(/* id 110, wireType 2 =*/882).string(message.protoReferenceDocumentationUri);
                    return writer;
                };
    
                /**
                 * Encodes the specified Publishing message, length delimited. Does not implicitly {@link google.api.Publishing.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing} message Publishing message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Publishing.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Publishing message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Publishing
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Publishing} Publishing
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Publishing.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Publishing();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.methodSettings && message.methodSettings.length))
                                    message.methodSettings = [];
                                message.methodSettings.push($root.google.api.MethodSettings.decode(reader, reader.uint32()));
                                break;
                            }
                        case 101: {
                                message.newIssueUri = reader.string();
                                break;
                            }
                        case 102: {
                                message.documentationUri = reader.string();
                                break;
                            }
                        case 103: {
                                message.apiShortName = reader.string();
                                break;
                            }
                        case 104: {
                                message.githubLabel = reader.string();
                                break;
                            }
                        case 105: {
                                if (!(message.codeownerGithubTeams && message.codeownerGithubTeams.length))
                                    message.codeownerGithubTeams = [];
                                message.codeownerGithubTeams.push(reader.string());
                                break;
                            }
                        case 106: {
                                message.docTagPrefix = reader.string();
                                break;
                            }
                        case 107: {
                                message.organization = reader.int32();
                                break;
                            }
                        case 109: {
                                if (!(message.librarySettings && message.librarySettings.length))
                                    message.librarySettings = [];
                                message.librarySettings.push($root.google.api.ClientLibrarySettings.decode(reader, reader.uint32()));
                                break;
                            }
                        case 110: {
                                message.protoReferenceDocumentationUri = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Publishing message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Publishing
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Publishing} Publishing
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Publishing.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Publishing message.
                 * @function verify
                 * @memberof google.api.Publishing
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Publishing.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.methodSettings != null && message.hasOwnProperty("methodSettings")) {
                        if (!Array.isArray(message.methodSettings))
                            return "methodSettings: array expected";
                        for (var i = 0; i < message.methodSettings.length; ++i) {
                            var error = $root.google.api.MethodSettings.verify(message.methodSettings[i]);
                            if (error)
                                return "methodSettings." + error;
                        }
                    }
                    if (message.newIssueUri != null && message.hasOwnProperty("newIssueUri"))
                        if (!$util.isString(message.newIssueUri))
                            return "newIssueUri: string expected";
                    if (message.documentationUri != null && message.hasOwnProperty("documentationUri"))
                        if (!$util.isString(message.documentationUri))
                            return "documentationUri: string expected";
                    if (message.apiShortName != null && message.hasOwnProperty("apiShortName"))
                        if (!$util.isString(message.apiShortName))
                            return "apiShortName: string expected";
                    if (message.githubLabel != null && message.hasOwnProperty("githubLabel"))
                        if (!$util.isString(message.githubLabel))
                            return "githubLabel: string expected";
                    if (message.codeownerGithubTeams != null && message.hasOwnProperty("codeownerGithubTeams")) {
                        if (!Array.isArray(message.codeownerGithubTeams))
                            return "codeownerGithubTeams: array expected";
                        for (var i = 0; i < message.codeownerGithubTeams.length; ++i)
                            if (!$util.isString(message.codeownerGithubTeams[i]))
                                return "codeownerGithubTeams: string[] expected";
                    }
                    if (message.docTagPrefix != null && message.hasOwnProperty("docTagPrefix"))
                        if (!$util.isString(message.docTagPrefix))
                            return "docTagPrefix: string expected";
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        switch (message.organization) {
                        default:
                            return "organization: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                            break;
                        }
                    if (message.librarySettings != null && message.hasOwnProperty("librarySettings")) {
                        if (!Array.isArray(message.librarySettings))
                            return "librarySettings: array expected";
                        for (var i = 0; i < message.librarySettings.length; ++i) {
                            var error = $root.google.api.ClientLibrarySettings.verify(message.librarySettings[i]);
                            if (error)
                                return "librarySettings." + error;
                        }
                    }
                    if (message.protoReferenceDocumentationUri != null && message.hasOwnProperty("protoReferenceDocumentationUri"))
                        if (!$util.isString(message.protoReferenceDocumentationUri))
                            return "protoReferenceDocumentationUri: string expected";
                    return null;
                };
    
                /**
                 * Creates a Publishing message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Publishing
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Publishing} Publishing
                 */
                Publishing.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Publishing)
                        return object;
                    var message = new $root.google.api.Publishing();
                    if (object.methodSettings) {
                        if (!Array.isArray(object.methodSettings))
                            throw TypeError(".google.api.Publishing.methodSettings: array expected");
                        message.methodSettings = [];
                        for (var i = 0; i < object.methodSettings.length; ++i) {
                            if (typeof object.methodSettings[i] !== "object")
                                throw TypeError(".google.api.Publishing.methodSettings: object expected");
                            message.methodSettings[i] = $root.google.api.MethodSettings.fromObject(object.methodSettings[i]);
                        }
                    }
                    if (object.newIssueUri != null)
                        message.newIssueUri = String(object.newIssueUri);
                    if (object.documentationUri != null)
                        message.documentationUri = String(object.documentationUri);
                    if (object.apiShortName != null)
                        message.apiShortName = String(object.apiShortName);
                    if (object.githubLabel != null)
                        message.githubLabel = String(object.githubLabel);
                    if (object.codeownerGithubTeams) {
                        if (!Array.isArray(object.codeownerGithubTeams))
                            throw TypeError(".google.api.Publishing.codeownerGithubTeams: array expected");
                        message.codeownerGithubTeams = [];
                        for (var i = 0; i < object.codeownerGithubTeams.length; ++i)
                            message.codeownerGithubTeams[i] = String(object.codeownerGithubTeams[i]);
                    }
                    if (object.docTagPrefix != null)
                        message.docTagPrefix = String(object.docTagPrefix);
                    switch (object.organization) {
                    default:
                        if (typeof object.organization === "number") {
                            message.organization = object.organization;
                            break;
                        }
                        break;
                    case "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED":
                    case 0:
                        message.organization = 0;
                        break;
                    case "CLOUD":
                    case 1:
                        message.organization = 1;
                        break;
                    case "ADS":
                    case 2:
                        message.organization = 2;
                        break;
                    case "PHOTOS":
                    case 3:
                        message.organization = 3;
                        break;
                    case "STREET_VIEW":
                    case 4:
                        message.organization = 4;
                        break;
                    case "SHOPPING":
                    case 5:
                        message.organization = 5;
                        break;
                    case "GEO":
                    case 6:
                        message.organization = 6;
                        break;
                    case "GENERATIVE_AI":
                    case 7:
                        message.organization = 7;
                        break;
                    }
                    if (object.librarySettings) {
                        if (!Array.isArray(object.librarySettings))
                            throw TypeError(".google.api.Publishing.librarySettings: array expected");
                        message.librarySettings = [];
                        for (var i = 0; i < object.librarySettings.length; ++i) {
                            if (typeof object.librarySettings[i] !== "object")
                                throw TypeError(".google.api.Publishing.librarySettings: object expected");
                            message.librarySettings[i] = $root.google.api.ClientLibrarySettings.fromObject(object.librarySettings[i]);
                        }
                    }
                    if (object.protoReferenceDocumentationUri != null)
                        message.protoReferenceDocumentationUri = String(object.protoReferenceDocumentationUri);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Publishing message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.Publishing} message Publishing
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Publishing.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.methodSettings = [];
                        object.codeownerGithubTeams = [];
                        object.librarySettings = [];
                    }
                    if (options.defaults) {
                        object.newIssueUri = "";
                        object.documentationUri = "";
                        object.apiShortName = "";
                        object.githubLabel = "";
                        object.docTagPrefix = "";
                        object.organization = options.enums === String ? "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED" : 0;
                        object.protoReferenceDocumentationUri = "";
                    }
                    if (message.methodSettings && message.methodSettings.length) {
                        object.methodSettings = [];
                        for (var j = 0; j < message.methodSettings.length; ++j)
                            object.methodSettings[j] = $root.google.api.MethodSettings.toObject(message.methodSettings[j], options);
                    }
                    if (message.newIssueUri != null && message.hasOwnProperty("newIssueUri"))
                        object.newIssueUri = message.newIssueUri;
                    if (message.documentationUri != null && message.hasOwnProperty("documentationUri"))
                        object.documentationUri = message.documentationUri;
                    if (message.apiShortName != null && message.hasOwnProperty("apiShortName"))
                        object.apiShortName = message.apiShortName;
                    if (message.githubLabel != null && message.hasOwnProperty("githubLabel"))
                        object.githubLabel = message.githubLabel;
                    if (message.codeownerGithubTeams && message.codeownerGithubTeams.length) {
                        object.codeownerGithubTeams = [];
                        for (var j = 0; j < message.codeownerGithubTeams.length; ++j)
                            object.codeownerGithubTeams[j] = message.codeownerGithubTeams[j];
                    }
                    if (message.docTagPrefix != null && message.hasOwnProperty("docTagPrefix"))
                        object.docTagPrefix = message.docTagPrefix;
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        object.organization = options.enums === String ? $root.google.api.ClientLibraryOrganization[message.organization] === undefined ? message.organization : $root.google.api.ClientLibraryOrganization[message.organization] : message.organization;
                    if (message.librarySettings && message.librarySettings.length) {
                        object.librarySettings = [];
                        for (var j = 0; j < message.librarySettings.length; ++j)
                            object.librarySettings[j] = $root.google.api.ClientLibrarySettings.toObject(message.librarySettings[j], options);
                    }
                    if (message.protoReferenceDocumentationUri != null && message.hasOwnProperty("protoReferenceDocumentationUri"))
                        object.protoReferenceDocumentationUri = message.protoReferenceDocumentationUri;
                    return object;
                };
    
                /**
                 * Converts this Publishing to JSON.
                 * @function toJSON
                 * @memberof google.api.Publishing
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Publishing.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Publishing
                 * @function getTypeUrl
                 * @memberof google.api.Publishing
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Publishing.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Publishing";
                };
    
                return Publishing;
            })();
    
            api.JavaSettings = (function() {
    
                /**
                 * Properties of a JavaSettings.
                 * @memberof google.api
                 * @interface IJavaSettings
                 * @property {string|null} [libraryPackage] JavaSettings libraryPackage
                 * @property {Object.<string,string>|null} [serviceClassNames] JavaSettings serviceClassNames
                 * @property {google.api.ICommonLanguageSettings|null} [common] JavaSettings common
                 */
    
                /**
                 * Constructs a new JavaSettings.
                 * @memberof google.api
                 * @classdesc Represents a JavaSettings.
                 * @implements IJavaSettings
                 * @constructor
                 * @param {google.api.IJavaSettings=} [properties] Properties to set
                 */
                function JavaSettings(properties) {
                    this.serviceClassNames = {};
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * JavaSettings libraryPackage.
                 * @member {string} libraryPackage
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.libraryPackage = "";
    
                /**
                 * JavaSettings serviceClassNames.
                 * @member {Object.<string,string>} serviceClassNames
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.serviceClassNames = $util.emptyObject;
    
                /**
                 * JavaSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.common = null;
    
                /**
                 * Creates a new JavaSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings=} [properties] Properties to set
                 * @returns {google.api.JavaSettings} JavaSettings instance
                 */
                JavaSettings.create = function create(properties) {
                    return new JavaSettings(properties);
                };
    
                /**
                 * Encodes the specified JavaSettings message. Does not implicitly {@link google.api.JavaSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings} message JavaSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                JavaSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.libraryPackage != null && Object.hasOwnProperty.call(message, "libraryPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.libraryPackage);
                    if (message.serviceClassNames != null && Object.hasOwnProperty.call(message, "serviceClassNames"))
                        for (var keys = Object.keys(message.serviceClassNames), i = 0; i < keys.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.serviceClassNames[keys[i]]).ldelim();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified JavaSettings message, length delimited. Does not implicitly {@link google.api.JavaSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings} message JavaSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                JavaSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a JavaSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.JavaSettings} JavaSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                JavaSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.JavaSettings(), key, value;
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.libraryPackage = reader.string();
                                break;
                            }
                        case 2: {
                                if (message.serviceClassNames === $util.emptyObject)
                                    message.serviceClassNames = {};
                                var end2 = reader.uint32() + reader.pos;
                                key = "";
                                value = "";
                                while (reader.pos < end2) {
                                    var tag2 = reader.uint32();
                                    switch (tag2 >>> 3) {
                                    case 1:
                                        key = reader.string();
                                        break;
                                    case 2:
                                        value = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag2 & 7);
                                        break;
                                    }
                                }
                                message.serviceClassNames[key] = value;
                                break;
                            }
                        case 3: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a JavaSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.JavaSettings} JavaSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                JavaSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a JavaSettings message.
                 * @function verify
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                JavaSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.libraryPackage != null && message.hasOwnProperty("libraryPackage"))
                        if (!$util.isString(message.libraryPackage))
                            return "libraryPackage: string expected";
                    if (message.serviceClassNames != null && message.hasOwnProperty("serviceClassNames")) {
                        if (!$util.isObject(message.serviceClassNames))
                            return "serviceClassNames: object expected";
                        var key = Object.keys(message.serviceClassNames);
                        for (var i = 0; i < key.length; ++i)
                            if (!$util.isString(message.serviceClassNames[key[i]]))
                                return "serviceClassNames: string{k:string} expected";
                    }
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a JavaSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.JavaSettings} JavaSettings
                 */
                JavaSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.JavaSettings)
                        return object;
                    var message = new $root.google.api.JavaSettings();
                    if (object.libraryPackage != null)
                        message.libraryPackage = String(object.libraryPackage);
                    if (object.serviceClassNames) {
                        if (typeof object.serviceClassNames !== "object")
                            throw TypeError(".google.api.JavaSettings.serviceClassNames: object expected");
                        message.serviceClassNames = {};
                        for (var keys = Object.keys(object.serviceClassNames), i = 0; i < keys.length; ++i)
                            message.serviceClassNames[keys[i]] = String(object.serviceClassNames[keys[i]]);
                    }
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.JavaSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a JavaSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.JavaSettings} message JavaSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                JavaSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.objects || options.defaults)
                        object.serviceClassNames = {};
                    if (options.defaults) {
                        object.libraryPackage = "";
                        object.common = null;
                    }
                    if (message.libraryPackage != null && message.hasOwnProperty("libraryPackage"))
                        object.libraryPackage = message.libraryPackage;
                    var keys2;
                    if (message.serviceClassNames && (keys2 = Object.keys(message.serviceClassNames)).length) {
                        object.serviceClassNames = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.serviceClassNames[keys2[j]] = message.serviceClassNames[keys2[j]];
                    }
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this JavaSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.JavaSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                JavaSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for JavaSettings
                 * @function getTypeUrl
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                JavaSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.JavaSettings";
                };
    
                return JavaSettings;
            })();
    
            api.CppSettings = (function() {
    
                /**
                 * Properties of a CppSettings.
                 * @memberof google.api
                 * @interface ICppSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] CppSettings common
                 */
    
                /**
                 * Constructs a new CppSettings.
                 * @memberof google.api
                 * @classdesc Represents a CppSettings.
                 * @implements ICppSettings
                 * @constructor
                 * @param {google.api.ICppSettings=} [properties] Properties to set
                 */
                function CppSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CppSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.CppSettings
                 * @instance
                 */
                CppSettings.prototype.common = null;
    
                /**
                 * Creates a new CppSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings=} [properties] Properties to set
                 * @returns {google.api.CppSettings} CppSettings instance
                 */
                CppSettings.create = function create(properties) {
                    return new CppSettings(properties);
                };
    
                /**
                 * Encodes the specified CppSettings message. Does not implicitly {@link google.api.CppSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings} message CppSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CppSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified CppSettings message, length delimited. Does not implicitly {@link google.api.CppSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings} message CppSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CppSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CppSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CppSettings} CppSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CppSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CppSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CppSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CppSettings} CppSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CppSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CppSettings message.
                 * @function verify
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CppSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a CppSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CppSettings} CppSettings
                 */
                CppSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CppSettings)
                        return object;
                    var message = new $root.google.api.CppSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.CppSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a CppSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.CppSettings} message CppSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CppSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this CppSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.CppSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CppSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CppSettings
                 * @function getTypeUrl
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CppSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CppSettings";
                };
    
                return CppSettings;
            })();
    
            api.PhpSettings = (function() {
    
                /**
                 * Properties of a PhpSettings.
                 * @memberof google.api
                 * @interface IPhpSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] PhpSettings common
                 */
    
                /**
                 * Constructs a new PhpSettings.
                 * @memberof google.api
                 * @classdesc Represents a PhpSettings.
                 * @implements IPhpSettings
                 * @constructor
                 * @param {google.api.IPhpSettings=} [properties] Properties to set
                 */
                function PhpSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * PhpSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.PhpSettings
                 * @instance
                 */
                PhpSettings.prototype.common = null;
    
                /**
                 * Creates a new PhpSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings=} [properties] Properties to set
                 * @returns {google.api.PhpSettings} PhpSettings instance
                 */
                PhpSettings.create = function create(properties) {
                    return new PhpSettings(properties);
                };
    
                /**
                 * Encodes the specified PhpSettings message. Does not implicitly {@link google.api.PhpSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings} message PhpSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PhpSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified PhpSettings message, length delimited. Does not implicitly {@link google.api.PhpSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings} message PhpSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PhpSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a PhpSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.PhpSettings} PhpSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PhpSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.PhpSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a PhpSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.PhpSettings} PhpSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PhpSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a PhpSettings message.
                 * @function verify
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                PhpSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a PhpSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.PhpSettings} PhpSettings
                 */
                PhpSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.PhpSettings)
                        return object;
                    var message = new $root.google.api.PhpSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.PhpSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a PhpSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.PhpSettings} message PhpSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                PhpSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this PhpSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.PhpSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                PhpSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for PhpSettings
                 * @function getTypeUrl
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                PhpSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.PhpSettings";
                };
    
                return PhpSettings;
            })();
    
            api.PythonSettings = (function() {
    
                /**
                 * Properties of a PythonSettings.
                 * @memberof google.api
                 * @interface IPythonSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] PythonSettings common
                 */
    
                /**
                 * Constructs a new PythonSettings.
                 * @memberof google.api
                 * @classdesc Represents a PythonSettings.
                 * @implements IPythonSettings
                 * @constructor
                 * @param {google.api.IPythonSettings=} [properties] Properties to set
                 */
                function PythonSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * PythonSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.PythonSettings
                 * @instance
                 */
                PythonSettings.prototype.common = null;
    
                /**
                 * Creates a new PythonSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings=} [properties] Properties to set
                 * @returns {google.api.PythonSettings} PythonSettings instance
                 */
                PythonSettings.create = function create(properties) {
                    return new PythonSettings(properties);
                };
    
                /**
                 * Encodes the specified PythonSettings message. Does not implicitly {@link google.api.PythonSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings} message PythonSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PythonSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified PythonSettings message, length delimited. Does not implicitly {@link google.api.PythonSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings} message PythonSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PythonSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a PythonSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.PythonSettings} PythonSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PythonSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.PythonSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a PythonSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.PythonSettings} PythonSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PythonSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a PythonSettings message.
                 * @function verify
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                PythonSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a PythonSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.PythonSettings} PythonSettings
                 */
                PythonSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.PythonSettings)
                        return object;
                    var message = new $root.google.api.PythonSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.PythonSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a PythonSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.PythonSettings} message PythonSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                PythonSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this PythonSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.PythonSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                PythonSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for PythonSettings
                 * @function getTypeUrl
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                PythonSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.PythonSettings";
                };
    
                return PythonSettings;
            })();
    
            api.NodeSettings = (function() {
    
                /**
                 * Properties of a NodeSettings.
                 * @memberof google.api
                 * @interface INodeSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] NodeSettings common
                 */
    
                /**
                 * Constructs a new NodeSettings.
                 * @memberof google.api
                 * @classdesc Represents a NodeSettings.
                 * @implements INodeSettings
                 * @constructor
                 * @param {google.api.INodeSettings=} [properties] Properties to set
                 */
                function NodeSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * NodeSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.NodeSettings
                 * @instance
                 */
                NodeSettings.prototype.common = null;
    
                /**
                 * Creates a new NodeSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings=} [properties] Properties to set
                 * @returns {google.api.NodeSettings} NodeSettings instance
                 */
                NodeSettings.create = function create(properties) {
                    return new NodeSettings(properties);
                };
    
                /**
                 * Encodes the specified NodeSettings message. Does not implicitly {@link google.api.NodeSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings} message NodeSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                NodeSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified NodeSettings message, length delimited. Does not implicitly {@link google.api.NodeSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings} message NodeSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                NodeSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a NodeSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.NodeSettings} NodeSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                NodeSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.NodeSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a NodeSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.NodeSettings} NodeSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                NodeSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a NodeSettings message.
                 * @function verify
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                NodeSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a NodeSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.NodeSettings} NodeSettings
                 */
                NodeSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.NodeSettings)
                        return object;
                    var message = new $root.google.api.NodeSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.NodeSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a NodeSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.NodeSettings} message NodeSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                NodeSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this NodeSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.NodeSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                NodeSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for NodeSettings
                 * @function getTypeUrl
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                NodeSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.NodeSettings";
                };
    
                return NodeSettings;
            })();
    
            api.DotnetSettings = (function() {
    
                /**
                 * Properties of a DotnetSettings.
                 * @memberof google.api
                 * @interface IDotnetSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] DotnetSettings common
                 * @property {Object.<string,string>|null} [renamedServices] DotnetSettings renamedServices
                 * @property {Object.<string,string>|null} [renamedResources] DotnetSettings renamedResources
                 * @property {Array.<string>|null} [ignoredResources] DotnetSettings ignoredResources
                 * @property {Array.<string>|null} [forcedNamespaceAliases] DotnetSettings forcedNamespaceAliases
                 * @property {Array.<string>|null} [handwrittenSignatures] DotnetSettings handwrittenSignatures
                 */
    
                /**
                 * Constructs a new DotnetSettings.
                 * @memberof google.api
                 * @classdesc Represents a DotnetSettings.
                 * @implements IDotnetSettings
                 * @constructor
                 * @param {google.api.IDotnetSettings=} [properties] Properties to set
                 */
                function DotnetSettings(properties) {
                    this.renamedServices = {};
                    this.renamedResources = {};
                    this.ignoredResources = [];
                    this.forcedNamespaceAliases = [];
                    this.handwrittenSignatures = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DotnetSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.DotnetSettings
                 * @instance
                 */
                DotnetSettings.prototype.common = null;
    
                /**
                 * DotnetSettings renamedServices.
                 * @member {Object.<string,string>} renamedServices
                 * @memberof google.api.DotnetSettings
                 * @instance
                 */
                DotnetSettings.prototype.renamedServices = $util.emptyObject;
    
                /**
                 * DotnetSettings renamedResources.
                 * @member {Object.<string,string>} renamedResources
                 * @memberof google.api.DotnetSettings
                 * @instance
                 */
                DotnetSettings.prototype.renamedResources = $util.emptyObject;
    
                /**
                 * DotnetSettings ignoredResources.
                 * @member {Array.<string>} ignoredResources
                 * @memberof google.api.DotnetSettings
                 * @instance
                 */
                DotnetSettings.prototype.ignoredResources = $util.emptyArray;
    
                /**
                 * DotnetSettings forcedNamespaceAliases.
                 * @member {Array.<string>} forcedNamespaceAliases
                 * @memberof google.api.DotnetSettings
                 * @instance
                 */
                DotnetSettings.prototype.forcedNamespaceAliases = $util.emptyArray;
    
                /**
                 * DotnetSettings handwrittenSignatures.
                 * @member {Array.<string>} handwrittenSignatures
                 * @memberof google.api.DotnetSettings
                 * @instance
                 */
                DotnetSettings.prototype.handwrittenSignatures = $util.emptyArray;
    
                /**
                 * Creates a new DotnetSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings=} [properties] Properties to set
                 * @returns {google.api.DotnetSettings} DotnetSettings instance
                 */
                DotnetSettings.create = function create(properties) {
                    return new DotnetSettings(properties);
                };
    
                /**
                 * Encodes the specified DotnetSettings message. Does not implicitly {@link google.api.DotnetSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings} message DotnetSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DotnetSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.renamedServices != null && Object.hasOwnProperty.call(message, "renamedServices"))
                        for (var keys = Object.keys(message.renamedServices), i = 0; i < keys.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.renamedServices[keys[i]]).ldelim();
                    if (message.renamedResources != null && Object.hasOwnProperty.call(message, "renamedResources"))
                        for (var keys = Object.keys(message.renamedResources), i = 0; i < keys.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.renamedResources[keys[i]]).ldelim();
                    if (message.ignoredResources != null && message.ignoredResources.length)
                        for (var i = 0; i < message.ignoredResources.length; ++i)
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.ignoredResources[i]);
                    if (message.forcedNamespaceAliases != null && message.forcedNamespaceAliases.length)
                        for (var i = 0; i < message.forcedNamespaceAliases.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.forcedNamespaceAliases[i]);
                    if (message.handwrittenSignatures != null && message.handwrittenSignatures.length)
                        for (var i = 0; i < message.handwrittenSignatures.length; ++i)
                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.handwrittenSignatures[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DotnetSettings message, length delimited. Does not implicitly {@link google.api.DotnetSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings} message DotnetSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DotnetSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DotnetSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DotnetSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.DotnetSettings(), key, value;
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 2: {
                                if (message.renamedServices === $util.emptyObject)
                                    message.renamedServices = {};
                                var end2 = reader.uint32() + reader.pos;
                                key = "";
                                value = "";
                                while (reader.pos < end2) {
                                    var tag2 = reader.uint32();
                                    switch (tag2 >>> 3) {
                                    case 1:
                                        key = reader.string();
                                        break;
                                    case 2:
                                        value = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag2 & 7);
                                        break;
                                    }
                                }
                                message.renamedServices[key] = value;
                                break;
                            }
                        case 3: {
                                if (message.renamedResources === $util.emptyObject)
                                    message.renamedResources = {};
                                var end2 = reader.uint32() + reader.pos;
                                key = "";
                                value = "";
                                while (reader.pos < end2) {
                                    var tag2 = reader.uint32();
                                    switch (tag2 >>> 3) {
                                    case 1:
                                        key = reader.string();
                                        break;
                                    case 2:
                                        value = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag2 & 7);
                                        break;
                                    }
                                }
                                message.renamedResources[key] = value;
                                break;
                            }
                        case 4: {
                                if (!(message.ignoredResources && message.ignoredResources.length))
                                    message.ignoredResources = [];
                                message.ignoredResources.push(reader.string());
                                break;
                            }
                        case 5: {
                                if (!(message.forcedNamespaceAliases && message.forcedNamespaceAliases.length))
                                    message.forcedNamespaceAliases = [];
                                message.forcedNamespaceAliases.push(reader.string());
                                break;
                            }
                        case 6: {
                                if (!(message.handwrittenSignatures && message.handwrittenSignatures.length))
                                    message.handwrittenSignatures = [];
                                message.handwrittenSignatures.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DotnetSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DotnetSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DotnetSettings message.
                 * @function verify
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DotnetSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    if (message.renamedServices != null && message.hasOwnProperty("renamedServices")) {
                        if (!$util.isObject(message.renamedServices))
                            return "renamedServices: object expected";
                        var key = Object.keys(message.renamedServices);
                        for (var i = 0; i < key.length; ++i)
                            if (!$util.isString(message.renamedServices[key[i]]))
                                return "renamedServices: string{k:string} expected";
                    }
                    if (message.renamedResources != null && message.hasOwnProperty("renamedResources")) {
                        if (!$util.isObject(message.renamedResources))
                            return "renamedResources: object expected";
                        var key = Object.keys(message.renamedResources);
                        for (var i = 0; i < key.length; ++i)
                            if (!$util.isString(message.renamedResources[key[i]]))
                                return "renamedResources: string{k:string} expected";
                    }
                    if (message.ignoredResources != null && message.hasOwnProperty("ignoredResources")) {
                        if (!Array.isArray(message.ignoredResources))
                            return "ignoredResources: array expected";
                        for (var i = 0; i < message.ignoredResources.length; ++i)
                            if (!$util.isString(message.ignoredResources[i]))
                                return "ignoredResources: string[] expected";
                    }
                    if (message.forcedNamespaceAliases != null && message.hasOwnProperty("forcedNamespaceAliases")) {
                        if (!Array.isArray(message.forcedNamespaceAliases))
                            return "forcedNamespaceAliases: array expected";
                        for (var i = 0; i < message.forcedNamespaceAliases.length; ++i)
                            if (!$util.isString(message.forcedNamespaceAliases[i]))
                                return "forcedNamespaceAliases: string[] expected";
                    }
                    if (message.handwrittenSignatures != null && message.hasOwnProperty("handwrittenSignatures")) {
                        if (!Array.isArray(message.handwrittenSignatures))
                            return "handwrittenSignatures: array expected";
                        for (var i = 0; i < message.handwrittenSignatures.length; ++i)
                            if (!$util.isString(message.handwrittenSignatures[i]))
                                return "handwrittenSignatures: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DotnetSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 */
                DotnetSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.DotnetSettings)
                        return object;
                    var message = new $root.google.api.DotnetSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.DotnetSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    if (object.renamedServices) {
                        if (typeof object.renamedServices !== "object")
                            throw TypeError(".google.api.DotnetSettings.renamedServices: object expected");
                        message.renamedServices = {};
                        for (var keys = Object.keys(object.renamedServices), i = 0; i < keys.length; ++i)
                            message.renamedServices[keys[i]] = String(object.renamedServices[keys[i]]);
                    }
                    if (object.renamedResources) {
                        if (typeof object.renamedResources !== "object")
                            throw TypeError(".google.api.DotnetSettings.renamedResources: object expected");
                        message.renamedResources = {};
                        for (var keys = Object.keys(object.renamedResources), i = 0; i < keys.length; ++i)
                            message.renamedResources[keys[i]] = String(object.renamedResources[keys[i]]);
                    }
                    if (object.ignoredResources) {
                        if (!Array.isArray(object.ignoredResources))
                            throw TypeError(".google.api.DotnetSettings.ignoredResources: array expected");
                        message.ignoredResources = [];
                        for (var i = 0; i < object.ignoredResources.length; ++i)
                            message.ignoredResources[i] = String(object.ignoredResources[i]);
                    }
                    if (object.forcedNamespaceAliases) {
                        if (!Array.isArray(object.forcedNamespaceAliases))
                            throw TypeError(".google.api.DotnetSettings.forcedNamespaceAliases: array expected");
                        message.forcedNamespaceAliases = [];
                        for (var i = 0; i < object.forcedNamespaceAliases.length; ++i)
                            message.forcedNamespaceAliases[i] = String(object.forcedNamespaceAliases[i]);
                    }
                    if (object.handwrittenSignatures) {
                        if (!Array.isArray(object.handwrittenSignatures))
                            throw TypeError(".google.api.DotnetSettings.handwrittenSignatures: array expected");
                        message.handwrittenSignatures = [];
                        for (var i = 0; i < object.handwrittenSignatures.length; ++i)
                            message.handwrittenSignatures[i] = String(object.handwrittenSignatures[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DotnetSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.DotnetSettings} message DotnetSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DotnetSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.ignoredResources = [];
                        object.forcedNamespaceAliases = [];
                        object.handwrittenSignatures = [];
                    }
                    if (options.objects || options.defaults) {
                        object.renamedServices = {};
                        object.renamedResources = {};
                    }
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    var keys2;
                    if (message.renamedServices && (keys2 = Object.keys(message.renamedServices)).length) {
                        object.renamedServices = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.renamedServices[keys2[j]] = message.renamedServices[keys2[j]];
                    }
                    if (message.renamedResources && (keys2 = Object.keys(message.renamedResources)).length) {
                        object.renamedResources = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.renamedResources[keys2[j]] = message.renamedResources[keys2[j]];
                    }
                    if (message.ignoredResources && message.ignoredResources.length) {
                        object.ignoredResources = [];
                        for (var j = 0; j < message.ignoredResources.length; ++j)
                            object.ignoredResources[j] = message.ignoredResources[j];
                    }
                    if (message.forcedNamespaceAliases && message.forcedNamespaceAliases.length) {
                        object.forcedNamespaceAliases = [];
                        for (var j = 0; j < message.forcedNamespaceAliases.length; ++j)
                            object.forcedNamespaceAliases[j] = message.forcedNamespaceAliases[j];
                    }
                    if (message.handwrittenSignatures && message.handwrittenSignatures.length) {
                        object.handwrittenSignatures = [];
                        for (var j = 0; j < message.handwrittenSignatures.length; ++j)
                            object.handwrittenSignatures[j] = message.handwrittenSignatures[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DotnetSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.DotnetSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DotnetSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DotnetSettings
                 * @function getTypeUrl
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DotnetSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.DotnetSettings";
                };
    
                return DotnetSettings;
            })();
    
            api.RubySettings = (function() {
    
                /**
                 * Properties of a RubySettings.
                 * @memberof google.api
                 * @interface IRubySettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] RubySettings common
                 */
    
                /**
                 * Constructs a new RubySettings.
                 * @memberof google.api
                 * @classdesc Represents a RubySettings.
                 * @implements IRubySettings
                 * @constructor
                 * @param {google.api.IRubySettings=} [properties] Properties to set
                 */
                function RubySettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * RubySettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.RubySettings
                 * @instance
                 */
                RubySettings.prototype.common = null;
    
                /**
                 * Creates a new RubySettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings=} [properties] Properties to set
                 * @returns {google.api.RubySettings} RubySettings instance
                 */
                RubySettings.create = function create(properties) {
                    return new RubySettings(properties);
                };
    
                /**
                 * Encodes the specified RubySettings message. Does not implicitly {@link google.api.RubySettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings} message RubySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RubySettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified RubySettings message, length delimited. Does not implicitly {@link google.api.RubySettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings} message RubySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RubySettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a RubySettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.RubySettings} RubySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RubySettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.RubySettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a RubySettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.RubySettings} RubySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RubySettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a RubySettings message.
                 * @function verify
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                RubySettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a RubySettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.RubySettings} RubySettings
                 */
                RubySettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.RubySettings)
                        return object;
                    var message = new $root.google.api.RubySettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.RubySettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a RubySettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.RubySettings} message RubySettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                RubySettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this RubySettings to JSON.
                 * @function toJSON
                 * @memberof google.api.RubySettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                RubySettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for RubySettings
                 * @function getTypeUrl
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                RubySettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.RubySettings";
                };
    
                return RubySettings;
            })();
    
            api.GoSettings = (function() {
    
                /**
                 * Properties of a GoSettings.
                 * @memberof google.api
                 * @interface IGoSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] GoSettings common
                 */
    
                /**
                 * Constructs a new GoSettings.
                 * @memberof google.api
                 * @classdesc Represents a GoSettings.
                 * @implements IGoSettings
                 * @constructor
                 * @param {google.api.IGoSettings=} [properties] Properties to set
                 */
                function GoSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GoSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.GoSettings
                 * @instance
                 */
                GoSettings.prototype.common = null;
    
                /**
                 * Creates a new GoSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings=} [properties] Properties to set
                 * @returns {google.api.GoSettings} GoSettings instance
                 */
                GoSettings.create = function create(properties) {
                    return new GoSettings(properties);
                };
    
                /**
                 * Encodes the specified GoSettings message. Does not implicitly {@link google.api.GoSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings} message GoSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GoSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GoSettings message, length delimited. Does not implicitly {@link google.api.GoSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings} message GoSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GoSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GoSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.GoSettings} GoSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GoSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.GoSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GoSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.GoSettings} GoSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GoSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GoSettings message.
                 * @function verify
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GoSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a GoSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.GoSettings} GoSettings
                 */
                GoSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.GoSettings)
                        return object;
                    var message = new $root.google.api.GoSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.GoSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GoSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.GoSettings} message GoSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GoSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this GoSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.GoSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GoSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GoSettings
                 * @function getTypeUrl
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GoSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.GoSettings";
                };
    
                return GoSettings;
            })();
    
            api.MethodSettings = (function() {
    
                /**
                 * Properties of a MethodSettings.
                 * @memberof google.api
                 * @interface IMethodSettings
                 * @property {string|null} [selector] MethodSettings selector
                 * @property {google.api.MethodSettings.ILongRunning|null} [longRunning] MethodSettings longRunning
                 * @property {Array.<string>|null} [autoPopulatedFields] MethodSettings autoPopulatedFields
                 */
    
                /**
                 * Constructs a new MethodSettings.
                 * @memberof google.api
                 * @classdesc Represents a MethodSettings.
                 * @implements IMethodSettings
                 * @constructor
                 * @param {google.api.IMethodSettings=} [properties] Properties to set
                 */
                function MethodSettings(properties) {
                    this.autoPopulatedFields = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodSettings selector.
                 * @member {string} selector
                 * @memberof google.api.MethodSettings
                 * @instance
                 */
                MethodSettings.prototype.selector = "";
    
                /**
                 * MethodSettings longRunning.
                 * @member {google.api.MethodSettings.ILongRunning|null|undefined} longRunning
                 * @memberof google.api.MethodSettings
                 * @instance
                 */
                MethodSettings.prototype.longRunning = null;
    
                /**
                 * MethodSettings autoPopulatedFields.
                 * @member {Array.<string>} autoPopulatedFields
                 * @memberof google.api.MethodSettings
                 * @instance
                 */
                MethodSettings.prototype.autoPopulatedFields = $util.emptyArray;
    
                /**
                 * Creates a new MethodSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings=} [properties] Properties to set
                 * @returns {google.api.MethodSettings} MethodSettings instance
                 */
                MethodSettings.create = function create(properties) {
                    return new MethodSettings(properties);
                };
    
                /**
                 * Encodes the specified MethodSettings message. Does not implicitly {@link google.api.MethodSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings} message MethodSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.longRunning != null && Object.hasOwnProperty.call(message, "longRunning"))
                        $root.google.api.MethodSettings.LongRunning.encode(message.longRunning, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.autoPopulatedFields != null && message.autoPopulatedFields.length)
                        for (var i = 0; i < message.autoPopulatedFields.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.autoPopulatedFields[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodSettings message, length delimited. Does not implicitly {@link google.api.MethodSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings} message MethodSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.MethodSettings} MethodSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.MethodSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.longRunning = $root.google.api.MethodSettings.LongRunning.decode(reader, reader.uint32());
                                break;
                            }
                        case 3: {
                                if (!(message.autoPopulatedFields && message.autoPopulatedFields.length))
                                    message.autoPopulatedFields = [];
                                message.autoPopulatedFields.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.MethodSettings} MethodSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodSettings message.
                 * @function verify
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.longRunning != null && message.hasOwnProperty("longRunning")) {
                        var error = $root.google.api.MethodSettings.LongRunning.verify(message.longRunning);
                        if (error)
                            return "longRunning." + error;
                    }
                    if (message.autoPopulatedFields != null && message.hasOwnProperty("autoPopulatedFields")) {
                        if (!Array.isArray(message.autoPopulatedFields))
                            return "autoPopulatedFields: array expected";
                        for (var i = 0; i < message.autoPopulatedFields.length; ++i)
                            if (!$util.isString(message.autoPopulatedFields[i]))
                                return "autoPopulatedFields: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.MethodSettings} MethodSettings
                 */
                MethodSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.MethodSettings)
                        return object;
                    var message = new $root.google.api.MethodSettings();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.longRunning != null) {
                        if (typeof object.longRunning !== "object")
                            throw TypeError(".google.api.MethodSettings.longRunning: object expected");
                        message.longRunning = $root.google.api.MethodSettings.LongRunning.fromObject(object.longRunning);
                    }
                    if (object.autoPopulatedFields) {
                        if (!Array.isArray(object.autoPopulatedFields))
                            throw TypeError(".google.api.MethodSettings.autoPopulatedFields: array expected");
                        message.autoPopulatedFields = [];
                        for (var i = 0; i < object.autoPopulatedFields.length; ++i)
                            message.autoPopulatedFields[i] = String(object.autoPopulatedFields[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.MethodSettings} message MethodSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.autoPopulatedFields = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.longRunning = null;
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.longRunning != null && message.hasOwnProperty("longRunning"))
                        object.longRunning = $root.google.api.MethodSettings.LongRunning.toObject(message.longRunning, options);
                    if (message.autoPopulatedFields && message.autoPopulatedFields.length) {
                        object.autoPopulatedFields = [];
                        for (var j = 0; j < message.autoPopulatedFields.length; ++j)
                            object.autoPopulatedFields[j] = message.autoPopulatedFields[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this MethodSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.MethodSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodSettings
                 * @function getTypeUrl
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.MethodSettings";
                };
    
                MethodSettings.LongRunning = (function() {
    
                    /**
                     * Properties of a LongRunning.
                     * @memberof google.api.MethodSettings
                     * @interface ILongRunning
                     * @property {google.protobuf.IDuration|null} [initialPollDelay] LongRunning initialPollDelay
                     * @property {number|null} [pollDelayMultiplier] LongRunning pollDelayMultiplier
                     * @property {google.protobuf.IDuration|null} [maxPollDelay] LongRunning maxPollDelay
                     * @property {google.protobuf.IDuration|null} [totalPollTimeout] LongRunning totalPollTimeout
                     */
    
                    /**
                     * Constructs a new LongRunning.
                     * @memberof google.api.MethodSettings
                     * @classdesc Represents a LongRunning.
                     * @implements ILongRunning
                     * @constructor
                     * @param {google.api.MethodSettings.ILongRunning=} [properties] Properties to set
                     */
                    function LongRunning(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * LongRunning initialPollDelay.
                     * @member {google.protobuf.IDuration|null|undefined} initialPollDelay
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.initialPollDelay = null;
    
                    /**
                     * LongRunning pollDelayMultiplier.
                     * @member {number} pollDelayMultiplier
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.pollDelayMultiplier = 0;
    
                    /**
                     * LongRunning maxPollDelay.
                     * @member {google.protobuf.IDuration|null|undefined} maxPollDelay
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.maxPollDelay = null;
    
                    /**
                     * LongRunning totalPollTimeout.
                     * @member {google.protobuf.IDuration|null|undefined} totalPollTimeout
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.totalPollTimeout = null;
    
                    /**
                     * Creates a new LongRunning instance using the specified properties.
                     * @function create
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning=} [properties] Properties to set
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning instance
                     */
                    LongRunning.create = function create(properties) {
                        return new LongRunning(properties);
                    };
    
                    /**
                     * Encodes the specified LongRunning message. Does not implicitly {@link google.api.MethodSettings.LongRunning.verify|verify} messages.
                     * @function encode
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning} message LongRunning message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LongRunning.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.initialPollDelay != null && Object.hasOwnProperty.call(message, "initialPollDelay"))
                            $root.google.protobuf.Duration.encode(message.initialPollDelay, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.pollDelayMultiplier != null && Object.hasOwnProperty.call(message, "pollDelayMultiplier"))
                            writer.uint32(/* id 2, wireType 5 =*/21).float(message.pollDelayMultiplier);
                        if (message.maxPollDelay != null && Object.hasOwnProperty.call(message, "maxPollDelay"))
                            $root.google.protobuf.Duration.encode(message.maxPollDelay, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.totalPollTimeout != null && Object.hasOwnProperty.call(message, "totalPollTimeout"))
                            $root.google.protobuf.Duration.encode(message.totalPollTimeout, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified LongRunning message, length delimited. Does not implicitly {@link google.api.MethodSettings.LongRunning.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning} message LongRunning message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LongRunning.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a LongRunning message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LongRunning.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.MethodSettings.LongRunning();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.initialPollDelay = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.pollDelayMultiplier = reader.float();
                                    break;
                                }
                            case 3: {
                                    message.maxPollDelay = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 4: {
                                    message.totalPollTimeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a LongRunning message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LongRunning.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a LongRunning message.
                     * @function verify
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    LongRunning.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.initialPollDelay != null && message.hasOwnProperty("initialPollDelay")) {
                            var error = $root.google.protobuf.Duration.verify(message.initialPollDelay);
                            if (error)
                                return "initialPollDelay." + error;
                        }
                        if (message.pollDelayMultiplier != null && message.hasOwnProperty("pollDelayMultiplier"))
                            if (typeof message.pollDelayMultiplier !== "number")
                                return "pollDelayMultiplier: number expected";
                        if (message.maxPollDelay != null && message.hasOwnProperty("maxPollDelay")) {
                            var error = $root.google.protobuf.Duration.verify(message.maxPollDelay);
                            if (error)
                                return "maxPollDelay." + error;
                        }
                        if (message.totalPollTimeout != null && message.hasOwnProperty("totalPollTimeout")) {
                            var error = $root.google.protobuf.Duration.verify(message.totalPollTimeout);
                            if (error)
                                return "totalPollTimeout." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a LongRunning message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     */
                    LongRunning.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.api.MethodSettings.LongRunning)
                            return object;
                        var message = new $root.google.api.MethodSettings.LongRunning();
                        if (object.initialPollDelay != null) {
                            if (typeof object.initialPollDelay !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.initialPollDelay: object expected");
                            message.initialPollDelay = $root.google.protobuf.Duration.fromObject(object.initialPollDelay);
                        }
                        if (object.pollDelayMultiplier != null)
                            message.pollDelayMultiplier = Number(object.pollDelayMultiplier);
                        if (object.maxPollDelay != null) {
                            if (typeof object.maxPollDelay !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.maxPollDelay: object expected");
                            message.maxPollDelay = $root.google.protobuf.Duration.fromObject(object.maxPollDelay);
                        }
                        if (object.totalPollTimeout != null) {
                            if (typeof object.totalPollTimeout !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.totalPollTimeout: object expected");
                            message.totalPollTimeout = $root.google.protobuf.Duration.fromObject(object.totalPollTimeout);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a LongRunning message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.LongRunning} message LongRunning
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    LongRunning.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.initialPollDelay = null;
                            object.pollDelayMultiplier = 0;
                            object.maxPollDelay = null;
                            object.totalPollTimeout = null;
                        }
                        if (message.initialPollDelay != null && message.hasOwnProperty("initialPollDelay"))
                            object.initialPollDelay = $root.google.protobuf.Duration.toObject(message.initialPollDelay, options);
                        if (message.pollDelayMultiplier != null && message.hasOwnProperty("pollDelayMultiplier"))
                            object.pollDelayMultiplier = options.json && !isFinite(message.pollDelayMultiplier) ? String(message.pollDelayMultiplier) : message.pollDelayMultiplier;
                        if (message.maxPollDelay != null && message.hasOwnProperty("maxPollDelay"))
                            object.maxPollDelay = $root.google.protobuf.Duration.toObject(message.maxPollDelay, options);
                        if (message.totalPollTimeout != null && message.hasOwnProperty("totalPollTimeout"))
                            object.totalPollTimeout = $root.google.protobuf.Duration.toObject(message.totalPollTimeout, options);
                        return object;
                    };
    
                    /**
                     * Converts this LongRunning to JSON.
                     * @function toJSON
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    LongRunning.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for LongRunning
                     * @function getTypeUrl
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    LongRunning.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.api.MethodSettings.LongRunning";
                    };
    
                    return LongRunning;
                })();
    
                return MethodSettings;
            })();
    
            /**
             * ClientLibraryOrganization enum.
             * @name google.api.ClientLibraryOrganization
             * @enum {number}
             * @property {number} CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED=0 CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED value
             * @property {number} CLOUD=1 CLOUD value
             * @property {number} ADS=2 ADS value
             * @property {number} PHOTOS=3 PHOTOS value
             * @property {number} STREET_VIEW=4 STREET_VIEW value
             * @property {number} SHOPPING=5 SHOPPING value
             * @property {number} GEO=6 GEO value
             * @property {number} GENERATIVE_AI=7 GENERATIVE_AI value
             */
            api.ClientLibraryOrganization = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED"] = 0;
                values[valuesById[1] = "CLOUD"] = 1;
                values[valuesById[2] = "ADS"] = 2;
                values[valuesById[3] = "PHOTOS"] = 3;
                values[valuesById[4] = "STREET_VIEW"] = 4;
                values[valuesById[5] = "SHOPPING"] = 5;
                values[valuesById[6] = "GEO"] = 6;
                values[valuesById[7] = "GENERATIVE_AI"] = 7;
                return values;
            })();
    
            /**
             * ClientLibraryDestination enum.
             * @name google.api.ClientLibraryDestination
             * @enum {number}
             * @property {number} CLIENT_LIBRARY_DESTINATION_UNSPECIFIED=0 CLIENT_LIBRARY_DESTINATION_UNSPECIFIED value
             * @property {number} GITHUB=10 GITHUB value
             * @property {number} PACKAGE_MANAGER=20 PACKAGE_MANAGER value
             */
            api.ClientLibraryDestination = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED"] = 0;
                values[valuesById[10] = "GITHUB"] = 10;
                values[valuesById[20] = "PACKAGE_MANAGER"] = 20;
                return values;
            })();
    
            /**
             * LaunchStage enum.
             * @name google.api.LaunchStage
             * @enum {number}
             * @property {number} LAUNCH_STAGE_UNSPECIFIED=0 LAUNCH_STAGE_UNSPECIFIED value
             * @property {number} UNIMPLEMENTED=6 UNIMPLEMENTED value
             * @property {number} PRELAUNCH=7 PRELAUNCH value
             * @property {number} EARLY_ACCESS=1 EARLY_ACCESS value
             * @property {number} ALPHA=2 ALPHA value
             * @property {number} BETA=3 BETA value
             * @property {number} GA=4 GA value
             * @property {number} DEPRECATED=5 DEPRECATED value
             */
            api.LaunchStage = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "LAUNCH_STAGE_UNSPECIFIED"] = 0;
                values[valuesById[6] = "UNIMPLEMENTED"] = 6;
                values[valuesById[7] = "PRELAUNCH"] = 7;
                values[valuesById[1] = "EARLY_ACCESS"] = 1;
                values[valuesById[2] = "ALPHA"] = 2;
                values[valuesById[3] = "BETA"] = 3;
                values[valuesById[4] = "GA"] = 4;
                values[valuesById[5] = "DEPRECATED"] = 5;
                return values;
            })();
    
            api.ResourceDescriptor = (function() {
    
                /**
                 * Properties of a ResourceDescriptor.
                 * @memberof google.api
                 * @interface IResourceDescriptor
                 * @property {string|null} [type] ResourceDescriptor type
                 * @property {Array.<string>|null} [pattern] ResourceDescriptor pattern
                 * @property {string|null} [nameField] ResourceDescriptor nameField
                 * @property {google.api.ResourceDescriptor.History|null} [history] ResourceDescriptor history
                 * @property {string|null} [plural] ResourceDescriptor plural
                 * @property {string|null} [singular] ResourceDescriptor singular
                 * @property {Array.<google.api.ResourceDescriptor.Style>|null} [style] ResourceDescriptor style
                 */
    
                /**
                 * Constructs a new ResourceDescriptor.
                 * @memberof google.api
                 * @classdesc Represents a ResourceDescriptor.
                 * @implements IResourceDescriptor
                 * @constructor
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 */
                function ResourceDescriptor(properties) {
                    this.pattern = [];
                    this.style = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceDescriptor type.
                 * @member {string} type
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.type = "";
    
                /**
                 * ResourceDescriptor pattern.
                 * @member {Array.<string>} pattern
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.pattern = $util.emptyArray;
    
                /**
                 * ResourceDescriptor nameField.
                 * @member {string} nameField
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.nameField = "";
    
                /**
                 * ResourceDescriptor history.
                 * @member {google.api.ResourceDescriptor.History} history
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.history = 0;
    
                /**
                 * ResourceDescriptor plural.
                 * @member {string} plural
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.plural = "";
    
                /**
                 * ResourceDescriptor singular.
                 * @member {string} singular
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.singular = "";
    
                /**
                 * ResourceDescriptor style.
                 * @member {Array.<google.api.ResourceDescriptor.Style>} style
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.style = $util.emptyArray;
    
                /**
                 * Creates a new ResourceDescriptor instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor instance
                 */
                ResourceDescriptor.create = function create(properties) {
                    return new ResourceDescriptor(properties);
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.pattern != null && message.pattern.length)
                        for (var i = 0; i < message.pattern.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.pattern[i]);
                    if (message.nameField != null && Object.hasOwnProperty.call(message, "nameField"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.nameField);
                    if (message.history != null && Object.hasOwnProperty.call(message, "history"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.history);
                    if (message.plural != null && Object.hasOwnProperty.call(message, "plural"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.plural);
                    if (message.singular != null && Object.hasOwnProperty.call(message, "singular"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.singular);
                    if (message.style != null && message.style.length) {
                        writer.uint32(/* id 10, wireType 2 =*/82).fork();
                        for (var i = 0; i < message.style.length; ++i)
                            writer.int32(message.style[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message, length delimited. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceDescriptor();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.pattern && message.pattern.length))
                                    message.pattern = [];
                                message.pattern.push(reader.string());
                                break;
                            }
                        case 3: {
                                message.nameField = reader.string();
                                break;
                            }
                        case 4: {
                                message.history = reader.int32();
                                break;
                            }
                        case 5: {
                                message.plural = reader.string();
                                break;
                            }
                        case 6: {
                                message.singular = reader.string();
                                break;
                            }
                        case 10: {
                                if (!(message.style && message.style.length))
                                    message.style = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.style.push(reader.int32());
                                } else
                                    message.style.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceDescriptor message.
                 * @function verify
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceDescriptor.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.pattern != null && message.hasOwnProperty("pattern")) {
                        if (!Array.isArray(message.pattern))
                            return "pattern: array expected";
                        for (var i = 0; i < message.pattern.length; ++i)
                            if (!$util.isString(message.pattern[i]))
                                return "pattern: string[] expected";
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        if (!$util.isString(message.nameField))
                            return "nameField: string expected";
                    if (message.history != null && message.hasOwnProperty("history"))
                        switch (message.history) {
                        default:
                            return "history: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        if (!$util.isString(message.plural))
                            return "plural: string expected";
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        if (!$util.isString(message.singular))
                            return "singular: string expected";
                    if (message.style != null && message.hasOwnProperty("style")) {
                        if (!Array.isArray(message.style))
                            return "style: array expected";
                        for (var i = 0; i < message.style.length; ++i)
                            switch (message.style[i]) {
                            default:
                                return "style: enum value[] expected";
                            case 0:
                            case 1:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a ResourceDescriptor message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 */
                ResourceDescriptor.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceDescriptor)
                        return object;
                    var message = new $root.google.api.ResourceDescriptor();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.pattern) {
                        if (!Array.isArray(object.pattern))
                            throw TypeError(".google.api.ResourceDescriptor.pattern: array expected");
                        message.pattern = [];
                        for (var i = 0; i < object.pattern.length; ++i)
                            message.pattern[i] = String(object.pattern[i]);
                    }
                    if (object.nameField != null)
                        message.nameField = String(object.nameField);
                    switch (object.history) {
                    default:
                        if (typeof object.history === "number") {
                            message.history = object.history;
                            break;
                        }
                        break;
                    case "HISTORY_UNSPECIFIED":
                    case 0:
                        message.history = 0;
                        break;
                    case "ORIGINALLY_SINGLE_PATTERN":
                    case 1:
                        message.history = 1;
                        break;
                    case "FUTURE_MULTI_PATTERN":
                    case 2:
                        message.history = 2;
                        break;
                    }
                    if (object.plural != null)
                        message.plural = String(object.plural);
                    if (object.singular != null)
                        message.singular = String(object.singular);
                    if (object.style) {
                        if (!Array.isArray(object.style))
                            throw TypeError(".google.api.ResourceDescriptor.style: array expected");
                        message.style = [];
                        for (var i = 0; i < object.style.length; ++i)
                            switch (object.style[i]) {
                            default:
                                if (typeof object.style[i] === "number") {
                                    message.style[i] = object.style[i];
                                    break;
                                }
                            case "STYLE_UNSPECIFIED":
                            case 0:
                                message.style[i] = 0;
                                break;
                            case "DECLARATIVE_FRIENDLY":
                            case 1:
                                message.style[i] = 1;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceDescriptor message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.ResourceDescriptor} message ResourceDescriptor
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceDescriptor.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.pattern = [];
                        object.style = [];
                    }
                    if (options.defaults) {
                        object.type = "";
                        object.nameField = "";
                        object.history = options.enums === String ? "HISTORY_UNSPECIFIED" : 0;
                        object.plural = "";
                        object.singular = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.pattern && message.pattern.length) {
                        object.pattern = [];
                        for (var j = 0; j < message.pattern.length; ++j)
                            object.pattern[j] = message.pattern[j];
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        object.nameField = message.nameField;
                    if (message.history != null && message.hasOwnProperty("history"))
                        object.history = options.enums === String ? $root.google.api.ResourceDescriptor.History[message.history] === undefined ? message.history : $root.google.api.ResourceDescriptor.History[message.history] : message.history;
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        object.plural = message.plural;
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        object.singular = message.singular;
                    if (message.style && message.style.length) {
                        object.style = [];
                        for (var j = 0; j < message.style.length; ++j)
                            object.style[j] = options.enums === String ? $root.google.api.ResourceDescriptor.Style[message.style[j]] === undefined ? message.style[j] : $root.google.api.ResourceDescriptor.Style[message.style[j]] : message.style[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this ResourceDescriptor to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceDescriptor.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceDescriptor
                 * @function getTypeUrl
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceDescriptor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceDescriptor";
                };
    
                /**
                 * History enum.
                 * @name google.api.ResourceDescriptor.History
                 * @enum {number}
                 * @property {number} HISTORY_UNSPECIFIED=0 HISTORY_UNSPECIFIED value
                 * @property {number} ORIGINALLY_SINGLE_PATTERN=1 ORIGINALLY_SINGLE_PATTERN value
                 * @property {number} FUTURE_MULTI_PATTERN=2 FUTURE_MULTI_PATTERN value
                 */
                ResourceDescriptor.History = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "HISTORY_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "ORIGINALLY_SINGLE_PATTERN"] = 1;
                    values[valuesById[2] = "FUTURE_MULTI_PATTERN"] = 2;
                    return values;
                })();
    
                /**
                 * Style enum.
                 * @name google.api.ResourceDescriptor.Style
                 * @enum {number}
                 * @property {number} STYLE_UNSPECIFIED=0 STYLE_UNSPECIFIED value
                 * @property {number} DECLARATIVE_FRIENDLY=1 DECLARATIVE_FRIENDLY value
                 */
                ResourceDescriptor.Style = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STYLE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "DECLARATIVE_FRIENDLY"] = 1;
                    return values;
                })();
    
                return ResourceDescriptor;
            })();
    
            api.ResourceReference = (function() {
    
                /**
                 * Properties of a ResourceReference.
                 * @memberof google.api
                 * @interface IResourceReference
                 * @property {string|null} [type] ResourceReference type
                 * @property {string|null} [childType] ResourceReference childType
                 */
    
                /**
                 * Constructs a new ResourceReference.
                 * @memberof google.api
                 * @classdesc Represents a ResourceReference.
                 * @implements IResourceReference
                 * @constructor
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 */
                function ResourceReference(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceReference type.
                 * @member {string} type
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.type = "";
    
                /**
                 * ResourceReference childType.
                 * @member {string} childType
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.childType = "";
    
                /**
                 * Creates a new ResourceReference instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 * @returns {google.api.ResourceReference} ResourceReference instance
                 */
                ResourceReference.create = function create(properties) {
                    return new ResourceReference(properties);
                };
    
                /**
                 * Encodes the specified ResourceReference message. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.childType != null && Object.hasOwnProperty.call(message, "childType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.childType);
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceReference message, length delimited. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceReference();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                message.childType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceReference message.
                 * @function verify
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceReference.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        if (!$util.isString(message.childType))
                            return "childType: string expected";
                    return null;
                };
    
                /**
                 * Creates a ResourceReference message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceReference} ResourceReference
                 */
                ResourceReference.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceReference)
                        return object;
                    var message = new $root.google.api.ResourceReference();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.childType != null)
                        message.childType = String(object.childType);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceReference message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.ResourceReference} message ResourceReference
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceReference.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type = "";
                        object.childType = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        object.childType = message.childType;
                    return object;
                };
    
                /**
                 * Converts this ResourceReference to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceReference
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceReference.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceReference
                 * @function getTypeUrl
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceReference.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceReference";
                };
    
                return ResourceReference;
            })();
    
            return api;
        })();
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.file && message.file.length))
                                    message.file = [];
                                message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorSet";
                };
    
                return FileDescriptorSet;
            })();
    
            /**
             * Edition enum.
             * @name google.protobuf.Edition
             * @enum {number}
             * @property {number} EDITION_UNKNOWN=0 EDITION_UNKNOWN value
             * @property {number} EDITION_PROTO2=998 EDITION_PROTO2 value
             * @property {number} EDITION_PROTO3=999 EDITION_PROTO3 value
             * @property {number} EDITION_2023=1000 EDITION_2023 value
             * @property {number} EDITION_2024=1001 EDITION_2024 value
             * @property {number} EDITION_1_TEST_ONLY=1 EDITION_1_TEST_ONLY value
             * @property {number} EDITION_2_TEST_ONLY=2 EDITION_2_TEST_ONLY value
             * @property {number} EDITION_99997_TEST_ONLY=99997 EDITION_99997_TEST_ONLY value
             * @property {number} EDITION_99998_TEST_ONLY=99998 EDITION_99998_TEST_ONLY value
             * @property {number} EDITION_99999_TEST_ONLY=99999 EDITION_99999_TEST_ONLY value
             * @property {number} EDITION_MAX=2147483647 EDITION_MAX value
             */
            protobuf.Edition = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "EDITION_UNKNOWN"] = 0;
                values[valuesById[998] = "EDITION_PROTO2"] = 998;
                values[valuesById[999] = "EDITION_PROTO3"] = 999;
                values[valuesById[1000] = "EDITION_2023"] = 1000;
                values[valuesById[1001] = "EDITION_2024"] = 1001;
                values[valuesById[1] = "EDITION_1_TEST_ONLY"] = 1;
                values[valuesById[2] = "EDITION_2_TEST_ONLY"] = 2;
                values[valuesById[99997] = "EDITION_99997_TEST_ONLY"] = 99997;
                values[valuesById[99998] = "EDITION_99998_TEST_ONLY"] = 99998;
                values[valuesById[99999] = "EDITION_99999_TEST_ONLY"] = 99999;
                values[valuesById[2147483647] = "EDITION_MAX"] = 2147483647;
                return values;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 * @property {google.protobuf.Edition|null} [edition] FileDescriptorProto edition
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * FileDescriptorProto edition.
                 * @member {google.protobuf.Edition} edition
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.edition = 0;
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && Object.hasOwnProperty.call(message, "sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                        writer.uint32(/* id 14, wireType 0 =*/112).int32(message.edition);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message["package"] = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.dependency && message.dependency.length))
                                    message.dependency = [];
                                message.dependency.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.publicDependency && message.publicDependency.length))
                                    message.publicDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.publicDependency.push(reader.int32());
                                } else
                                    message.publicDependency.push(reader.int32());
                                break;
                            }
                        case 11: {
                                if (!(message.weakDependency && message.weakDependency.length))
                                    message.weakDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.weakDependency.push(reader.int32());
                                } else
                                    message.weakDependency.push(reader.int32());
                                break;
                            }
                        case 4: {
                                if (!(message.messageType && message.messageType.length))
                                    message.messageType = [];
                                message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.service && message.service.length))
                                    message.service = [];
                                message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                                break;
                            }
                        case 12: {
                                message.syntax = reader.string();
                                break;
                            }
                        case 14: {
                                message.edition = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        switch (message.edition) {
                        default:
                            return "edition: enum value expected";
                        case 0:
                        case 998:
                        case 999:
                        case 1000:
                        case 1001:
                        case 1:
                        case 2:
                        case 99997:
                        case 99998:
                        case 99999:
                        case 2147483647:
                            break;
                        }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    switch (object.edition) {
                    default:
                        if (typeof object.edition === "number") {
                            message.edition = object.edition;
                            break;
                        }
                        break;
                    case "EDITION_UNKNOWN":
                    case 0:
                        message.edition = 0;
                        break;
                    case "EDITION_PROTO2":
                    case 998:
                        message.edition = 998;
                        break;
                    case "EDITION_PROTO3":
                    case 999:
                        message.edition = 999;
                        break;
                    case "EDITION_2023":
                    case 1000:
                        message.edition = 1000;
                        break;
                    case "EDITION_2024":
                    case 1001:
                        message.edition = 1001;
                        break;
                    case "EDITION_1_TEST_ONLY":
                    case 1:
                        message.edition = 1;
                        break;
                    case "EDITION_2_TEST_ONLY":
                    case 2:
                        message.edition = 2;
                        break;
                    case "EDITION_99997_TEST_ONLY":
                    case 99997:
                        message.edition = 99997;
                        break;
                    case "EDITION_99998_TEST_ONLY":
                    case 99998:
                        message.edition = 99998;
                        break;
                    case "EDITION_99999_TEST_ONLY":
                    case 99999:
                        message.edition = 99999;
                        break;
                    case "EDITION_MAX":
                    case 2147483647:
                        message.edition = 2147483647;
                        break;
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                        object.edition = options.enums === String ? "EDITION_UNKNOWN" : 0;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        object.edition = options.enums === String ? $root.google.protobuf.Edition[message.edition] === undefined ? message.edition : $root.google.protobuf.Edition[message.edition] : message.edition;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorProto";
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.field && message.field.length))
                                    message.field = [];
                                message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                if (!(message.nestedType && message.nestedType.length))
                                    message.nestedType = [];
                                message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.extensionRange && message.extensionRange.length))
                                    message.extensionRange = [];
                                message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                if (!(message.oneofDecl && message.oneofDecl.length))
                                    message.oneofDecl = [];
                                message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 10: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DescriptorProto";
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * ExtensionRange options.
                     * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.options = null;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                            $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
                            message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                            object.options = null;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ExtensionRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ExtensionRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ExtensionRange";
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ReservedRange";
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.ExtensionRangeOptions = (function() {
    
                /**
                 * Properties of an ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @interface IExtensionRangeOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption
                 * @property {Array.<google.protobuf.ExtensionRangeOptions.IDeclaration>|null} [declaration] ExtensionRangeOptions declaration
                 * @property {google.protobuf.IFeatureSet|null} [features] ExtensionRangeOptions features
                 * @property {google.protobuf.ExtensionRangeOptions.VerificationState|null} [verification] ExtensionRangeOptions verification
                 */
    
                /**
                 * Constructs a new ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an ExtensionRangeOptions.
                 * @implements IExtensionRangeOptions
                 * @constructor
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 */
                function ExtensionRangeOptions(properties) {
                    this.uninterpretedOption = [];
                    this.declaration = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ExtensionRangeOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ExtensionRangeOptions declaration.
                 * @member {Array.<google.protobuf.ExtensionRangeOptions.IDeclaration>} declaration
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.declaration = $util.emptyArray;
    
                /**
                 * ExtensionRangeOptions features.
                 * @member {google.protobuf.IFeatureSet|null|undefined} features
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.features = null;
    
                /**
                 * ExtensionRangeOptions verification.
                 * @member {google.protobuf.ExtensionRangeOptions.VerificationState} verification
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.verification = 1;
    
                /**
                 * Creates a new ExtensionRangeOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance
                 */
                ExtensionRangeOptions.create = function create(properties) {
                    return new ExtensionRangeOptions(properties);
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.declaration != null && message.declaration.length)
                        for (var i = 0; i < message.declaration.length; ++i)
                            $root.google.protobuf.ExtensionRangeOptions.Declaration.encode(message.declaration[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.verification != null && Object.hasOwnProperty.call(message, "verification"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.verification);
                    if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                        $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 50, wireType 2 =*/402).fork()).ldelim();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                if (!(message.declaration && message.declaration.length))
                                    message.declaration = [];
                                message.declaration.push($root.google.protobuf.ExtensionRangeOptions.Declaration.decode(reader, reader.uint32()));
                                break;
                            }
                        case 50: {
                                message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                break;
                            }
                        case 3: {
                                message.verification = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an ExtensionRangeOptions message.
                 * @function verify
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ExtensionRangeOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message.declaration != null && message.hasOwnProperty("declaration")) {
                        if (!Array.isArray(message.declaration))
                            return "declaration: array expected";
                        for (var i = 0; i < message.declaration.length; ++i) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.Declaration.verify(message.declaration[i]);
                            if (error)
                                return "declaration." + error;
                        }
                    }
                    if (message.features != null && message.hasOwnProperty("features")) {
                        var error = $root.google.protobuf.FeatureSet.verify(message.features);
                        if (error)
                            return "features." + error;
                    }
                    if (message.verification != null && message.hasOwnProperty("verification"))
                        switch (message.verification) {
                        default:
                            return "verification: enum value expected";
                        case 0:
                        case 1:
                            break;
                        }
                    return null;
                };
    
                /**
                 * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 */
                ExtensionRangeOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ExtensionRangeOptions)
                        return object;
                    var message = new $root.google.protobuf.ExtensionRangeOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object.declaration) {
                        if (!Array.isArray(object.declaration))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.declaration: array expected");
                        message.declaration = [];
                        for (var i = 0; i < object.declaration.length; ++i) {
                            if (typeof object.declaration[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.declaration: object expected");
                            message.declaration[i] = $root.google.protobuf.ExtensionRangeOptions.Declaration.fromObject(object.declaration[i]);
                        }
                    }
                    if (object.features != null) {
                        if (typeof object.features !== "object")
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.features: object expected");
                        message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                    }
                    switch (object.verification) {
                    case "DECLARATION":
                    case 0:
                        message.verification = 0;
                        break;
                    default:
                        if (typeof object.verification === "number") {
                            message.verification = object.verification;
                            break;
                        }
                        break;
                    case "UNVERIFIED":
                    case 1:
                        message.verification = 1;
                        break;
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ExtensionRangeOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.declaration = [];
                        object.uninterpretedOption = [];
                    }
                    if (options.defaults) {
                        object.verification = options.enums === String ? "UNVERIFIED" : 1;
                        object.features = null;
                    }
                    if (message.declaration && message.declaration.length) {
                        object.declaration = [];
                        for (var j = 0; j < message.declaration.length; ++j)
                            object.declaration[j] = $root.google.protobuf.ExtensionRangeOptions.Declaration.toObject(message.declaration[j], options);
                    }
                    if (message.verification != null && message.hasOwnProperty("verification"))
                        object.verification = options.enums === String ? $root.google.protobuf.ExtensionRangeOptions.VerificationState[message.verification] === undefined ? message.verification : $root.google.protobuf.ExtensionRangeOptions.VerificationState[message.verification] : message.verification;
                    if (message.features != null && message.hasOwnProperty("features"))
                        object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ExtensionRangeOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ExtensionRangeOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ExtensionRangeOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ExtensionRangeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ExtensionRangeOptions";
                };
    
                ExtensionRangeOptions.Declaration = (function() {
    
                    /**
                     * Properties of a Declaration.
                     * @memberof google.protobuf.ExtensionRangeOptions
                     * @interface IDeclaration
                     * @property {number|null} [number] Declaration number
                     * @property {string|null} [fullName] Declaration fullName
                     * @property {string|null} [type] Declaration type
                     * @property {boolean|null} [reserved] Declaration reserved
                     * @property {boolean|null} [repeated] Declaration repeated
                     */
    
                    /**
                     * Constructs a new Declaration.
                     * @memberof google.protobuf.ExtensionRangeOptions
                     * @classdesc Represents a Declaration.
                     * @implements IDeclaration
                     * @constructor
                     * @param {google.protobuf.ExtensionRangeOptions.IDeclaration=} [properties] Properties to set
                     */
                    function Declaration(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Declaration number.
                     * @member {number} number
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @instance
                     */
                    Declaration.prototype.number = 0;
    
                    /**
                     * Declaration fullName.
                     * @member {string} fullName
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @instance
                     */
                    Declaration.prototype.fullName = "";
    
                    /**
                     * Declaration type.
                     * @member {string} type
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @instance
                     */
                    Declaration.prototype.type = "";
    
                    /**
                     * Declaration reserved.
                     * @member {boolean} reserved
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @instance
                     */
                    Declaration.prototype.reserved = false;
    
                    /**
                     * Declaration repeated.
                     * @member {boolean} repeated
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @instance
                     */
                    Declaration.prototype.repeated = false;
    
                    /**
                     * Creates a new Declaration instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @static
                     * @param {google.protobuf.ExtensionRangeOptions.IDeclaration=} [properties] Properties to set
                     * @returns {google.protobuf.ExtensionRangeOptions.Declaration} Declaration instance
                     */
                    Declaration.create = function create(properties) {
                        return new Declaration(properties);
                    };
    
                    /**
                     * Encodes the specified Declaration message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.Declaration.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @static
                     * @param {google.protobuf.ExtensionRangeOptions.IDeclaration} message Declaration message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Declaration.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.number);
                        if (message.fullName != null && Object.hasOwnProperty.call(message, "fullName"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.fullName);
                        if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.type);
                        if (message.reserved != null && Object.hasOwnProperty.call(message, "reserved"))
                            writer.uint32(/* id 5, wireType 0 =*/40).bool(message.reserved);
                        if (message.repeated != null && Object.hasOwnProperty.call(message, "repeated"))
                            writer.uint32(/* id 6, wireType 0 =*/48).bool(message.repeated);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Declaration message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.Declaration.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @static
                     * @param {google.protobuf.ExtensionRangeOptions.IDeclaration} message Declaration message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Declaration.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Declaration message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.ExtensionRangeOptions.Declaration} Declaration
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Declaration.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions.Declaration();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.number = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.fullName = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.type = reader.string();
                                    break;
                                }
                            case 5: {
                                    message.reserved = reader.bool();
                                    break;
                                }
                            case 6: {
                                    message.repeated = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Declaration message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.ExtensionRangeOptions.Declaration} Declaration
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Declaration.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Declaration message.
                     * @function verify
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Declaration.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.number != null && message.hasOwnProperty("number"))
                            if (!$util.isInteger(message.number))
                                return "number: integer expected";
                        if (message.fullName != null && message.hasOwnProperty("fullName"))
                            if (!$util.isString(message.fullName))
                                return "fullName: string expected";
                        if (message.type != null && message.hasOwnProperty("type"))
                            if (!$util.isString(message.type))
                                return "type: string expected";
                        if (message.reserved != null && message.hasOwnProperty("reserved"))
                            if (typeof message.reserved !== "boolean")
                                return "reserved: boolean expected";
                        if (message.repeated != null && message.hasOwnProperty("repeated"))
                            if (typeof message.repeated !== "boolean")
                                return "repeated: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a Declaration message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.ExtensionRangeOptions.Declaration} Declaration
                     */
                    Declaration.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.ExtensionRangeOptions.Declaration)
                            return object;
                        var message = new $root.google.protobuf.ExtensionRangeOptions.Declaration();
                        if (object.number != null)
                            message.number = object.number | 0;
                        if (object.fullName != null)
                            message.fullName = String(object.fullName);
                        if (object.type != null)
                            message.type = String(object.type);
                        if (object.reserved != null)
                            message.reserved = Boolean(object.reserved);
                        if (object.repeated != null)
                            message.repeated = Boolean(object.repeated);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Declaration message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @static
                     * @param {google.protobuf.ExtensionRangeOptions.Declaration} message Declaration
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Declaration.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.number = 0;
                            object.fullName = "";
                            object.type = "";
                            object.reserved = false;
                            object.repeated = false;
                        }
                        if (message.number != null && message.hasOwnProperty("number"))
                            object.number = message.number;
                        if (message.fullName != null && message.hasOwnProperty("fullName"))
                            object.fullName = message.fullName;
                        if (message.type != null && message.hasOwnProperty("type"))
                            object.type = message.type;
                        if (message.reserved != null && message.hasOwnProperty("reserved"))
                            object.reserved = message.reserved;
                        if (message.repeated != null && message.hasOwnProperty("repeated"))
                            object.repeated = message.repeated;
                        return object;
                    };
    
                    /**
                     * Converts this Declaration to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Declaration.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Declaration
                     * @function getTypeUrl
                     * @memberof google.protobuf.ExtensionRangeOptions.Declaration
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Declaration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.ExtensionRangeOptions.Declaration";
                    };
    
                    return Declaration;
                })();
    
                /**
                 * VerificationState enum.
                 * @name google.protobuf.ExtensionRangeOptions.VerificationState
                 * @enum {number}
                 * @property {number} DECLARATION=0 DECLARATION value
                 * @property {number} UNVERIFIED=1 UNVERIFIED value
                 */
                ExtensionRangeOptions.VerificationState = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "DECLARATION"] = 0;
                    values[valuesById[1] = "UNVERIFIED"] = 1;
                    return values;
                })();
    
                return ExtensionRangeOptions;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 * @property {boolean|null} [proto3Optional] FieldDescriptorProto proto3Optional
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * FieldDescriptorProto proto3Optional.
                 * @member {boolean} proto3Optional
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.proto3Optional = false;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && Object.hasOwnProperty.call(message, "typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && Object.hasOwnProperty.call(message, "defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && Object.hasOwnProperty.call(message, "oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && Object.hasOwnProperty.call(message, "jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    if (message.proto3Optional != null && Object.hasOwnProperty.call(message, "proto3Optional"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.proto3Optional);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.number = reader.int32();
                                break;
                            }
                        case 4: {
                                message.label = reader.int32();
                                break;
                            }
                        case 5: {
                                message.type = reader.int32();
                                break;
                            }
                        case 6: {
                                message.typeName = reader.string();
                                break;
                            }
                        case 2: {
                                message.extendee = reader.string();
                                break;
                            }
                        case 7: {
                                message.defaultValue = reader.string();
                                break;
                            }
                        case 9: {
                                message.oneofIndex = reader.int32();
                                break;
                            }
                        case 10: {
                                message.jsonName = reader.string();
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 17: {
                                message.proto3Optional = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 3:
                        case 2:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        if (typeof message.proto3Optional !== "boolean")
                            return "proto3Optional: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    default:
                        if (typeof object.label === "number") {
                            message.label = object.label;
                            break;
                        }
                        break;
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    }
                    switch (object.type) {
                    default:
                        if (typeof object.type === "number") {
                            message.type = object.type;
                            break;
                        }
                        break;
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    if (object.proto3Optional != null)
                        message.proto3Optional = Boolean(object.proto3Optional);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                        object.proto3Optional = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] === undefined ? message.label : $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] === undefined ? message.type : $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        object.proto3Optional = message.proto3Optional;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldDescriptorProto";
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofDescriptorProto";
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * EnumDescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.value && message.value.length))
                                    message.value = [];
                                message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 4: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.value = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto";
                };
    
                EnumDescriptorProto.EnumReservedRange = (function() {
    
                    /**
                     * Properties of an EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @interface IEnumReservedRange
                     * @property {number|null} [start] EnumReservedRange start
                     * @property {number|null} [end] EnumReservedRange end
                     */
    
                    /**
                     * Constructs a new EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @classdesc Represents an EnumReservedRange.
                     * @implements IEnumReservedRange
                     * @constructor
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     */
                    function EnumReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EnumReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.start = 0;
    
                    /**
                     * EnumReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new EnumReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance
                     */
                    EnumReservedRange.create = function create(properties) {
                        return new EnumReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EnumReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EnumReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     */
                    EnumReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange)
                            return object;
                        var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EnumReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this EnumReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EnumReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for EnumReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    EnumReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto.EnumReservedRange";
                    };
    
                    return EnumReservedRange;
                })();
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.number = reader.int32();
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueDescriptorProto";
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.method && message.method.length))
                                    message.method = [];
                                message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceDescriptorProto";
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && Object.hasOwnProperty.call(message, "inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && Object.hasOwnProperty.call(message, "outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && Object.hasOwnProperty.call(message, "clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && Object.hasOwnProperty.call(message, "serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.inputType = reader.string();
                                break;
                            }
                        case 3: {
                                message.outputType = reader.string();
                                break;
                            }
                        case 4: {
                                message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.clientStreaming = reader.bool();
                                break;
                            }
                        case 6: {
                                message.serverStreaming = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodDescriptorProto";
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {string|null} [swiftPrefix] FileOptions swiftPrefix
                 * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix
                 * @property {string|null} [phpNamespace] FileOptions phpNamespace
                 * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace
                 * @property {string|null} [rubyPackage] FileOptions rubyPackage
                 * @property {google.protobuf.IFeatureSet|null} [features] FileOptions features
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 * @property {Array.<google.api.IResourceDescriptor>|null} [".google.api.resourceDefinition"] FileOptions .google.api.resourceDefinition
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.resourceDefinition"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = true;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions swiftPrefix.
                 * @member {string} swiftPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.swiftPrefix = "";
    
                /**
                 * FileOptions phpClassPrefix.
                 * @member {string} phpClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpClassPrefix = "";
    
                /**
                 * FileOptions phpNamespace.
                 * @member {string} phpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpNamespace = "";
    
                /**
                 * FileOptions phpMetadataNamespace.
                 * @member {string} phpMetadataNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpMetadataNamespace = "";
    
                /**
                 * FileOptions rubyPackage.
                 * @member {string} rubyPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.rubyPackage = "";
    
                /**
                 * FileOptions features.
                 * @member {google.protobuf.IFeatureSet|null|undefined} features
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.features = null;
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FileOptions .google.api.resourceDefinition.
                 * @member {Array.<google.api.IResourceDescriptor>} .google.api.resourceDefinition
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".google.api.resourceDefinition"] = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && Object.hasOwnProperty.call(message, "javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && Object.hasOwnProperty.call(message, "javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && Object.hasOwnProperty.call(message, "optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && Object.hasOwnProperty.call(message, "javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && Object.hasOwnProperty.call(message, "goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && Object.hasOwnProperty.call(message, "ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && Object.hasOwnProperty.call(message, "javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && Object.hasOwnProperty.call(message, "pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && Object.hasOwnProperty.call(message, "javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && Object.hasOwnProperty.call(message, "javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && Object.hasOwnProperty.call(message, "ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && Object.hasOwnProperty.call(message, "objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && Object.hasOwnProperty.call(message, "csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.swiftPrefix != null && Object.hasOwnProperty.call(message, "swiftPrefix"))
                        writer.uint32(/* id 39, wireType 2 =*/314).string(message.swiftPrefix);
                    if (message.phpClassPrefix != null && Object.hasOwnProperty.call(message, "phpClassPrefix"))
                        writer.uint32(/* id 40, wireType 2 =*/322).string(message.phpClassPrefix);
                    if (message.phpNamespace != null && Object.hasOwnProperty.call(message, "phpNamespace"))
                        writer.uint32(/* id 41, wireType 2 =*/330).string(message.phpNamespace);
                    if (message.phpMetadataNamespace != null && Object.hasOwnProperty.call(message, "phpMetadataNamespace"))
                        writer.uint32(/* id 44, wireType 2 =*/354).string(message.phpMetadataNamespace);
                    if (message.rubyPackage != null && Object.hasOwnProperty.call(message, "rubyPackage"))
                        writer.uint32(/* id 45, wireType 2 =*/362).string(message.rubyPackage);
                    if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                        $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 50, wireType 2 =*/402).fork()).ldelim();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resourceDefinition"] != null && message[".google.api.resourceDefinition"].length)
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i)
                            $root.google.api.ResourceDescriptor.encode(message[".google.api.resourceDefinition"][i], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.javaPackage = reader.string();
                                break;
                            }
                        case 8: {
                                message.javaOuterClassname = reader.string();
                                break;
                            }
                        case 10: {
                                message.javaMultipleFiles = reader.bool();
                                break;
                            }
                        case 20: {
                                message.javaGenerateEqualsAndHash = reader.bool();
                                break;
                            }
                        case 27: {
                                message.javaStringCheckUtf8 = reader.bool();
                                break;
                            }
                        case 9: {
                                message.optimizeFor = reader.int32();
                                break;
                            }
                        case 11: {
                                message.goPackage = reader.string();
                                break;
                            }
                        case 16: {
                                message.ccGenericServices = reader.bool();
                                break;
                            }
                        case 17: {
                                message.javaGenericServices = reader.bool();
                                break;
                            }
                        case 18: {
                                message.pyGenericServices = reader.bool();
                                break;
                            }
                        case 23: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 31: {
                                message.ccEnableArenas = reader.bool();
                                break;
                            }
                        case 36: {
                                message.objcClassPrefix = reader.string();
                                break;
                            }
                        case 37: {
                                message.csharpNamespace = reader.string();
                                break;
                            }
                        case 39: {
                                message.swiftPrefix = reader.string();
                                break;
                            }
                        case 40: {
                                message.phpClassPrefix = reader.string();
                                break;
                            }
                        case 41: {
                                message.phpNamespace = reader.string();
                                break;
                            }
                        case 44: {
                                message.phpMetadataNamespace = reader.string();
                                break;
                            }
                        case 45: {
                                message.rubyPackage = reader.string();
                                break;
                            }
                        case 50: {
                                message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                if (!(message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length))
                                    message[".google.api.resourceDefinition"] = [];
                                message[".google.api.resourceDefinition"].push($root.google.api.ResourceDescriptor.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        if (!$util.isString(message.swiftPrefix))
                            return "swiftPrefix: string expected";
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        if (!$util.isString(message.phpClassPrefix))
                            return "phpClassPrefix: string expected";
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        if (!$util.isString(message.phpNamespace))
                            return "phpNamespace: string expected";
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        if (!$util.isString(message.phpMetadataNamespace))
                            return "phpMetadataNamespace: string expected";
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        if (!$util.isString(message.rubyPackage))
                            return "rubyPackage: string expected";
                    if (message.features != null && message.hasOwnProperty("features")) {
                        var error = $root.google.protobuf.FeatureSet.verify(message.features);
                        if (error)
                            return "features." + error;
                    }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resourceDefinition"] != null && message.hasOwnProperty(".google.api.resourceDefinition")) {
                        if (!Array.isArray(message[".google.api.resourceDefinition"]))
                            return ".google.api.resourceDefinition: array expected";
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i) {
                            var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resourceDefinition"][i]);
                            if (error)
                                return ".google.api.resourceDefinition." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    default:
                        if (typeof object.optimizeFor === "number") {
                            message.optimizeFor = object.optimizeFor;
                            break;
                        }
                        break;
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.swiftPrefix != null)
                        message.swiftPrefix = String(object.swiftPrefix);
                    if (object.phpClassPrefix != null)
                        message.phpClassPrefix = String(object.phpClassPrefix);
                    if (object.phpNamespace != null)
                        message.phpNamespace = String(object.phpNamespace);
                    if (object.phpMetadataNamespace != null)
                        message.phpMetadataNamespace = String(object.phpMetadataNamespace);
                    if (object.rubyPackage != null)
                        message.rubyPackage = String(object.rubyPackage);
                    if (object.features != null) {
                        if (typeof object.features !== "object")
                            throw TypeError(".google.protobuf.FileOptions.features: object expected");
                        message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resourceDefinition"]) {
                        if (!Array.isArray(object[".google.api.resourceDefinition"]))
                            throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: array expected");
                        message[".google.api.resourceDefinition"] = [];
                        for (var i = 0; i < object[".google.api.resourceDefinition"].length; ++i) {
                            if (typeof object[".google.api.resourceDefinition"][i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: object expected");
                            message[".google.api.resourceDefinition"][i] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resourceDefinition"][i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.resourceDefinition"] = [];
                    }
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = true;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                        object.swiftPrefix = "";
                        object.phpClassPrefix = "";
                        object.phpNamespace = "";
                        object.phpMetadataNamespace = "";
                        object.rubyPackage = "";
                        object.features = null;
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] === undefined ? message.optimizeFor : $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        object.swiftPrefix = message.swiftPrefix;
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        object.phpClassPrefix = message.phpClassPrefix;
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        object.phpNamespace = message.phpNamespace;
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        object.phpMetadataNamespace = message.phpMetadataNamespace;
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        object.rubyPackage = message.rubyPackage;
                    if (message.features != null && message.hasOwnProperty("features"))
                        object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length) {
                        object[".google.api.resourceDefinition"] = [];
                        for (var j = 0; j < message[".google.api.resourceDefinition"].length; ++j)
                            object[".google.api.resourceDefinition"][j] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resourceDefinition"][j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileOptions";
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {boolean|null} [deprecatedLegacyJsonFieldConflicts] MessageOptions deprecatedLegacyJsonFieldConflicts
                 * @property {google.protobuf.IFeatureSet|null} [features] MessageOptions features
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 * @property {google.api.IResourceDescriptor|null} [".google.api.resource"] MessageOptions .google.api.resource
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions deprecatedLegacyJsonFieldConflicts.
                 * @member {boolean} deprecatedLegacyJsonFieldConflicts
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecatedLegacyJsonFieldConflicts = false;
    
                /**
                 * MessageOptions features.
                 * @member {google.protobuf.IFeatureSet|null|undefined} features
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.features = null;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MessageOptions .google.api.resource.
                 * @member {google.api.IResourceDescriptor|null|undefined} .google.api.resource
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".google.api.resource"] = null;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && Object.hasOwnProperty.call(message, "messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && Object.hasOwnProperty.call(message, "noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && Object.hasOwnProperty.call(message, "mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.deprecatedLegacyJsonFieldConflicts != null && Object.hasOwnProperty.call(message, "deprecatedLegacyJsonFieldConflicts"))
                        writer.uint32(/* id 11, wireType 0 =*/88).bool(message.deprecatedLegacyJsonFieldConflicts);
                    if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                        $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resource"] != null && Object.hasOwnProperty.call(message, ".google.api.resource"))
                        $root.google.api.ResourceDescriptor.encode(message[".google.api.resource"], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.messageSetWireFormat = reader.bool();
                                break;
                            }
                        case 2: {
                                message.noStandardDescriptorAccessor = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 7: {
                                message.mapEntry = reader.bool();
                                break;
                            }
                        case 11: {
                                message.deprecatedLegacyJsonFieldConflicts = reader.bool();
                                break;
                            }
                        case 12: {
                                message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                message[".google.api.resource"] = $root.google.api.ResourceDescriptor.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        if (typeof message.deprecatedLegacyJsonFieldConflicts !== "boolean")
                            return "deprecatedLegacyJsonFieldConflicts: boolean expected";
                    if (message.features != null && message.hasOwnProperty("features")) {
                        var error = $root.google.protobuf.FeatureSet.verify(message.features);
                        if (error)
                            return "features." + error;
                    }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource")) {
                        var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resource"]);
                        if (error)
                            return ".google.api.resource." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.deprecatedLegacyJsonFieldConflicts != null)
                        message.deprecatedLegacyJsonFieldConflicts = Boolean(object.deprecatedLegacyJsonFieldConflicts);
                    if (object.features != null) {
                        if (typeof object.features !== "object")
                            throw TypeError(".google.protobuf.MessageOptions.features: object expected");
                        message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resource"] != null) {
                        if (typeof object[".google.api.resource"] !== "object")
                            throw TypeError(".google.protobuf.MessageOptions..google.api.resource: object expected");
                        message[".google.api.resource"] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resource"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                        object.deprecatedLegacyJsonFieldConflicts = false;
                        object.features = null;
                        object[".google.api.resource"] = null;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        object.deprecatedLegacyJsonFieldConflicts = message.deprecatedLegacyJsonFieldConflicts;
                    if (message.features != null && message.hasOwnProperty("features"))
                        object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource"))
                        object[".google.api.resource"] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resource"], options);
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MessageOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MessageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MessageOptions";
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [unverifiedLazy] FieldOptions unverifiedLazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {boolean|null} [debugRedact] FieldOptions debugRedact
                 * @property {google.protobuf.FieldOptions.OptionRetention|null} [retention] FieldOptions retention
                 * @property {Array.<google.protobuf.FieldOptions.OptionTargetType>|null} [targets] FieldOptions targets
                 * @property {Array.<google.protobuf.FieldOptions.IEditionDefault>|null} [editionDefaults] FieldOptions editionDefaults
                 * @property {google.protobuf.IFeatureSet|null} [features] FieldOptions features
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 * @property {Array.<google.api.FieldBehavior>|null} [".google.api.fieldBehavior"] FieldOptions .google.api.fieldBehavior
                 * @property {google.api.IResourceReference|null} [".google.api.resourceReference"] FieldOptions .google.api.resourceReference
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.targets = [];
                    this.editionDefaults = [];
                    this.uninterpretedOption = [];
                    this[".google.api.fieldBehavior"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions unverifiedLazy.
                 * @member {boolean} unverifiedLazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.unverifiedLazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions debugRedact.
                 * @member {boolean} debugRedact
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.debugRedact = false;
    
                /**
                 * FieldOptions retention.
                 * @member {google.protobuf.FieldOptions.OptionRetention} retention
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.retention = 0;
    
                /**
                 * FieldOptions targets.
                 * @member {Array.<google.protobuf.FieldOptions.OptionTargetType>} targets
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.targets = $util.emptyArray;
    
                /**
                 * FieldOptions editionDefaults.
                 * @member {Array.<google.protobuf.FieldOptions.IEditionDefault>} editionDefaults
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.editionDefaults = $util.emptyArray;
    
                /**
                 * FieldOptions features.
                 * @member {google.protobuf.IFeatureSet|null|undefined} features
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.features = null;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.fieldBehavior.
                 * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.fieldBehavior"] = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.resourceReference.
                 * @member {google.api.IResourceReference|null|undefined} .google.api.resourceReference
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.resourceReference"] = null;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.unverifiedLazy != null && Object.hasOwnProperty.call(message, "unverifiedLazy"))
                        writer.uint32(/* id 15, wireType 0 =*/120).bool(message.unverifiedLazy);
                    if (message.debugRedact != null && Object.hasOwnProperty.call(message, "debugRedact"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.debugRedact);
                    if (message.retention != null && Object.hasOwnProperty.call(message, "retention"))
                        writer.uint32(/* id 17, wireType 0 =*/136).int32(message.retention);
                    if (message.targets != null && message.targets.length)
                        for (var i = 0; i < message.targets.length; ++i)
                            writer.uint32(/* id 19, wireType 0 =*/152).int32(message.targets[i]);
                    if (message.editionDefaults != null && message.editionDefaults.length)
                        for (var i = 0; i < message.editionDefaults.length; ++i)
                            $root.google.protobuf.FieldOptions.EditionDefault.encode(message.editionDefaults[i], writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();
                    if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                        $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.fieldBehavior"] != null && message[".google.api.fieldBehavior"].length) {
                        writer.uint32(/* id 1052, wireType 2 =*/8418).fork();
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            writer.int32(message[".google.api.fieldBehavior"][i]);
                        writer.ldelim();
                    }
                    if (message[".google.api.resourceReference"] != null && Object.hasOwnProperty.call(message, ".google.api.resourceReference"))
                        $root.google.api.ResourceReference.encode(message[".google.api.resourceReference"], writer.uint32(/* id 1055, wireType 2 =*/8442).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.ctype = reader.int32();
                                break;
                            }
                        case 2: {
                                message.packed = reader.bool();
                                break;
                            }
                        case 6: {
                                message.jstype = reader.int32();
                                break;
                            }
                        case 5: {
                                message.lazy = reader.bool();
                                break;
                            }
                        case 15: {
                                message.unverifiedLazy = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 10: {
                                message.weak = reader.bool();
                                break;
                            }
                        case 16: {
                                message.debugRedact = reader.bool();
                                break;
                            }
                        case 17: {
                                message.retention = reader.int32();
                                break;
                            }
                        case 19: {
                                if (!(message.targets && message.targets.length))
                                    message.targets = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.targets.push(reader.int32());
                                } else
                                    message.targets.push(reader.int32());
                                break;
                            }
                        case 20: {
                                if (!(message.editionDefaults && message.editionDefaults.length))
                                    message.editionDefaults = [];
                                message.editionDefaults.push($root.google.protobuf.FieldOptions.EditionDefault.decode(reader, reader.uint32()));
                                break;
                            }
                        case 21: {
                                message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1052: {
                                if (!(message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length))
                                    message[".google.api.fieldBehavior"] = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message[".google.api.fieldBehavior"].push(reader.int32());
                                } else
                                    message[".google.api.fieldBehavior"].push(reader.int32());
                                break;
                            }
                        case 1055: {
                                message[".google.api.resourceReference"] = $root.google.api.ResourceReference.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        if (typeof message.unverifiedLazy !== "boolean")
                            return "unverifiedLazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.debugRedact != null && message.hasOwnProperty("debugRedact"))
                        if (typeof message.debugRedact !== "boolean")
                            return "debugRedact: boolean expected";
                    if (message.retention != null && message.hasOwnProperty("retention"))
                        switch (message.retention) {
                        default:
                            return "retention: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.targets != null && message.hasOwnProperty("targets")) {
                        if (!Array.isArray(message.targets))
                            return "targets: array expected";
                        for (var i = 0; i < message.targets.length; ++i)
                            switch (message.targets[i]) {
                            default:
                                return "targets: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                            case 8:
                            case 9:
                                break;
                            }
                    }
                    if (message.editionDefaults != null && message.hasOwnProperty("editionDefaults")) {
                        if (!Array.isArray(message.editionDefaults))
                            return "editionDefaults: array expected";
                        for (var i = 0; i < message.editionDefaults.length; ++i) {
                            var error = $root.google.protobuf.FieldOptions.EditionDefault.verify(message.editionDefaults[i]);
                            if (error)
                                return "editionDefaults." + error;
                        }
                    }
                    if (message.features != null && message.hasOwnProperty("features")) {
                        var error = $root.google.protobuf.FeatureSet.verify(message.features);
                        if (error)
                            return "features." + error;
                    }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.fieldBehavior"] != null && message.hasOwnProperty(".google.api.fieldBehavior")) {
                        if (!Array.isArray(message[".google.api.fieldBehavior"]))
                            return ".google.api.fieldBehavior: array expected";
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            switch (message[".google.api.fieldBehavior"][i]) {
                            default:
                                return ".google.api.fieldBehavior: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                            case 8:
                                break;
                            }
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference")) {
                        var error = $root.google.api.ResourceReference.verify(message[".google.api.resourceReference"]);
                        if (error)
                            return ".google.api.resourceReference." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    default:
                        if (typeof object.ctype === "number") {
                            message.ctype = object.ctype;
                            break;
                        }
                        break;
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    default:
                        if (typeof object.jstype === "number") {
                            message.jstype = object.jstype;
                            break;
                        }
                        break;
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.unverifiedLazy != null)
                        message.unverifiedLazy = Boolean(object.unverifiedLazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.debugRedact != null)
                        message.debugRedact = Boolean(object.debugRedact);
                    switch (object.retention) {
                    default:
                        if (typeof object.retention === "number") {
                            message.retention = object.retention;
                            break;
                        }
                        break;
                    case "RETENTION_UNKNOWN":
                    case 0:
                        message.retention = 0;
                        break;
                    case "RETENTION_RUNTIME":
                    case 1:
                        message.retention = 1;
                        break;
                    case "RETENTION_SOURCE":
                    case 2:
                        message.retention = 2;
                        break;
                    }
                    if (object.targets) {
                        if (!Array.isArray(object.targets))
                            throw TypeError(".google.protobuf.FieldOptions.targets: array expected");
                        message.targets = [];
                        for (var i = 0; i < object.targets.length; ++i)
                            switch (object.targets[i]) {
                            default:
                                if (typeof object.targets[i] === "number") {
                                    message.targets[i] = object.targets[i];
                                    break;
                                }
                            case "TARGET_TYPE_UNKNOWN":
                            case 0:
                                message.targets[i] = 0;
                                break;
                            case "TARGET_TYPE_FILE":
                            case 1:
                                message.targets[i] = 1;
                                break;
                            case "TARGET_TYPE_EXTENSION_RANGE":
                            case 2:
                                message.targets[i] = 2;
                                break;
                            case "TARGET_TYPE_MESSAGE":
                            case 3:
                                message.targets[i] = 3;
                                break;
                            case "TARGET_TYPE_FIELD":
                            case 4:
                                message.targets[i] = 4;
                                break;
                            case "TARGET_TYPE_ONEOF":
                            case 5:
                                message.targets[i] = 5;
                                break;
                            case "TARGET_TYPE_ENUM":
                            case 6:
                                message.targets[i] = 6;
                                break;
                            case "TARGET_TYPE_ENUM_ENTRY":
                            case 7:
                                message.targets[i] = 7;
                                break;
                            case "TARGET_TYPE_SERVICE":
                            case 8:
                                message.targets[i] = 8;
                                break;
                            case "TARGET_TYPE_METHOD":
                            case 9:
                                message.targets[i] = 9;
                                break;
                            }
                    }
                    if (object.editionDefaults) {
                        if (!Array.isArray(object.editionDefaults))
                            throw TypeError(".google.protobuf.FieldOptions.editionDefaults: array expected");
                        message.editionDefaults = [];
                        for (var i = 0; i < object.editionDefaults.length; ++i) {
                            if (typeof object.editionDefaults[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.editionDefaults: object expected");
                            message.editionDefaults[i] = $root.google.protobuf.FieldOptions.EditionDefault.fromObject(object.editionDefaults[i]);
                        }
                    }
                    if (object.features != null) {
                        if (typeof object.features !== "object")
                            throw TypeError(".google.protobuf.FieldOptions.features: object expected");
                        message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.fieldBehavior"]) {
                        if (!Array.isArray(object[".google.api.fieldBehavior"]))
                            throw TypeError(".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected");
                        message[".google.api.fieldBehavior"] = [];
                        for (var i = 0; i < object[".google.api.fieldBehavior"].length; ++i)
                            switch (object[".google.api.fieldBehavior"][i]) {
                            default:
                                if (typeof object[".google.api.fieldBehavior"][i] === "number") {
                                    message[".google.api.fieldBehavior"][i] = object[".google.api.fieldBehavior"][i];
                                    break;
                                }
                            case "FIELD_BEHAVIOR_UNSPECIFIED":
                            case 0:
                                message[".google.api.fieldBehavior"][i] = 0;
                                break;
                            case "OPTIONAL":
                            case 1:
                                message[".google.api.fieldBehavior"][i] = 1;
                                break;
                            case "REQUIRED":
                            case 2:
                                message[".google.api.fieldBehavior"][i] = 2;
                                break;
                            case "OUTPUT_ONLY":
                            case 3:
                                message[".google.api.fieldBehavior"][i] = 3;
                                break;
                            case "INPUT_ONLY":
                            case 4:
                                message[".google.api.fieldBehavior"][i] = 4;
                                break;
                            case "IMMUTABLE":
                            case 5:
                                message[".google.api.fieldBehavior"][i] = 5;
                                break;
                            case "UNORDERED_LIST":
                            case 6:
                                message[".google.api.fieldBehavior"][i] = 6;
                                break;
                            case "NON_EMPTY_DEFAULT":
                            case 7:
                                message[".google.api.fieldBehavior"][i] = 7;
                                break;
                            case "IDENTIFIER":
                            case 8:
                                message[".google.api.fieldBehavior"][i] = 8;
                                break;
                            }
                    }
                    if (object[".google.api.resourceReference"] != null) {
                        if (typeof object[".google.api.resourceReference"] !== "object")
                            throw TypeError(".google.protobuf.FieldOptions..google.api.resourceReference: object expected");
                        message[".google.api.resourceReference"] = $root.google.api.ResourceReference.fromObject(object[".google.api.resourceReference"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.targets = [];
                        object.editionDefaults = [];
                        object.uninterpretedOption = [];
                        object[".google.api.fieldBehavior"] = [];
                    }
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object.unverifiedLazy = false;
                        object.debugRedact = false;
                        object.retention = options.enums === String ? "RETENTION_UNKNOWN" : 0;
                        object.features = null;
                        object[".google.api.resourceReference"] = null;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] === undefined ? message.ctype : $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] === undefined ? message.jstype : $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        object.unverifiedLazy = message.unverifiedLazy;
                    if (message.debugRedact != null && message.hasOwnProperty("debugRedact"))
                        object.debugRedact = message.debugRedact;
                    if (message.retention != null && message.hasOwnProperty("retention"))
                        object.retention = options.enums === String ? $root.google.protobuf.FieldOptions.OptionRetention[message.retention] === undefined ? message.retention : $root.google.protobuf.FieldOptions.OptionRetention[message.retention] : message.retention;
                    if (message.targets && message.targets.length) {
                        object.targets = [];
                        for (var j = 0; j < message.targets.length; ++j)
                            object.targets[j] = options.enums === String ? $root.google.protobuf.FieldOptions.OptionTargetType[message.targets[j]] === undefined ? message.targets[j] : $root.google.protobuf.FieldOptions.OptionTargetType[message.targets[j]] : message.targets[j];
                    }
                    if (message.editionDefaults && message.editionDefaults.length) {
                        object.editionDefaults = [];
                        for (var j = 0; j < message.editionDefaults.length; ++j)
                            object.editionDefaults[j] = $root.google.protobuf.FieldOptions.EditionDefault.toObject(message.editionDefaults[j], options);
                    }
                    if (message.features != null && message.hasOwnProperty("features"))
                        object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length) {
                        object[".google.api.fieldBehavior"] = [];
                        for (var j = 0; j < message[".google.api.fieldBehavior"].length; ++j)
                            object[".google.api.fieldBehavior"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] === undefined ? message[".google.api.fieldBehavior"][j] : $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] : message[".google.api.fieldBehavior"][j];
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference"))
                        object[".google.api.resourceReference"] = $root.google.api.ResourceReference.toObject(message[".google.api.resourceReference"], options);
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldOptions";
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                /**
                 * OptionRetention enum.
                 * @name google.protobuf.FieldOptions.OptionRetention
                 * @enum {number}
                 * @property {number} RETENTION_UNKNOWN=0 RETENTION_UNKNOWN value
                 * @property {number} RETENTION_RUNTIME=1 RETENTION_RUNTIME value
                 * @property {number} RETENTION_SOURCE=2 RETENTION_SOURCE value
                 */
                FieldOptions.OptionRetention = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "RETENTION_UNKNOWN"] = 0;
                    values[valuesById[1] = "RETENTION_RUNTIME"] = 1;
                    values[valuesById[2] = "RETENTION_SOURCE"] = 2;
                    return values;
                })();
    
                /**
                 * OptionTargetType enum.
                 * @name google.protobuf.FieldOptions.OptionTargetType
                 * @enum {number}
                 * @property {number} TARGET_TYPE_UNKNOWN=0 TARGET_TYPE_UNKNOWN value
                 * @property {number} TARGET_TYPE_FILE=1 TARGET_TYPE_FILE value
                 * @property {number} TARGET_TYPE_EXTENSION_RANGE=2 TARGET_TYPE_EXTENSION_RANGE value
                 * @property {number} TARGET_TYPE_MESSAGE=3 TARGET_TYPE_MESSAGE value
                 * @property {number} TARGET_TYPE_FIELD=4 TARGET_TYPE_FIELD value
                 * @property {number} TARGET_TYPE_ONEOF=5 TARGET_TYPE_ONEOF value
                 * @property {number} TARGET_TYPE_ENUM=6 TARGET_TYPE_ENUM value
                 * @property {number} TARGET_TYPE_ENUM_ENTRY=7 TARGET_TYPE_ENUM_ENTRY value
                 * @property {number} TARGET_TYPE_SERVICE=8 TARGET_TYPE_SERVICE value
                 * @property {number} TARGET_TYPE_METHOD=9 TARGET_TYPE_METHOD value
                 */
                FieldOptions.OptionTargetType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "TARGET_TYPE_UNKNOWN"] = 0;
                    values[valuesById[1] = "TARGET_TYPE_FILE"] = 1;
                    values[valuesById[2] = "TARGET_TYPE_EXTENSION_RANGE"] = 2;
                    values[valuesById[3] = "TARGET_TYPE_MESSAGE"] = 3;
                    values[valuesById[4] = "TARGET_TYPE_FIELD"] = 4;
                    values[valuesById[5] = "TARGET_TYPE_ONEOF"] = 5;
                    values[valuesById[6] = "TARGET_TYPE_ENUM"] = 6;
                    values[valuesById[7] = "TARGET_TYPE_ENUM_ENTRY"] = 7;
                    values[valuesById[8] = "TARGET_TYPE_SERVICE"] = 8;
                    values[valuesById[9] = "TARGET_TYPE_METHOD"] = 9;
                    return values;
                })();
    
                FieldOptions.EditionDefault = (function() {
    
                    /**
                     * Properties of an EditionDefault.
                     * @memberof google.protobuf.FieldOptions
                     * @interface IEditionDefault
                     * @property {google.protobuf.Edition|null} [edition] EditionDefault edition
                     * @property {string|null} [value] EditionDefault value
                     */
    
                    /**
                     * Constructs a new EditionDefault.
                     * @memberof google.protobuf.FieldOptions
                     * @classdesc Represents an EditionDefault.
                     * @implements IEditionDefault
                     * @constructor
                     * @param {google.protobuf.FieldOptions.IEditionDefault=} [properties] Properties to set
                     */
                    function EditionDefault(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EditionDefault edition.
                     * @member {google.protobuf.Edition} edition
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @instance
                     */
                    EditionDefault.prototype.edition = 0;
    
                    /**
                     * EditionDefault value.
                     * @member {string} value
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @instance
                     */
                    EditionDefault.prototype.value = "";
    
                    /**
                     * Creates a new EditionDefault instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @static
                     * @param {google.protobuf.FieldOptions.IEditionDefault=} [properties] Properties to set
                     * @returns {google.protobuf.FieldOptions.EditionDefault} EditionDefault instance
                     */
                    EditionDefault.create = function create(properties) {
                        return new EditionDefault(properties);
                    };
    
                    /**
                     * Encodes the specified EditionDefault message. Does not implicitly {@link google.protobuf.FieldOptions.EditionDefault.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @static
                     * @param {google.protobuf.FieldOptions.IEditionDefault} message EditionDefault message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EditionDefault.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
                        if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.edition);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EditionDefault message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.EditionDefault.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @static
                     * @param {google.protobuf.FieldOptions.IEditionDefault} message EditionDefault message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EditionDefault.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EditionDefault message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.FieldOptions.EditionDefault} EditionDefault
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EditionDefault.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions.EditionDefault();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 3: {
                                    message.edition = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.value = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EditionDefault message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.FieldOptions.EditionDefault} EditionDefault
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EditionDefault.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EditionDefault message.
                     * @function verify
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EditionDefault.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.edition != null && message.hasOwnProperty("edition"))
                            switch (message.edition) {
                            default:
                                return "edition: enum value expected";
                            case 0:
                            case 998:
                            case 999:
                            case 1000:
                            case 1001:
                            case 1:
                            case 2:
                            case 99997:
                            case 99998:
                            case 99999:
                            case 2147483647:
                                break;
                            }
                        if (message.value != null && message.hasOwnProperty("value"))
                            if (!$util.isString(message.value))
                                return "value: string expected";
                        return null;
                    };
    
                    /**
                     * Creates an EditionDefault message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.FieldOptions.EditionDefault} EditionDefault
                     */
                    EditionDefault.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.FieldOptions.EditionDefault)
                            return object;
                        var message = new $root.google.protobuf.FieldOptions.EditionDefault();
                        switch (object.edition) {
                        default:
                            if (typeof object.edition === "number") {
                                message.edition = object.edition;
                                break;
                            }
                            break;
                        case "EDITION_UNKNOWN":
                        case 0:
                            message.edition = 0;
                            break;
                        case "EDITION_PROTO2":
                        case 998:
                            message.edition = 998;
                            break;
                        case "EDITION_PROTO3":
                        case 999:
                            message.edition = 999;
                            break;
                        case "EDITION_2023":
                        case 1000:
                            message.edition = 1000;
                            break;
                        case "EDITION_2024":
                        case 1001:
                            message.edition = 1001;
                            break;
                        case "EDITION_1_TEST_ONLY":
                        case 1:
                            message.edition = 1;
                            break;
                        case "EDITION_2_TEST_ONLY":
                        case 2:
                            message.edition = 2;
                            break;
                        case "EDITION_99997_TEST_ONLY":
                        case 99997:
                            message.edition = 99997;
                            break;
                        case "EDITION_99998_TEST_ONLY":
                        case 99998:
                            message.edition = 99998;
                            break;
                        case "EDITION_99999_TEST_ONLY":
                        case 99999:
                            message.edition = 99999;
                            break;
                        case "EDITION_MAX":
                        case 2147483647:
                            message.edition = 2147483647;
                            break;
                        }
                        if (object.value != null)
                            message.value = String(object.value);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EditionDefault message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @static
                     * @param {google.protobuf.FieldOptions.EditionDefault} message EditionDefault
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EditionDefault.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.value = "";
                            object.edition = options.enums === String ? "EDITION_UNKNOWN" : 0;
                        }
                        if (message.value != null && message.hasOwnProperty("value"))
                            object.value = message.value;
                        if (message.edition != null && message.hasOwnProperty("edition"))
                            object.edition = options.enums === String ? $root.google.protobuf.Edition[message.edition] === undefined ? message.edition : $root.google.protobuf.Edition[message.edition] : message.edition;
                        return object;
                    };
    
                    /**
                     * Converts this EditionDefault to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EditionDefault.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for EditionDefault
                     * @function getTypeUrl
                     * @memberof google.protobuf.FieldOptions.EditionDefault
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    EditionDefault.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.FieldOptions.EditionDefault";
                    };
    
                    return EditionDefault;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {google.protobuf.IFeatureSet|null} [features] OneofOptions features
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions features.
                 * @member {google.protobuf.IFeatureSet|null|undefined} features
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.features = null;
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                        $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.features != null && message.hasOwnProperty("features")) {
                        var error = $root.google.protobuf.FeatureSet.verify(message.features);
                        if (error)
                            return "features." + error;
                    }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.features != null) {
                        if (typeof object.features !== "object")
                            throw TypeError(".google.protobuf.OneofOptions.features: object expected");
                        message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.features = null;
                    if (message.features != null && message.hasOwnProperty("features"))
                        object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofOptions";
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {boolean|null} [deprecatedLegacyJsonFieldConflicts] EnumOptions deprecatedLegacyJsonFieldConflicts
                 * @property {google.protobuf.IFeatureSet|null} [features] EnumOptions features
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions deprecatedLegacyJsonFieldConflicts.
                 * @member {boolean} deprecatedLegacyJsonFieldConflicts
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecatedLegacyJsonFieldConflicts = false;
    
                /**
                 * EnumOptions features.
                 * @member {google.protobuf.IFeatureSet|null|undefined} features
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.features = null;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && Object.hasOwnProperty.call(message, "allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.deprecatedLegacyJsonFieldConflicts != null && Object.hasOwnProperty.call(message, "deprecatedLegacyJsonFieldConflicts"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.deprecatedLegacyJsonFieldConflicts);
                    if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                        $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                message.allowAlias = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 6: {
                                message.deprecatedLegacyJsonFieldConflicts = reader.bool();
                                break;
                            }
                        case 7: {
                                message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        if (typeof message.deprecatedLegacyJsonFieldConflicts !== "boolean")
                            return "deprecatedLegacyJsonFieldConflicts: boolean expected";
                    if (message.features != null && message.hasOwnProperty("features")) {
                        var error = $root.google.protobuf.FeatureSet.verify(message.features);
                        if (error)
                            return "features." + error;
                    }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.deprecatedLegacyJsonFieldConflicts != null)
                        message.deprecatedLegacyJsonFieldConflicts = Boolean(object.deprecatedLegacyJsonFieldConflicts);
                    if (object.features != null) {
                        if (typeof object.features !== "object")
                            throw TypeError(".google.protobuf.EnumOptions.features: object expected");
                        message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                        object.deprecatedLegacyJsonFieldConflicts = false;
                        object.features = null;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        object.deprecatedLegacyJsonFieldConflicts = message.deprecatedLegacyJsonFieldConflicts;
                    if (message.features != null && message.hasOwnProperty("features"))
                        object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumOptions";
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {google.protobuf.IFeatureSet|null} [features] EnumValueOptions features
                 * @property {boolean|null} [debugRedact] EnumValueOptions debugRedact
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions features.
                 * @member {google.protobuf.IFeatureSet|null|undefined} features
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.features = null;
    
                /**
                 * EnumValueOptions debugRedact.
                 * @member {boolean} debugRedact
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.debugRedact = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                        $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.debugRedact != null && Object.hasOwnProperty.call(message, "debugRedact"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.debugRedact);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 2: {
                                message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                break;
                            }
                        case 3: {
                                message.debugRedact = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.features != null && message.hasOwnProperty("features")) {
                        var error = $root.google.protobuf.FeatureSet.verify(message.features);
                        if (error)
                            return "features." + error;
                    }
                    if (message.debugRedact != null && message.hasOwnProperty("debugRedact"))
                        if (typeof message.debugRedact !== "boolean")
                            return "debugRedact: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.features != null) {
                        if (typeof object.features !== "object")
                            throw TypeError(".google.protobuf.EnumValueOptions.features: object expected");
                        message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                    }
                    if (object.debugRedact != null)
                        message.debugRedact = Boolean(object.debugRedact);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object.features = null;
                        object.debugRedact = false;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.features != null && message.hasOwnProperty("features"))
                        object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                    if (message.debugRedact != null && message.hasOwnProperty("debugRedact"))
                        object.debugRedact = message.debugRedact;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueOptions";
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {google.protobuf.IFeatureSet|null} [features] ServiceOptions features
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 * @property {string|null} [".google.api.defaultHost"] ServiceOptions .google.api.defaultHost
                 * @property {string|null} [".google.api.oauthScopes"] ServiceOptions .google.api.oauthScopes
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions features.
                 * @member {google.protobuf.IFeatureSet|null|undefined} features
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.features = null;
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ServiceOptions .google.api.defaultHost.
                 * @member {string} .google.api.defaultHost
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.defaultHost"] = "";
    
                /**
                 * ServiceOptions .google.api.oauthScopes.
                 * @member {string} .google.api.oauthScopes
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.oauthScopes"] = "";
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                        $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 34, wireType 2 =*/274).fork()).ldelim();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.defaultHost"] != null && Object.hasOwnProperty.call(message, ".google.api.defaultHost"))
                        writer.uint32(/* id 1049, wireType 2 =*/8394).string(message[".google.api.defaultHost"]);
                    if (message[".google.api.oauthScopes"] != null && Object.hasOwnProperty.call(message, ".google.api.oauthScopes"))
                        writer.uint32(/* id 1050, wireType 2 =*/8402).string(message[".google.api.oauthScopes"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 34: {
                                message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                break;
                            }
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1049: {
                                message[".google.api.defaultHost"] = reader.string();
                                break;
                            }
                        case 1050: {
                                message[".google.api.oauthScopes"] = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.features != null && message.hasOwnProperty("features")) {
                        var error = $root.google.protobuf.FeatureSet.verify(message.features);
                        if (error)
                            return "features." + error;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        if (!$util.isString(message[".google.api.defaultHost"]))
                            return ".google.api.defaultHost: string expected";
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        if (!$util.isString(message[".google.api.oauthScopes"]))
                            return ".google.api.oauthScopes: string expected";
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.features != null) {
                        if (typeof object.features !== "object")
                            throw TypeError(".google.protobuf.ServiceOptions.features: object expected");
                        message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                    }
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.defaultHost"] != null)
                        message[".google.api.defaultHost"] = String(object[".google.api.defaultHost"]);
                    if (object[".google.api.oauthScopes"] != null)
                        message[".google.api.oauthScopes"] = String(object[".google.api.oauthScopes"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object.features = null;
                        object[".google.api.defaultHost"] = "";
                        object[".google.api.oauthScopes"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.features != null && message.hasOwnProperty("features"))
                        object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        object[".google.api.defaultHost"] = message[".google.api.defaultHost"];
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        object[".google.api.oauthScopes"] = message[".google.api.oauthScopes"];
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceOptions";
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel
                 * @property {google.protobuf.IFeatureSet|null} [features] MethodOptions features
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
                 * @property {Array.<string>|null} [".google.api.methodSignature"] MethodOptions .google.api.methodSignature
                 * @property {google.longrunning.IOperationInfo|null} [".google.longrunning.operationInfo"] MethodOptions .google.longrunning.operationInfo
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.methodSignature"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions idempotencyLevel.
                 * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.idempotencyLevel = 0;
    
                /**
                 * MethodOptions features.
                 * @member {google.protobuf.IFeatureSet|null|undefined} features
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.features = null;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.http.
                 * @member {google.api.IHttpRule|null|undefined} .google.api.http
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.http"] = null;
    
                /**
                 * MethodOptions .google.api.methodSignature.
                 * @member {Array.<string>} .google.api.methodSignature
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.methodSignature"] = $util.emptyArray;
    
                /**
                 * MethodOptions .google.longrunning.operationInfo.
                 * @member {google.longrunning.IOperationInfo|null|undefined} .google.longrunning.operationInfo
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.longrunning.operationInfo"] = null;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.idempotencyLevel != null && Object.hasOwnProperty.call(message, "idempotencyLevel"))
                        writer.uint32(/* id 34, wireType 0 =*/272).int32(message.idempotencyLevel);
                    if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                        $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 35, wireType 2 =*/282).fork()).ldelim();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.longrunning.operationInfo"] != null && Object.hasOwnProperty.call(message, ".google.longrunning.operationInfo"))
                        $root.google.longrunning.OperationInfo.encode(message[".google.longrunning.operationInfo"], writer.uint32(/* id 1049, wireType 2 =*/8394).fork()).ldelim();
                    if (message[".google.api.methodSignature"] != null && message[".google.api.methodSignature"].length)
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            writer.uint32(/* id 1051, wireType 2 =*/8410).string(message[".google.api.methodSignature"][i]);
                    if (message[".google.api.http"] != null && Object.hasOwnProperty.call(message, ".google.api.http"))
                        $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 34: {
                                message.idempotencyLevel = reader.int32();
                                break;
                            }
                        case 35: {
                                message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 72295728: {
                                message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                                break;
                            }
                        case 1051: {
                                if (!(message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length))
                                    message[".google.api.methodSignature"] = [];
                                message[".google.api.methodSignature"].push(reader.string());
                                break;
                            }
                        case 1049: {
                                message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        switch (message.idempotencyLevel) {
                        default:
                            return "idempotencyLevel: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.features != null && message.hasOwnProperty("features")) {
                        var error = $root.google.protobuf.FeatureSet.verify(message.features);
                        if (error)
                            return "features." + error;
                    }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                        var error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                        if (error)
                            return ".google.api.http." + error;
                    }
                    if (message[".google.api.methodSignature"] != null && message.hasOwnProperty(".google.api.methodSignature")) {
                        if (!Array.isArray(message[".google.api.methodSignature"]))
                            return ".google.api.methodSignature: array expected";
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            if (!$util.isString(message[".google.api.methodSignature"][i]))
                                return ".google.api.methodSignature: string[] expected";
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo")) {
                        var error = $root.google.longrunning.OperationInfo.verify(message[".google.longrunning.operationInfo"]);
                        if (error)
                            return ".google.longrunning.operationInfo." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    switch (object.idempotencyLevel) {
                    default:
                        if (typeof object.idempotencyLevel === "number") {
                            message.idempotencyLevel = object.idempotencyLevel;
                            break;
                        }
                        break;
                    case "IDEMPOTENCY_UNKNOWN":
                    case 0:
                        message.idempotencyLevel = 0;
                        break;
                    case "NO_SIDE_EFFECTS":
                    case 1:
                        message.idempotencyLevel = 1;
                        break;
                    case "IDEMPOTENT":
                    case 2:
                        message.idempotencyLevel = 2;
                        break;
                    }
                    if (object.features != null) {
                        if (typeof object.features !== "object")
                            throw TypeError(".google.protobuf.MethodOptions.features: object expected");
                        message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.http"] != null) {
                        if (typeof object[".google.api.http"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                        message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                    }
                    if (object[".google.api.methodSignature"]) {
                        if (!Array.isArray(object[".google.api.methodSignature"]))
                            throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
                        message[".google.api.methodSignature"] = [];
                        for (var i = 0; i < object[".google.api.methodSignature"].length; ++i)
                            message[".google.api.methodSignature"][i] = String(object[".google.api.methodSignature"][i]);
                    }
                    if (object[".google.longrunning.operationInfo"] != null) {
                        if (typeof object[".google.longrunning.operationInfo"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.longrunning.operationInfo: object expected");
                        message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.fromObject(object[".google.longrunning.operationInfo"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.methodSignature"] = [];
                    }
                    if (options.defaults) {
                        object.deprecated = false;
                        object.idempotencyLevel = options.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0;
                        object.features = null;
                        object[".google.longrunning.operationInfo"] = null;
                        object[".google.api.http"] = null;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] === undefined ? message.idempotencyLevel : $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;
                    if (message.features != null && message.hasOwnProperty("features"))
                        object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo"))
                        object[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.toObject(message[".google.longrunning.operationInfo"], options);
                    if (message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length) {
                        object[".google.api.methodSignature"] = [];
                        for (var j = 0; j < message[".google.api.methodSignature"].length; ++j)
                            object[".google.api.methodSignature"][j] = message[".google.api.methodSignature"][j];
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodOptions";
                };
    
                /**
                 * IdempotencyLevel enum.
                 * @name google.protobuf.MethodOptions.IdempotencyLevel
                 * @enum {number}
                 * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value
                 * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value
                 * @property {number} IDEMPOTENT=2 IDEMPOTENT value
                 */
                MethodOptions.IdempotencyLevel = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "IDEMPOTENCY_UNKNOWN"] = 0;
                    values[valuesById[1] = "NO_SIDE_EFFECTS"] = 1;
                    values[valuesById[2] = "IDEMPOTENT"] = 2;
                    return values;
                })();
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && Object.hasOwnProperty.call(message, "identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && Object.hasOwnProperty.call(message, "positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && Object.hasOwnProperty.call(message, "negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && Object.hasOwnProperty.call(message, "aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.name && message.name.length))
                                    message.name = [];
                                message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.identifierValue = reader.string();
                                break;
                            }
                        case 4: {
                                message.positiveIntValue = reader.uint64();
                                break;
                            }
                        case 5: {
                                message.negativeIntValue = reader.int64();
                                break;
                            }
                        case 6: {
                                message.doubleValue = reader.double();
                                break;
                            }
                        case 7: {
                                message.stringValue = reader.bytes();
                                break;
                            }
                        case 8: {
                                message.aggregateValue = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length >= 0)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UninterpretedOption
                 * @function getTypeUrl
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UninterpretedOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UninterpretedOption";
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.namePart = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.isExtension = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NamePart
                     * @function getTypeUrl
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NamePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.UninterpretedOption.NamePart";
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.FeatureSet = (function() {
    
                /**
                 * Properties of a FeatureSet.
                 * @memberof google.protobuf
                 * @interface IFeatureSet
                 * @property {google.protobuf.FeatureSet.FieldPresence|null} [fieldPresence] FeatureSet fieldPresence
                 * @property {google.protobuf.FeatureSet.EnumType|null} [enumType] FeatureSet enumType
                 * @property {google.protobuf.FeatureSet.RepeatedFieldEncoding|null} [repeatedFieldEncoding] FeatureSet repeatedFieldEncoding
                 * @property {google.protobuf.FeatureSet.Utf8Validation|null} [utf8Validation] FeatureSet utf8Validation
                 * @property {google.protobuf.FeatureSet.MessageEncoding|null} [messageEncoding] FeatureSet messageEncoding
                 * @property {google.protobuf.FeatureSet.JsonFormat|null} [jsonFormat] FeatureSet jsonFormat
                 */
    
                /**
                 * Constructs a new FeatureSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FeatureSet.
                 * @implements IFeatureSet
                 * @constructor
                 * @param {google.protobuf.IFeatureSet=} [properties] Properties to set
                 */
                function FeatureSet(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FeatureSet fieldPresence.
                 * @member {google.protobuf.FeatureSet.FieldPresence} fieldPresence
                 * @memberof google.protobuf.FeatureSet
                 * @instance
                 */
                FeatureSet.prototype.fieldPresence = 0;
    
                /**
                 * FeatureSet enumType.
                 * @member {google.protobuf.FeatureSet.EnumType} enumType
                 * @memberof google.protobuf.FeatureSet
                 * @instance
                 */
                FeatureSet.prototype.enumType = 0;
    
                /**
                 * FeatureSet repeatedFieldEncoding.
                 * @member {google.protobuf.FeatureSet.RepeatedFieldEncoding} repeatedFieldEncoding
                 * @memberof google.protobuf.FeatureSet
                 * @instance
                 */
                FeatureSet.prototype.repeatedFieldEncoding = 0;
    
                /**
                 * FeatureSet utf8Validation.
                 * @member {google.protobuf.FeatureSet.Utf8Validation} utf8Validation
                 * @memberof google.protobuf.FeatureSet
                 * @instance
                 */
                FeatureSet.prototype.utf8Validation = 0;
    
                /**
                 * FeatureSet messageEncoding.
                 * @member {google.protobuf.FeatureSet.MessageEncoding} messageEncoding
                 * @memberof google.protobuf.FeatureSet
                 * @instance
                 */
                FeatureSet.prototype.messageEncoding = 0;
    
                /**
                 * FeatureSet jsonFormat.
                 * @member {google.protobuf.FeatureSet.JsonFormat} jsonFormat
                 * @memberof google.protobuf.FeatureSet
                 * @instance
                 */
                FeatureSet.prototype.jsonFormat = 0;
    
                /**
                 * Creates a new FeatureSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FeatureSet
                 * @static
                 * @param {google.protobuf.IFeatureSet=} [properties] Properties to set
                 * @returns {google.protobuf.FeatureSet} FeatureSet instance
                 */
                FeatureSet.create = function create(properties) {
                    return new FeatureSet(properties);
                };
    
                /**
                 * Encodes the specified FeatureSet message. Does not implicitly {@link google.protobuf.FeatureSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FeatureSet
                 * @static
                 * @param {google.protobuf.IFeatureSet} message FeatureSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FeatureSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.fieldPresence != null && Object.hasOwnProperty.call(message, "fieldPresence"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.fieldPresence);
                    if (message.enumType != null && Object.hasOwnProperty.call(message, "enumType"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.enumType);
                    if (message.repeatedFieldEncoding != null && Object.hasOwnProperty.call(message, "repeatedFieldEncoding"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.repeatedFieldEncoding);
                    if (message.utf8Validation != null && Object.hasOwnProperty.call(message, "utf8Validation"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.utf8Validation);
                    if (message.messageEncoding != null && Object.hasOwnProperty.call(message, "messageEncoding"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.messageEncoding);
                    if (message.jsonFormat != null && Object.hasOwnProperty.call(message, "jsonFormat"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jsonFormat);
                    return writer;
                };
    
                /**
                 * Encodes the specified FeatureSet message, length delimited. Does not implicitly {@link google.protobuf.FeatureSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FeatureSet
                 * @static
                 * @param {google.protobuf.IFeatureSet} message FeatureSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FeatureSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FeatureSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FeatureSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FeatureSet} FeatureSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FeatureSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FeatureSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.fieldPresence = reader.int32();
                                break;
                            }
                        case 2: {
                                message.enumType = reader.int32();
                                break;
                            }
                        case 3: {
                                message.repeatedFieldEncoding = reader.int32();
                                break;
                            }
                        case 4: {
                                message.utf8Validation = reader.int32();
                                break;
                            }
                        case 5: {
                                message.messageEncoding = reader.int32();
                                break;
                            }
                        case 6: {
                                message.jsonFormat = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FeatureSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FeatureSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FeatureSet} FeatureSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FeatureSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FeatureSet message.
                 * @function verify
                 * @memberof google.protobuf.FeatureSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FeatureSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.fieldPresence != null && message.hasOwnProperty("fieldPresence"))
                        switch (message.fieldPresence) {
                        default:
                            return "fieldPresence: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.enumType != null && message.hasOwnProperty("enumType"))
                        switch (message.enumType) {
                        default:
                            return "enumType: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.repeatedFieldEncoding != null && message.hasOwnProperty("repeatedFieldEncoding"))
                        switch (message.repeatedFieldEncoding) {
                        default:
                            return "repeatedFieldEncoding: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.utf8Validation != null && message.hasOwnProperty("utf8Validation"))
                        switch (message.utf8Validation) {
                        default:
                            return "utf8Validation: enum value expected";
                        case 0:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.messageEncoding != null && message.hasOwnProperty("messageEncoding"))
                        switch (message.messageEncoding) {
                        default:
                            return "messageEncoding: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.jsonFormat != null && message.hasOwnProperty("jsonFormat"))
                        switch (message.jsonFormat) {
                        default:
                            return "jsonFormat: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    return null;
                };
    
                /**
                 * Creates a FeatureSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FeatureSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FeatureSet} FeatureSet
                 */
                FeatureSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FeatureSet)
                        return object;
                    var message = new $root.google.protobuf.FeatureSet();
                    switch (object.fieldPresence) {
                    default:
                        if (typeof object.fieldPresence === "number") {
                            message.fieldPresence = object.fieldPresence;
                            break;
                        }
                        break;
                    case "FIELD_PRESENCE_UNKNOWN":
                    case 0:
                        message.fieldPresence = 0;
                        break;
                    case "EXPLICIT":
                    case 1:
                        message.fieldPresence = 1;
                        break;
                    case "IMPLICIT":
                    case 2:
                        message.fieldPresence = 2;
                        break;
                    case "LEGACY_REQUIRED":
                    case 3:
                        message.fieldPresence = 3;
                        break;
                    }
                    switch (object.enumType) {
                    default:
                        if (typeof object.enumType === "number") {
                            message.enumType = object.enumType;
                            break;
                        }
                        break;
                    case "ENUM_TYPE_UNKNOWN":
                    case 0:
                        message.enumType = 0;
                        break;
                    case "OPEN":
                    case 1:
                        message.enumType = 1;
                        break;
                    case "CLOSED":
                    case 2:
                        message.enumType = 2;
                        break;
                    }
                    switch (object.repeatedFieldEncoding) {
                    default:
                        if (typeof object.repeatedFieldEncoding === "number") {
                            message.repeatedFieldEncoding = object.repeatedFieldEncoding;
                            break;
                        }
                        break;
                    case "REPEATED_FIELD_ENCODING_UNKNOWN":
                    case 0:
                        message.repeatedFieldEncoding = 0;
                        break;
                    case "PACKED":
                    case 1:
                        message.repeatedFieldEncoding = 1;
                        break;
                    case "EXPANDED":
                    case 2:
                        message.repeatedFieldEncoding = 2;
                        break;
                    }
                    switch (object.utf8Validation) {
                    default:
                        if (typeof object.utf8Validation === "number") {
                            message.utf8Validation = object.utf8Validation;
                            break;
                        }
                        break;
                    case "UTF8_VALIDATION_UNKNOWN":
                    case 0:
                        message.utf8Validation = 0;
                        break;
                    case "VERIFY":
                    case 2:
                        message.utf8Validation = 2;
                        break;
                    case "NONE":
                    case 3:
                        message.utf8Validation = 3;
                        break;
                    }
                    switch (object.messageEncoding) {
                    default:
                        if (typeof object.messageEncoding === "number") {
                            message.messageEncoding = object.messageEncoding;
                            break;
                        }
                        break;
                    case "MESSAGE_ENCODING_UNKNOWN":
                    case 0:
                        message.messageEncoding = 0;
                        break;
                    case "LENGTH_PREFIXED":
                    case 1:
                        message.messageEncoding = 1;
                        break;
                    case "DELIMITED":
                    case 2:
                        message.messageEncoding = 2;
                        break;
                    }
                    switch (object.jsonFormat) {
                    default:
                        if (typeof object.jsonFormat === "number") {
                            message.jsonFormat = object.jsonFormat;
                            break;
                        }
                        break;
                    case "JSON_FORMAT_UNKNOWN":
                    case 0:
                        message.jsonFormat = 0;
                        break;
                    case "ALLOW":
                    case 1:
                        message.jsonFormat = 1;
                        break;
                    case "LEGACY_BEST_EFFORT":
                    case 2:
                        message.jsonFormat = 2;
                        break;
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FeatureSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FeatureSet
                 * @static
                 * @param {google.protobuf.FeatureSet} message FeatureSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FeatureSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.fieldPresence = options.enums === String ? "FIELD_PRESENCE_UNKNOWN" : 0;
                        object.enumType = options.enums === String ? "ENUM_TYPE_UNKNOWN" : 0;
                        object.repeatedFieldEncoding = options.enums === String ? "REPEATED_FIELD_ENCODING_UNKNOWN" : 0;
                        object.utf8Validation = options.enums === String ? "UTF8_VALIDATION_UNKNOWN" : 0;
                        object.messageEncoding = options.enums === String ? "MESSAGE_ENCODING_UNKNOWN" : 0;
                        object.jsonFormat = options.enums === String ? "JSON_FORMAT_UNKNOWN" : 0;
                    }
                    if (message.fieldPresence != null && message.hasOwnProperty("fieldPresence"))
                        object.fieldPresence = options.enums === String ? $root.google.protobuf.FeatureSet.FieldPresence[message.fieldPresence] === undefined ? message.fieldPresence : $root.google.protobuf.FeatureSet.FieldPresence[message.fieldPresence] : message.fieldPresence;
                    if (message.enumType != null && message.hasOwnProperty("enumType"))
                        object.enumType = options.enums === String ? $root.google.protobuf.FeatureSet.EnumType[message.enumType] === undefined ? message.enumType : $root.google.protobuf.FeatureSet.EnumType[message.enumType] : message.enumType;
                    if (message.repeatedFieldEncoding != null && message.hasOwnProperty("repeatedFieldEncoding"))
                        object.repeatedFieldEncoding = options.enums === String ? $root.google.protobuf.FeatureSet.RepeatedFieldEncoding[message.repeatedFieldEncoding] === undefined ? message.repeatedFieldEncoding : $root.google.protobuf.FeatureSet.RepeatedFieldEncoding[message.repeatedFieldEncoding] : message.repeatedFieldEncoding;
                    if (message.utf8Validation != null && message.hasOwnProperty("utf8Validation"))
                        object.utf8Validation = options.enums === String ? $root.google.protobuf.FeatureSet.Utf8Validation[message.utf8Validation] === undefined ? message.utf8Validation : $root.google.protobuf.FeatureSet.Utf8Validation[message.utf8Validation] : message.utf8Validation;
                    if (message.messageEncoding != null && message.hasOwnProperty("messageEncoding"))
                        object.messageEncoding = options.enums === String ? $root.google.protobuf.FeatureSet.MessageEncoding[message.messageEncoding] === undefined ? message.messageEncoding : $root.google.protobuf.FeatureSet.MessageEncoding[message.messageEncoding] : message.messageEncoding;
                    if (message.jsonFormat != null && message.hasOwnProperty("jsonFormat"))
                        object.jsonFormat = options.enums === String ? $root.google.protobuf.FeatureSet.JsonFormat[message.jsonFormat] === undefined ? message.jsonFormat : $root.google.protobuf.FeatureSet.JsonFormat[message.jsonFormat] : message.jsonFormat;
                    return object;
                };
    
                /**
                 * Converts this FeatureSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FeatureSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FeatureSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FeatureSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FeatureSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FeatureSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FeatureSet";
                };
    
                /**
                 * FieldPresence enum.
                 * @name google.protobuf.FeatureSet.FieldPresence
                 * @enum {number}
                 * @property {number} FIELD_PRESENCE_UNKNOWN=0 FIELD_PRESENCE_UNKNOWN value
                 * @property {number} EXPLICIT=1 EXPLICIT value
                 * @property {number} IMPLICIT=2 IMPLICIT value
                 * @property {number} LEGACY_REQUIRED=3 LEGACY_REQUIRED value
                 */
                FeatureSet.FieldPresence = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "FIELD_PRESENCE_UNKNOWN"] = 0;
                    values[valuesById[1] = "EXPLICIT"] = 1;
                    values[valuesById[2] = "IMPLICIT"] = 2;
                    values[valuesById[3] = "LEGACY_REQUIRED"] = 3;
                    return values;
                })();
    
                /**
                 * EnumType enum.
                 * @name google.protobuf.FeatureSet.EnumType
                 * @enum {number}
                 * @property {number} ENUM_TYPE_UNKNOWN=0 ENUM_TYPE_UNKNOWN value
                 * @property {number} OPEN=1 OPEN value
                 * @property {number} CLOSED=2 CLOSED value
                 */
                FeatureSet.EnumType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "ENUM_TYPE_UNKNOWN"] = 0;
                    values[valuesById[1] = "OPEN"] = 1;
                    values[valuesById[2] = "CLOSED"] = 2;
                    return values;
                })();
    
                /**
                 * RepeatedFieldEncoding enum.
                 * @name google.protobuf.FeatureSet.RepeatedFieldEncoding
                 * @enum {number}
                 * @property {number} REPEATED_FIELD_ENCODING_UNKNOWN=0 REPEATED_FIELD_ENCODING_UNKNOWN value
                 * @property {number} PACKED=1 PACKED value
                 * @property {number} EXPANDED=2 EXPANDED value
                 */
                FeatureSet.RepeatedFieldEncoding = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "REPEATED_FIELD_ENCODING_UNKNOWN"] = 0;
                    values[valuesById[1] = "PACKED"] = 1;
                    values[valuesById[2] = "EXPANDED"] = 2;
                    return values;
                })();
    
                /**
                 * Utf8Validation enum.
                 * @name google.protobuf.FeatureSet.Utf8Validation
                 * @enum {number}
                 * @property {number} UTF8_VALIDATION_UNKNOWN=0 UTF8_VALIDATION_UNKNOWN value
                 * @property {number} VERIFY=2 VERIFY value
                 * @property {number} NONE=3 NONE value
                 */
                FeatureSet.Utf8Validation = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "UTF8_VALIDATION_UNKNOWN"] = 0;
                    values[valuesById[2] = "VERIFY"] = 2;
                    values[valuesById[3] = "NONE"] = 3;
                    return values;
                })();
    
                /**
                 * MessageEncoding enum.
                 * @name google.protobuf.FeatureSet.MessageEncoding
                 * @enum {number}
                 * @property {number} MESSAGE_ENCODING_UNKNOWN=0 MESSAGE_ENCODING_UNKNOWN value
                 * @property {number} LENGTH_PREFIXED=1 LENGTH_PREFIXED value
                 * @property {number} DELIMITED=2 DELIMITED value
                 */
                FeatureSet.MessageEncoding = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "MESSAGE_ENCODING_UNKNOWN"] = 0;
                    values[valuesById[1] = "LENGTH_PREFIXED"] = 1;
                    values[valuesById[2] = "DELIMITED"] = 2;
                    return values;
                })();
    
                /**
                 * JsonFormat enum.
                 * @name google.protobuf.FeatureSet.JsonFormat
                 * @enum {number}
                 * @property {number} JSON_FORMAT_UNKNOWN=0 JSON_FORMAT_UNKNOWN value
                 * @property {number} ALLOW=1 ALLOW value
                 * @property {number} LEGACY_BEST_EFFORT=2 LEGACY_BEST_EFFORT value
                 */
                FeatureSet.JsonFormat = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JSON_FORMAT_UNKNOWN"] = 0;
                    values[valuesById[1] = "ALLOW"] = 1;
                    values[valuesById[2] = "LEGACY_BEST_EFFORT"] = 2;
                    return values;
                })();
    
                return FeatureSet;
            })();
    
            protobuf.FeatureSetDefaults = (function() {
    
                /**
                 * Properties of a FeatureSetDefaults.
                 * @memberof google.protobuf
                 * @interface IFeatureSetDefaults
                 * @property {Array.<google.protobuf.FeatureSetDefaults.IFeatureSetEditionDefault>|null} [defaults] FeatureSetDefaults defaults
                 * @property {google.protobuf.Edition|null} [minimumEdition] FeatureSetDefaults minimumEdition
                 * @property {google.protobuf.Edition|null} [maximumEdition] FeatureSetDefaults maximumEdition
                 */
    
                /**
                 * Constructs a new FeatureSetDefaults.
                 * @memberof google.protobuf
                 * @classdesc Represents a FeatureSetDefaults.
                 * @implements IFeatureSetDefaults
                 * @constructor
                 * @param {google.protobuf.IFeatureSetDefaults=} [properties] Properties to set
                 */
                function FeatureSetDefaults(properties) {
                    this.defaults = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FeatureSetDefaults defaults.
                 * @member {Array.<google.protobuf.FeatureSetDefaults.IFeatureSetEditionDefault>} defaults
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @instance
                 */
                FeatureSetDefaults.prototype.defaults = $util.emptyArray;
    
                /**
                 * FeatureSetDefaults minimumEdition.
                 * @member {google.protobuf.Edition} minimumEdition
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @instance
                 */
                FeatureSetDefaults.prototype.minimumEdition = 0;
    
                /**
                 * FeatureSetDefaults maximumEdition.
                 * @member {google.protobuf.Edition} maximumEdition
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @instance
                 */
                FeatureSetDefaults.prototype.maximumEdition = 0;
    
                /**
                 * Creates a new FeatureSetDefaults instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @static
                 * @param {google.protobuf.IFeatureSetDefaults=} [properties] Properties to set
                 * @returns {google.protobuf.FeatureSetDefaults} FeatureSetDefaults instance
                 */
                FeatureSetDefaults.create = function create(properties) {
                    return new FeatureSetDefaults(properties);
                };
    
                /**
                 * Encodes the specified FeatureSetDefaults message. Does not implicitly {@link google.protobuf.FeatureSetDefaults.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @static
                 * @param {google.protobuf.IFeatureSetDefaults} message FeatureSetDefaults message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FeatureSetDefaults.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.defaults != null && message.defaults.length)
                        for (var i = 0; i < message.defaults.length; ++i)
                            $root.google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.encode(message.defaults[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.minimumEdition != null && Object.hasOwnProperty.call(message, "minimumEdition"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.minimumEdition);
                    if (message.maximumEdition != null && Object.hasOwnProperty.call(message, "maximumEdition"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.maximumEdition);
                    return writer;
                };
    
                /**
                 * Encodes the specified FeatureSetDefaults message, length delimited. Does not implicitly {@link google.protobuf.FeatureSetDefaults.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @static
                 * @param {google.protobuf.IFeatureSetDefaults} message FeatureSetDefaults message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FeatureSetDefaults.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FeatureSetDefaults message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FeatureSetDefaults} FeatureSetDefaults
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FeatureSetDefaults.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FeatureSetDefaults();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.defaults && message.defaults.length))
                                    message.defaults = [];
                                message.defaults.push($root.google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                message.minimumEdition = reader.int32();
                                break;
                            }
                        case 5: {
                                message.maximumEdition = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FeatureSetDefaults message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FeatureSetDefaults} FeatureSetDefaults
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FeatureSetDefaults.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FeatureSetDefaults message.
                 * @function verify
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FeatureSetDefaults.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.defaults != null && message.hasOwnProperty("defaults")) {
                        if (!Array.isArray(message.defaults))
                            return "defaults: array expected";
                        for (var i = 0; i < message.defaults.length; ++i) {
                            var error = $root.google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.verify(message.defaults[i]);
                            if (error)
                                return "defaults." + error;
                        }
                    }
                    if (message.minimumEdition != null && message.hasOwnProperty("minimumEdition"))
                        switch (message.minimumEdition) {
                        default:
                            return "minimumEdition: enum value expected";
                        case 0:
                        case 998:
                        case 999:
                        case 1000:
                        case 1001:
                        case 1:
                        case 2:
                        case 99997:
                        case 99998:
                        case 99999:
                        case 2147483647:
                            break;
                        }
                    if (message.maximumEdition != null && message.hasOwnProperty("maximumEdition"))
                        switch (message.maximumEdition) {
                        default:
                            return "maximumEdition: enum value expected";
                        case 0:
                        case 998:
                        case 999:
                        case 1000:
                        case 1001:
                        case 1:
                        case 2:
                        case 99997:
                        case 99998:
                        case 99999:
                        case 2147483647:
                            break;
                        }
                    return null;
                };
    
                /**
                 * Creates a FeatureSetDefaults message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FeatureSetDefaults} FeatureSetDefaults
                 */
                FeatureSetDefaults.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FeatureSetDefaults)
                        return object;
                    var message = new $root.google.protobuf.FeatureSetDefaults();
                    if (object.defaults) {
                        if (!Array.isArray(object.defaults))
                            throw TypeError(".google.protobuf.FeatureSetDefaults.defaults: array expected");
                        message.defaults = [];
                        for (var i = 0; i < object.defaults.length; ++i) {
                            if (typeof object.defaults[i] !== "object")
                                throw TypeError(".google.protobuf.FeatureSetDefaults.defaults: object expected");
                            message.defaults[i] = $root.google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.fromObject(object.defaults[i]);
                        }
                    }
                    switch (object.minimumEdition) {
                    default:
                        if (typeof object.minimumEdition === "number") {
                            message.minimumEdition = object.minimumEdition;
                            break;
                        }
                        break;
                    case "EDITION_UNKNOWN":
                    case 0:
                        message.minimumEdition = 0;
                        break;
                    case "EDITION_PROTO2":
                    case 998:
                        message.minimumEdition = 998;
                        break;
                    case "EDITION_PROTO3":
                    case 999:
                        message.minimumEdition = 999;
                        break;
                    case "EDITION_2023":
                    case 1000:
                        message.minimumEdition = 1000;
                        break;
                    case "EDITION_2024":
                    case 1001:
                        message.minimumEdition = 1001;
                        break;
                    case "EDITION_1_TEST_ONLY":
                    case 1:
                        message.minimumEdition = 1;
                        break;
                    case "EDITION_2_TEST_ONLY":
                    case 2:
                        message.minimumEdition = 2;
                        break;
                    case "EDITION_99997_TEST_ONLY":
                    case 99997:
                        message.minimumEdition = 99997;
                        break;
                    case "EDITION_99998_TEST_ONLY":
                    case 99998:
                        message.minimumEdition = 99998;
                        break;
                    case "EDITION_99999_TEST_ONLY":
                    case 99999:
                        message.minimumEdition = 99999;
                        break;
                    case "EDITION_MAX":
                    case 2147483647:
                        message.minimumEdition = 2147483647;
                        break;
                    }
                    switch (object.maximumEdition) {
                    default:
                        if (typeof object.maximumEdition === "number") {
                            message.maximumEdition = object.maximumEdition;
                            break;
                        }
                        break;
                    case "EDITION_UNKNOWN":
                    case 0:
                        message.maximumEdition = 0;
                        break;
                    case "EDITION_PROTO2":
                    case 998:
                        message.maximumEdition = 998;
                        break;
                    case "EDITION_PROTO3":
                    case 999:
                        message.maximumEdition = 999;
                        break;
                    case "EDITION_2023":
                    case 1000:
                        message.maximumEdition = 1000;
                        break;
                    case "EDITION_2024":
                    case 1001:
                        message.maximumEdition = 1001;
                        break;
                    case "EDITION_1_TEST_ONLY":
                    case 1:
                        message.maximumEdition = 1;
                        break;
                    case "EDITION_2_TEST_ONLY":
                    case 2:
                        message.maximumEdition = 2;
                        break;
                    case "EDITION_99997_TEST_ONLY":
                    case 99997:
                        message.maximumEdition = 99997;
                        break;
                    case "EDITION_99998_TEST_ONLY":
                    case 99998:
                        message.maximumEdition = 99998;
                        break;
                    case "EDITION_99999_TEST_ONLY":
                    case 99999:
                        message.maximumEdition = 99999;
                        break;
                    case "EDITION_MAX":
                    case 2147483647:
                        message.maximumEdition = 2147483647;
                        break;
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FeatureSetDefaults message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @static
                 * @param {google.protobuf.FeatureSetDefaults} message FeatureSetDefaults
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FeatureSetDefaults.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.defaults = [];
                    if (options.defaults) {
                        object.minimumEdition = options.enums === String ? "EDITION_UNKNOWN" : 0;
                        object.maximumEdition = options.enums === String ? "EDITION_UNKNOWN" : 0;
                    }
                    if (message.defaults && message.defaults.length) {
                        object.defaults = [];
                        for (var j = 0; j < message.defaults.length; ++j)
                            object.defaults[j] = $root.google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.toObject(message.defaults[j], options);
                    }
                    if (message.minimumEdition != null && message.hasOwnProperty("minimumEdition"))
                        object.minimumEdition = options.enums === String ? $root.google.protobuf.Edition[message.minimumEdition] === undefined ? message.minimumEdition : $root.google.protobuf.Edition[message.minimumEdition] : message.minimumEdition;
                    if (message.maximumEdition != null && message.hasOwnProperty("maximumEdition"))
                        object.maximumEdition = options.enums === String ? $root.google.protobuf.Edition[message.maximumEdition] === undefined ? message.maximumEdition : $root.google.protobuf.Edition[message.maximumEdition] : message.maximumEdition;
                    return object;
                };
    
                /**
                 * Converts this FeatureSetDefaults to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FeatureSetDefaults.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FeatureSetDefaults
                 * @function getTypeUrl
                 * @memberof google.protobuf.FeatureSetDefaults
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FeatureSetDefaults.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FeatureSetDefaults";
                };
    
                FeatureSetDefaults.FeatureSetEditionDefault = (function() {
    
                    /**
                     * Properties of a FeatureSetEditionDefault.
                     * @memberof google.protobuf.FeatureSetDefaults
                     * @interface IFeatureSetEditionDefault
                     * @property {google.protobuf.Edition|null} [edition] FeatureSetEditionDefault edition
                     * @property {google.protobuf.IFeatureSet|null} [features] FeatureSetEditionDefault features
                     */
    
                    /**
                     * Constructs a new FeatureSetEditionDefault.
                     * @memberof google.protobuf.FeatureSetDefaults
                     * @classdesc Represents a FeatureSetEditionDefault.
                     * @implements IFeatureSetEditionDefault
                     * @constructor
                     * @param {google.protobuf.FeatureSetDefaults.IFeatureSetEditionDefault=} [properties] Properties to set
                     */
                    function FeatureSetEditionDefault(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * FeatureSetEditionDefault edition.
                     * @member {google.protobuf.Edition} edition
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @instance
                     */
                    FeatureSetEditionDefault.prototype.edition = 0;
    
                    /**
                     * FeatureSetEditionDefault features.
                     * @member {google.protobuf.IFeatureSet|null|undefined} features
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @instance
                     */
                    FeatureSetEditionDefault.prototype.features = null;
    
                    /**
                     * Creates a new FeatureSetEditionDefault instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @static
                     * @param {google.protobuf.FeatureSetDefaults.IFeatureSetEditionDefault=} [properties] Properties to set
                     * @returns {google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault} FeatureSetEditionDefault instance
                     */
                    FeatureSetEditionDefault.create = function create(properties) {
                        return new FeatureSetEditionDefault(properties);
                    };
    
                    /**
                     * Encodes the specified FeatureSetEditionDefault message. Does not implicitly {@link google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @static
                     * @param {google.protobuf.FeatureSetDefaults.IFeatureSetEditionDefault} message FeatureSetEditionDefault message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    FeatureSetEditionDefault.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.features != null && Object.hasOwnProperty.call(message, "features"))
                            $root.google.protobuf.FeatureSet.encode(message.features, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.edition);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified FeatureSetEditionDefault message, length delimited. Does not implicitly {@link google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @static
                     * @param {google.protobuf.FeatureSetDefaults.IFeatureSetEditionDefault} message FeatureSetEditionDefault message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    FeatureSetEditionDefault.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a FeatureSetEditionDefault message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault} FeatureSetEditionDefault
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    FeatureSetEditionDefault.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 3: {
                                    message.edition = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.features = $root.google.protobuf.FeatureSet.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a FeatureSetEditionDefault message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault} FeatureSetEditionDefault
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    FeatureSetEditionDefault.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a FeatureSetEditionDefault message.
                     * @function verify
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    FeatureSetEditionDefault.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.edition != null && message.hasOwnProperty("edition"))
                            switch (message.edition) {
                            default:
                                return "edition: enum value expected";
                            case 0:
                            case 998:
                            case 999:
                            case 1000:
                            case 1001:
                            case 1:
                            case 2:
                            case 99997:
                            case 99998:
                            case 99999:
                            case 2147483647:
                                break;
                            }
                        if (message.features != null && message.hasOwnProperty("features")) {
                            var error = $root.google.protobuf.FeatureSet.verify(message.features);
                            if (error)
                                return "features." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a FeatureSetEditionDefault message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault} FeatureSetEditionDefault
                     */
                    FeatureSetEditionDefault.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault)
                            return object;
                        var message = new $root.google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault();
                        switch (object.edition) {
                        default:
                            if (typeof object.edition === "number") {
                                message.edition = object.edition;
                                break;
                            }
                            break;
                        case "EDITION_UNKNOWN":
                        case 0:
                            message.edition = 0;
                            break;
                        case "EDITION_PROTO2":
                        case 998:
                            message.edition = 998;
                            break;
                        case "EDITION_PROTO3":
                        case 999:
                            message.edition = 999;
                            break;
                        case "EDITION_2023":
                        case 1000:
                            message.edition = 1000;
                            break;
                        case "EDITION_2024":
                        case 1001:
                            message.edition = 1001;
                            break;
                        case "EDITION_1_TEST_ONLY":
                        case 1:
                            message.edition = 1;
                            break;
                        case "EDITION_2_TEST_ONLY":
                        case 2:
                            message.edition = 2;
                            break;
                        case "EDITION_99997_TEST_ONLY":
                        case 99997:
                            message.edition = 99997;
                            break;
                        case "EDITION_99998_TEST_ONLY":
                        case 99998:
                            message.edition = 99998;
                            break;
                        case "EDITION_99999_TEST_ONLY":
                        case 99999:
                            message.edition = 99999;
                            break;
                        case "EDITION_MAX":
                        case 2147483647:
                            message.edition = 2147483647;
                            break;
                        }
                        if (object.features != null) {
                            if (typeof object.features !== "object")
                                throw TypeError(".google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault.features: object expected");
                            message.features = $root.google.protobuf.FeatureSet.fromObject(object.features);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a FeatureSetEditionDefault message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @static
                     * @param {google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault} message FeatureSetEditionDefault
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    FeatureSetEditionDefault.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.features = null;
                            object.edition = options.enums === String ? "EDITION_UNKNOWN" : 0;
                        }
                        if (message.features != null && message.hasOwnProperty("features"))
                            object.features = $root.google.protobuf.FeatureSet.toObject(message.features, options);
                        if (message.edition != null && message.hasOwnProperty("edition"))
                            object.edition = options.enums === String ? $root.google.protobuf.Edition[message.edition] === undefined ? message.edition : $root.google.protobuf.Edition[message.edition] : message.edition;
                        return object;
                    };
    
                    /**
                     * Converts this FeatureSetEditionDefault to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    FeatureSetEditionDefault.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for FeatureSetEditionDefault
                     * @function getTypeUrl
                     * @memberof google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    FeatureSetEditionDefault.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault";
                    };
    
                    return FeatureSetEditionDefault;
                })();
    
                return FeatureSetDefaults;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.location && message.location.length))
                                    message.location = [];
                                message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for SourceCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SourceCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.SourceCodeInfo";
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && Object.hasOwnProperty.call(message, "leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && Object.hasOwnProperty.call(message, "trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    if (!(message.span && message.span.length))
                                        message.span = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.span.push(reader.int32());
                                    } else
                                        message.span.push(reader.int32());
                                    break;
                                }
                            case 3: {
                                    message.leadingComments = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.trailingComments = reader.string();
                                    break;
                                }
                            case 6: {
                                    if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                        message.leadingDetachedComments = [];
                                    message.leadingDetachedComments.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Location
                     * @function getTypeUrl
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.SourceCodeInfo.Location";
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.annotation && message.annotation.length))
                                    message.annotation = [];
                                message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GeneratedCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GeneratedCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo";
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     * @property {google.protobuf.GeneratedCodeInfo.Annotation.Semantic|null} [semantic] Annotation semantic
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Annotation semantic.
                     * @member {google.protobuf.GeneratedCodeInfo.Annotation.Semantic} semantic
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.semantic = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && Object.hasOwnProperty.call(message, "sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        if (message.semantic != null && Object.hasOwnProperty.call(message, "semantic"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.semantic);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    message.sourceFile = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.begin = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 5: {
                                    message.semantic = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            switch (message.semantic) {
                            default:
                                return "semantic: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        switch (object.semantic) {
                        default:
                            if (typeof object.semantic === "number") {
                                message.semantic = object.semantic;
                                break;
                            }
                            break;
                        case "NONE":
                        case 0:
                            message.semantic = 0;
                            break;
                        case "SET":
                        case 1:
                            message.semantic = 1;
                            break;
                        case "ALIAS":
                        case 2:
                            message.semantic = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                            object.semantic = options.enums === String ? "NONE" : 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            object.semantic = options.enums === String ? $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] === undefined ? message.semantic : $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] : message.semantic;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Annotation
                     * @function getTypeUrl
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Annotation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo.Annotation";
                    };
    
                    /**
                     * Semantic enum.
                     * @name google.protobuf.GeneratedCodeInfo.Annotation.Semantic
                     * @enum {number}
                     * @property {number} NONE=0 NONE value
                     * @property {number} SET=1 SET value
                     * @property {number} ALIAS=2 ALIAS value
                     */
                    Annotation.Semantic = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "NONE"] = 0;
                        values[valuesById[1] = "SET"] = 1;
                        values[valuesById[2] = "ALIAS"] = 2;
                        return values;
                    })();
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            protobuf.Timestamp = (function() {
    
                /**
                 * Properties of a Timestamp.
                 * @memberof google.protobuf
                 * @interface ITimestamp
                 * @property {number|Long|null} [seconds] Timestamp seconds
                 * @property {number|null} [nanos] Timestamp nanos
                 */
    
                /**
                 * Constructs a new Timestamp.
                 * @memberof google.protobuf
                 * @classdesc Represents a Timestamp.
                 * @implements ITimestamp
                 * @constructor
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 */
                function Timestamp(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Timestamp seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Timestamp nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.nanos = 0;
    
                /**
                 * Creates a new Timestamp instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 * @returns {google.protobuf.Timestamp} Timestamp instance
                 */
                Timestamp.create = function create(properties) {
                    return new Timestamp(properties);
                };
    
                /**
                 * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Timestamp message.
                 * @function verify
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Timestamp.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Timestamp} Timestamp
                 */
                Timestamp.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Timestamp)
                        return object;
                    var message = new $root.google.protobuf.Timestamp();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.Timestamp} message Timestamp
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Timestamp.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Timestamp to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Timestamp.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Timestamp
                 * @function getTypeUrl
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Timestamp.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Timestamp";
                };
    
                return Timestamp;
            })();
    
            protobuf.Any = (function() {
    
                /**
                 * Properties of an Any.
                 * @memberof google.protobuf
                 * @interface IAny
                 * @property {string|null} [type_url] Any type_url
                 * @property {Uint8Array|null} [value] Any value
                 */
    
                /**
                 * Constructs a new Any.
                 * @memberof google.protobuf
                 * @classdesc Represents an Any.
                 * @implements IAny
                 * @constructor
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 */
                function Any(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Any type_url.
                 * @member {string} type_url
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.type_url = "";
    
                /**
                 * Any value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new Any instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 * @returns {google.protobuf.Any} Any instance
                 */
                Any.create = function create(properties) {
                    return new Any(properties);
                };
    
                /**
                 * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type_url != null && Object.hasOwnProperty.call(message, "type_url"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type_url);
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Any();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type_url = reader.string();
                                break;
                            }
                        case 2: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Any message.
                 * @function verify
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Any.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        if (!$util.isString(message.type_url))
                            return "type_url: string expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates an Any message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Any} Any
                 */
                Any.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Any)
                        return object;
                    var message = new $root.google.protobuf.Any();
                    if (object.type_url != null)
                        message.type_url = String(object.type_url);
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Any message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.Any} message Any
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Any.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type_url = "";
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    }
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        object.type_url = message.type_url;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this Any to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Any
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Any.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Any
                 * @function getTypeUrl
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Any.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Any";
                };
    
                return Any;
            })();
    
            protobuf.DoubleValue = (function() {
    
                /**
                 * Properties of a DoubleValue.
                 * @memberof google.protobuf
                 * @interface IDoubleValue
                 * @property {number|null} [value] DoubleValue value
                 */
    
                /**
                 * Constructs a new DoubleValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a DoubleValue.
                 * @implements IDoubleValue
                 * @constructor
                 * @param {google.protobuf.IDoubleValue=} [properties] Properties to set
                 */
                function DoubleValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DoubleValue value.
                 * @member {number} value
                 * @memberof google.protobuf.DoubleValue
                 * @instance
                 */
                DoubleValue.prototype.value = 0;
    
                /**
                 * Creates a new DoubleValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue=} [properties] Properties to set
                 * @returns {google.protobuf.DoubleValue} DoubleValue instance
                 */
                DoubleValue.create = function create(properties) {
                    return new DoubleValue(properties);
                };
    
                /**
                 * Encodes the specified DoubleValue message. Does not implicitly {@link google.protobuf.DoubleValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue} message DoubleValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DoubleValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 1 =*/9).double(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified DoubleValue message, length delimited. Does not implicitly {@link google.protobuf.DoubleValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue} message DoubleValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DoubleValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DoubleValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DoubleValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DoubleValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.double();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DoubleValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DoubleValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DoubleValue message.
                 * @function verify
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DoubleValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "number")
                            return "value: number expected";
                    return null;
                };
    
                /**
                 * Creates a DoubleValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 */
                DoubleValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DoubleValue)
                        return object;
                    var message = new $root.google.protobuf.DoubleValue();
                    if (object.value != null)
                        message.value = Number(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a DoubleValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.DoubleValue} message DoubleValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DoubleValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this DoubleValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DoubleValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DoubleValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DoubleValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DoubleValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DoubleValue";
                };
    
                return DoubleValue;
            })();
    
            protobuf.FloatValue = (function() {
    
                /**
                 * Properties of a FloatValue.
                 * @memberof google.protobuf
                 * @interface IFloatValue
                 * @property {number|null} [value] FloatValue value
                 */
    
                /**
                 * Constructs a new FloatValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a FloatValue.
                 * @implements IFloatValue
                 * @constructor
                 * @param {google.protobuf.IFloatValue=} [properties] Properties to set
                 */
                function FloatValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FloatValue value.
                 * @member {number} value
                 * @memberof google.protobuf.FloatValue
                 * @instance
                 */
                FloatValue.prototype.value = 0;
    
                /**
                 * Creates a new FloatValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue=} [properties] Properties to set
                 * @returns {google.protobuf.FloatValue} FloatValue instance
                 */
                FloatValue.create = function create(properties) {
                    return new FloatValue(properties);
                };
    
                /**
                 * Encodes the specified FloatValue message. Does not implicitly {@link google.protobuf.FloatValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue} message FloatValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FloatValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 5 =*/13).float(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified FloatValue message, length delimited. Does not implicitly {@link google.protobuf.FloatValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue} message FloatValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FloatValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FloatValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FloatValue} FloatValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FloatValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FloatValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.float();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FloatValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FloatValue} FloatValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FloatValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FloatValue message.
                 * @function verify
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FloatValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "number")
                            return "value: number expected";
                    return null;
                };
    
                /**
                 * Creates a FloatValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FloatValue} FloatValue
                 */
                FloatValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FloatValue)
                        return object;
                    var message = new $root.google.protobuf.FloatValue();
                    if (object.value != null)
                        message.value = Number(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FloatValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.FloatValue} message FloatValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FloatValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this FloatValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FloatValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FloatValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FloatValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FloatValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FloatValue";
                };
    
                return FloatValue;
            })();
    
            protobuf.Int64Value = (function() {
    
                /**
                 * Properties of an Int64Value.
                 * @memberof google.protobuf
                 * @interface IInt64Value
                 * @property {number|Long|null} [value] Int64Value value
                 */
    
                /**
                 * Constructs a new Int64Value.
                 * @memberof google.protobuf
                 * @classdesc Represents an Int64Value.
                 * @implements IInt64Value
                 * @constructor
                 * @param {google.protobuf.IInt64Value=} [properties] Properties to set
                 */
                function Int64Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Int64Value value.
                 * @member {number|Long} value
                 * @memberof google.protobuf.Int64Value
                 * @instance
                 */
                Int64Value.prototype.value = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Creates a new Int64Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value=} [properties] Properties to set
                 * @returns {google.protobuf.Int64Value} Int64Value instance
                 */
                Int64Value.create = function create(properties) {
                    return new Int64Value(properties);
                };
    
                /**
                 * Encodes the specified Int64Value message. Does not implicitly {@link google.protobuf.Int64Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value} message Int64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int64Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Int64Value message, length delimited. Does not implicitly {@link google.protobuf.Int64Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value} message Int64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int64Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Int64Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Int64Value} Int64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int64Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Int64Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.int64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Int64Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Int64Value} Int64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int64Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Int64Value message.
                 * @function verify
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Int64Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high)))
                            return "value: integer|Long expected";
                    return null;
                };
    
                /**
                 * Creates an Int64Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Int64Value} Int64Value
                 */
                Int64Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Int64Value)
                        return object;
                    var message = new $root.google.protobuf.Int64Value();
                    if (object.value != null)
                        if ($util.Long)
                            (message.value = $util.Long.fromValue(object.value)).unsigned = false;
                        else if (typeof object.value === "string")
                            message.value = parseInt(object.value, 10);
                        else if (typeof object.value === "number")
                            message.value = object.value;
                        else if (typeof object.value === "object")
                            message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber();
                    return message;
                };
    
                /**
                 * Creates a plain object from an Int64Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.Int64Value} message Int64Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Int64Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.value = options.longs === String ? "0" : 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value === "number")
                            object.value = options.longs === String ? String(message.value) : message.value;
                        else
                            object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber() : message.value;
                    return object;
                };
    
                /**
                 * Converts this Int64Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Int64Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Int64Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Int64Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Int64Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Int64Value";
                };
    
                return Int64Value;
            })();
    
            protobuf.UInt64Value = (function() {
    
                /**
                 * Properties of a UInt64Value.
                 * @memberof google.protobuf
                 * @interface IUInt64Value
                 * @property {number|Long|null} [value] UInt64Value value
                 */
    
                /**
                 * Constructs a new UInt64Value.
                 * @memberof google.protobuf
                 * @classdesc Represents a UInt64Value.
                 * @implements IUInt64Value
                 * @constructor
                 * @param {google.protobuf.IUInt64Value=} [properties] Properties to set
                 */
                function UInt64Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UInt64Value value.
                 * @member {number|Long} value
                 * @memberof google.protobuf.UInt64Value
                 * @instance
                 */
                UInt64Value.prototype.value = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * Creates a new UInt64Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value=} [properties] Properties to set
                 * @returns {google.protobuf.UInt64Value} UInt64Value instance
                 */
                UInt64Value.create = function create(properties) {
                    return new UInt64Value(properties);
                };
    
                /**
                 * Encodes the specified UInt64Value message. Does not implicitly {@link google.protobuf.UInt64Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value} message UInt64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt64Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified UInt64Value message, length delimited. Does not implicitly {@link google.protobuf.UInt64Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value} message UInt64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt64Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a UInt64Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt64Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UInt64Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.uint64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a UInt64Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt64Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a UInt64Value message.
                 * @function verify
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UInt64Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high)))
                            return "value: integer|Long expected";
                    return null;
                };
    
                /**
                 * Creates a UInt64Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 */
                UInt64Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UInt64Value)
                        return object;
                    var message = new $root.google.protobuf.UInt64Value();
                    if (object.value != null)
                        if ($util.Long)
                            (message.value = $util.Long.fromValue(object.value)).unsigned = true;
                        else if (typeof object.value === "string")
                            message.value = parseInt(object.value, 10);
                        else if (typeof object.value === "number")
                            message.value = object.value;
                        else if (typeof object.value === "object")
                            message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber(true);
                    return message;
                };
    
                /**
                 * Creates a plain object from a UInt64Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.UInt64Value} message UInt64Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UInt64Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.value = options.longs === String ? "0" : 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value === "number")
                            object.value = options.longs === String ? String(message.value) : message.value;
                        else
                            object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber(true) : message.value;
                    return object;
                };
    
                /**
                 * Converts this UInt64Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UInt64Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UInt64Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UInt64Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UInt64Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UInt64Value";
                };
    
                return UInt64Value;
            })();
    
            protobuf.Int32Value = (function() {
    
                /**
                 * Properties of an Int32Value.
                 * @memberof google.protobuf
                 * @interface IInt32Value
                 * @property {number|null} [value] Int32Value value
                 */
    
                /**
                 * Constructs a new Int32Value.
                 * @memberof google.protobuf
                 * @classdesc Represents an Int32Value.
                 * @implements IInt32Value
                 * @constructor
                 * @param {google.protobuf.IInt32Value=} [properties] Properties to set
                 */
                function Int32Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Int32Value value.
                 * @member {number} value
                 * @memberof google.protobuf.Int32Value
                 * @instance
                 */
                Int32Value.prototype.value = 0;
    
                /**
                 * Creates a new Int32Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value=} [properties] Properties to set
                 * @returns {google.protobuf.Int32Value} Int32Value instance
                 */
                Int32Value.create = function create(properties) {
                    return new Int32Value(properties);
                };
    
                /**
                 * Encodes the specified Int32Value message. Does not implicitly {@link google.protobuf.Int32Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value} message Int32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int32Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Int32Value message, length delimited. Does not implicitly {@link google.protobuf.Int32Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value} message Int32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int32Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Int32Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Int32Value} Int32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int32Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Int32Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Int32Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Int32Value} Int32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int32Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Int32Value message.
                 * @function verify
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Int32Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value))
                            return "value: integer expected";
                    return null;
                };
    
                /**
                 * Creates an Int32Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Int32Value} Int32Value
                 */
                Int32Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Int32Value)
                        return object;
                    var message = new $root.google.protobuf.Int32Value();
                    if (object.value != null)
                        message.value = object.value | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Int32Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.Int32Value} message Int32Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Int32Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this Int32Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Int32Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Int32Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Int32Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Int32Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Int32Value";
                };
    
                return Int32Value;
            })();
    
            protobuf.UInt32Value = (function() {
    
                /**
                 * Properties of a UInt32Value.
                 * @memberof google.protobuf
                 * @interface IUInt32Value
                 * @property {number|null} [value] UInt32Value value
                 */
    
                /**
                 * Constructs a new UInt32Value.
                 * @memberof google.protobuf
                 * @classdesc Represents a UInt32Value.
                 * @implements IUInt32Value
                 * @constructor
                 * @param {google.protobuf.IUInt32Value=} [properties] Properties to set
                 */
                function UInt32Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UInt32Value value.
                 * @member {number} value
                 * @memberof google.protobuf.UInt32Value
                 * @instance
                 */
                UInt32Value.prototype.value = 0;
    
                /**
                 * Creates a new UInt32Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value=} [properties] Properties to set
                 * @returns {google.protobuf.UInt32Value} UInt32Value instance
                 */
                UInt32Value.create = function create(properties) {
                    return new UInt32Value(properties);
                };
    
                /**
                 * Encodes the specified UInt32Value message. Does not implicitly {@link google.protobuf.UInt32Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value} message UInt32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt32Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified UInt32Value message, length delimited. Does not implicitly {@link google.protobuf.UInt32Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value} message UInt32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt32Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a UInt32Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt32Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UInt32Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.uint32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a UInt32Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt32Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a UInt32Value message.
                 * @function verify
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UInt32Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value))
                            return "value: integer expected";
                    return null;
                };
    
                /**
                 * Creates a UInt32Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 */
                UInt32Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UInt32Value)
                        return object;
                    var message = new $root.google.protobuf.UInt32Value();
                    if (object.value != null)
                        message.value = object.value >>> 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a UInt32Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.UInt32Value} message UInt32Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UInt32Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this UInt32Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UInt32Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UInt32Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UInt32Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UInt32Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UInt32Value";
                };
    
                return UInt32Value;
            })();
    
            protobuf.BoolValue = (function() {
    
                /**
                 * Properties of a BoolValue.
                 * @memberof google.protobuf
                 * @interface IBoolValue
                 * @property {boolean|null} [value] BoolValue value
                 */
    
                /**
                 * Constructs a new BoolValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a BoolValue.
                 * @implements IBoolValue
                 * @constructor
                 * @param {google.protobuf.IBoolValue=} [properties] Properties to set
                 */
                function BoolValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * BoolValue value.
                 * @member {boolean} value
                 * @memberof google.protobuf.BoolValue
                 * @instance
                 */
                BoolValue.prototype.value = false;
    
                /**
                 * Creates a new BoolValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue=} [properties] Properties to set
                 * @returns {google.protobuf.BoolValue} BoolValue instance
                 */
                BoolValue.create = function create(properties) {
                    return new BoolValue(properties);
                };
    
                /**
                 * Encodes the specified BoolValue message. Does not implicitly {@link google.protobuf.BoolValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue} message BoolValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BoolValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified BoolValue message, length delimited. Does not implicitly {@link google.protobuf.BoolValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue} message BoolValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BoolValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a BoolValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.BoolValue} BoolValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BoolValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.BoolValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a BoolValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.BoolValue} BoolValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BoolValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a BoolValue message.
                 * @function verify
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                BoolValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "boolean")
                            return "value: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a BoolValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.BoolValue} BoolValue
                 */
                BoolValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.BoolValue)
                        return object;
                    var message = new $root.google.protobuf.BoolValue();
                    if (object.value != null)
                        message.value = Boolean(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a BoolValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.BoolValue} message BoolValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                BoolValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = false;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this BoolValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.BoolValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                BoolValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for BoolValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                BoolValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.BoolValue";
                };
    
                return BoolValue;
            })();
    
            protobuf.StringValue = (function() {
    
                /**
                 * Properties of a StringValue.
                 * @memberof google.protobuf
                 * @interface IStringValue
                 * @property {string|null} [value] StringValue value
                 */
    
                /**
                 * Constructs a new StringValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a StringValue.
                 * @implements IStringValue
                 * @constructor
                 * @param {google.protobuf.IStringValue=} [properties] Properties to set
                 */
                function StringValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * StringValue value.
                 * @member {string} value
                 * @memberof google.protobuf.StringValue
                 * @instance
                 */
                StringValue.prototype.value = "";
    
                /**
                 * Creates a new StringValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue=} [properties] Properties to set
                 * @returns {google.protobuf.StringValue} StringValue instance
                 */
                StringValue.create = function create(properties) {
                    return new StringValue(properties);
                };
    
                /**
                 * Encodes the specified StringValue message. Does not implicitly {@link google.protobuf.StringValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue} message StringValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                StringValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified StringValue message, length delimited. Does not implicitly {@link google.protobuf.StringValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue} message StringValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                StringValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a StringValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.StringValue} StringValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                StringValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.StringValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a StringValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.StringValue} StringValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                StringValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a StringValue message.
                 * @function verify
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                StringValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isString(message.value))
                            return "value: string expected";
                    return null;
                };
    
                /**
                 * Creates a StringValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.StringValue} StringValue
                 */
                StringValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.StringValue)
                        return object;
                    var message = new $root.google.protobuf.StringValue();
                    if (object.value != null)
                        message.value = String(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a StringValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.StringValue} message StringValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                StringValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = "";
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this StringValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.StringValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                StringValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for StringValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                StringValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.StringValue";
                };
    
                return StringValue;
            })();
    
            protobuf.BytesValue = (function() {
    
                /**
                 * Properties of a BytesValue.
                 * @memberof google.protobuf
                 * @interface IBytesValue
                 * @property {Uint8Array|null} [value] BytesValue value
                 */
    
                /**
                 * Constructs a new BytesValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a BytesValue.
                 * @implements IBytesValue
                 * @constructor
                 * @param {google.protobuf.IBytesValue=} [properties] Properties to set
                 */
                function BytesValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * BytesValue value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.BytesValue
                 * @instance
                 */
                BytesValue.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new BytesValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue=} [properties] Properties to set
                 * @returns {google.protobuf.BytesValue} BytesValue instance
                 */
                BytesValue.create = function create(properties) {
                    return new BytesValue(properties);
                };
    
                /**
                 * Encodes the specified BytesValue message. Does not implicitly {@link google.protobuf.BytesValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue} message BytesValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BytesValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified BytesValue message, length delimited. Does not implicitly {@link google.protobuf.BytesValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue} message BytesValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BytesValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a BytesValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.BytesValue} BytesValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BytesValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.BytesValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a BytesValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.BytesValue} BytesValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BytesValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a BytesValue message.
                 * @function verify
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                BytesValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates a BytesValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.BytesValue} BytesValue
                 */
                BytesValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.BytesValue)
                        return object;
                    var message = new $root.google.protobuf.BytesValue();
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from a BytesValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.BytesValue} message BytesValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                BytesValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this BytesValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.BytesValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                BytesValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for BytesValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                BytesValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.BytesValue";
                };
    
                return BytesValue;
            })();
    
            protobuf.Duration = (function() {
    
                /**
                 * Properties of a Duration.
                 * @memberof google.protobuf
                 * @interface IDuration
                 * @property {number|Long|null} [seconds] Duration seconds
                 * @property {number|null} [nanos] Duration nanos
                 */
    
                /**
                 * Constructs a new Duration.
                 * @memberof google.protobuf
                 * @classdesc Represents a Duration.
                 * @implements IDuration
                 * @constructor
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 */
                function Duration(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Duration seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Duration nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.nanos = 0;
    
                /**
                 * Creates a new Duration instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 * @returns {google.protobuf.Duration} Duration instance
                 */
                Duration.create = function create(properties) {
                    return new Duration(properties);
                };
    
                /**
                 * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Duration();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Duration message.
                 * @function verify
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Duration.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Duration message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Duration} Duration
                 */
                Duration.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Duration)
                        return object;
                    var message = new $root.google.protobuf.Duration();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Duration message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.Duration} message Duration
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Duration.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Duration to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Duration
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Duration.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Duration
                 * @function getTypeUrl
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Duration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Duration";
                };
    
                return Duration;
            })();
    
            protobuf.FieldMask = (function() {
    
                /**
                 * Properties of a FieldMask.
                 * @memberof google.protobuf
                 * @interface IFieldMask
                 * @property {Array.<string>|null} [paths] FieldMask paths
                 */
    
                /**
                 * Constructs a new FieldMask.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldMask.
                 * @implements IFieldMask
                 * @constructor
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 */
                function FieldMask(properties) {
                    this.paths = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldMask paths.
                 * @member {Array.<string>} paths
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 */
                FieldMask.prototype.paths = $util.emptyArray;
    
                /**
                 * Creates a new FieldMask instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 * @returns {google.protobuf.FieldMask} FieldMask instance
                 */
                FieldMask.create = function create(properties) {
                    return new FieldMask(properties);
                };
    
                /**
                 * Encodes the specified FieldMask message. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.paths != null && message.paths.length)
                        for (var i = 0; i < message.paths.length; ++i)
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.paths[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldMask message, length delimited. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldMask();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.paths && message.paths.length))
                                    message.paths = [];
                                message.paths.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldMask message.
                 * @function verify
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldMask.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.paths != null && message.hasOwnProperty("paths")) {
                        if (!Array.isArray(message.paths))
                            return "paths: array expected";
                        for (var i = 0; i < message.paths.length; ++i)
                            if (!$util.isString(message.paths[i]))
                                return "paths: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldMask message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldMask} FieldMask
                 */
                FieldMask.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldMask)
                        return object;
                    var message = new $root.google.protobuf.FieldMask();
                    if (object.paths) {
                        if (!Array.isArray(object.paths))
                            throw TypeError(".google.protobuf.FieldMask.paths: array expected");
                        message.paths = [];
                        for (var i = 0; i < object.paths.length; ++i)
                            message.paths[i] = String(object.paths[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldMask message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.FieldMask} message FieldMask
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldMask.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.paths = [];
                    if (message.paths && message.paths.length) {
                        object.paths = [];
                        for (var j = 0; j < message.paths.length; ++j)
                            object.paths[j] = message.paths[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this FieldMask to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldMask.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldMask
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldMask.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldMask";
                };
    
                return FieldMask;
            })();
    
            protobuf.Empty = (function() {
    
                /**
                 * Properties of an Empty.
                 * @memberof google.protobuf
                 * @interface IEmpty
                 */
    
                /**
                 * Constructs a new Empty.
                 * @memberof google.protobuf
                 * @classdesc Represents an Empty.
                 * @implements IEmpty
                 * @constructor
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 */
                function Empty(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Creates a new Empty instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 * @returns {google.protobuf.Empty} Empty instance
                 */
                Empty.create = function create(properties) {
                    return new Empty(properties);
                };
    
                /**
                 * Encodes the specified Empty message. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };
    
                /**
                 * Encodes the specified Empty message, length delimited. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Empty();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Empty message.
                 * @function verify
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Empty.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };
    
                /**
                 * Creates an Empty message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Empty} Empty
                 */
                Empty.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Empty)
                        return object;
                    return new $root.google.protobuf.Empty();
                };
    
                /**
                 * Creates a plain object from an Empty message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.Empty} message Empty
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Empty.toObject = function toObject() {
                    return {};
                };
    
                /**
                 * Converts this Empty to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Empty
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Empty.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Empty
                 * @function getTypeUrl
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Empty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Empty";
                };
    
                return Empty;
            })();
    
            return protobuf;
        })();
    
        google.rpc = (function() {
    
            /**
             * Namespace rpc.
             * @memberof google
             * @namespace
             */
            var rpc = {};
    
            rpc.Status = (function() {
    
                /**
                 * Properties of a Status.
                 * @memberof google.rpc
                 * @interface IStatus
                 * @property {number|null} [code] Status code
                 * @property {string|null} [message] Status message
                 * @property {Array.<google.protobuf.IAny>|null} [details] Status details
                 */
    
                /**
                 * Constructs a new Status.
                 * @memberof google.rpc
                 * @classdesc Represents a Status.
                 * @implements IStatus
                 * @constructor
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 */
                function Status(properties) {
                    this.details = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Status code.
                 * @member {number} code
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.code = 0;
    
                /**
                 * Status message.
                 * @member {string} message
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.message = "";
    
                /**
                 * Status details.
                 * @member {Array.<google.protobuf.IAny>} details
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.details = $util.emptyArray;
    
                /**
                 * Creates a new Status instance using the specified properties.
                 * @function create
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 * @returns {google.rpc.Status} Status instance
                 */
                Status.create = function create(properties) {
                    return new Status(properties);
                };
    
                /**
                 * Encodes the specified Status message. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                    if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                    if (message.details != null && message.details.length)
                        for (var i = 0; i < message.details.length; ++i)
                            $root.google.protobuf.Any.encode(message.details[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Status message, length delimited. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.rpc.Status();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.code = reader.int32();
                                break;
                            }
                        case 2: {
                                message.message = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.details && message.details.length))
                                    message.details = [];
                                message.details.push($root.google.protobuf.Any.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Status message.
                 * @function verify
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Status.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.code != null && message.hasOwnProperty("code"))
                        if (!$util.isInteger(message.code))
                            return "code: integer expected";
                    if (message.message != null && message.hasOwnProperty("message"))
                        if (!$util.isString(message.message))
                            return "message: string expected";
                    if (message.details != null && message.hasOwnProperty("details")) {
                        if (!Array.isArray(message.details))
                            return "details: array expected";
                        for (var i = 0; i < message.details.length; ++i) {
                            var error = $root.google.protobuf.Any.verify(message.details[i]);
                            if (error)
                                return "details." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Status message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.rpc.Status} Status
                 */
                Status.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.rpc.Status)
                        return object;
                    var message = new $root.google.rpc.Status();
                    if (object.code != null)
                        message.code = object.code | 0;
                    if (object.message != null)
                        message.message = String(object.message);
                    if (object.details) {
                        if (!Array.isArray(object.details))
                            throw TypeError(".google.rpc.Status.details: array expected");
                        message.details = [];
                        for (var i = 0; i < object.details.length; ++i) {
                            if (typeof object.details[i] !== "object")
                                throw TypeError(".google.rpc.Status.details: object expected");
                            message.details[i] = $root.google.protobuf.Any.fromObject(object.details[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Status message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.Status} message Status
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Status.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.details = [];
                    if (options.defaults) {
                        object.code = 0;
                        object.message = "";
                    }
                    if (message.code != null && message.hasOwnProperty("code"))
                        object.code = message.code;
                    if (message.message != null && message.hasOwnProperty("message"))
                        object.message = message.message;
                    if (message.details && message.details.length) {
                        object.details = [];
                        for (var j = 0; j < message.details.length; ++j)
                            object.details[j] = $root.google.protobuf.Any.toObject(message.details[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Status to JSON.
                 * @function toJSON
                 * @memberof google.rpc.Status
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Status.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Status
                 * @function getTypeUrl
                 * @memberof google.rpc.Status
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Status.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.rpc.Status";
                };
    
                return Status;
            })();
    
            return rpc;
        })();
    
        google.type = (function() {
    
            /**
             * Namespace type.
             * @memberof google
             * @namespace
             */
            var type = {};
    
            type.Color = (function() {
    
                /**
                 * Properties of a Color.
                 * @memberof google.type
                 * @interface IColor
                 * @property {number|null} [red] Color red
                 * @property {number|null} [green] Color green
                 * @property {number|null} [blue] Color blue
                 * @property {google.protobuf.IFloatValue|null} [alpha] Color alpha
                 */
    
                /**
                 * Constructs a new Color.
                 * @memberof google.type
                 * @classdesc Represents a Color.
                 * @implements IColor
                 * @constructor
                 * @param {google.type.IColor=} [properties] Properties to set
                 */
                function Color(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Color red.
                 * @member {number} red
                 * @memberof google.type.Color
                 * @instance
                 */
                Color.prototype.red = 0;
    
                /**
                 * Color green.
                 * @member {number} green
                 * @memberof google.type.Color
                 * @instance
                 */
                Color.prototype.green = 0;
    
                /**
                 * Color blue.
                 * @member {number} blue
                 * @memberof google.type.Color
                 * @instance
                 */
                Color.prototype.blue = 0;
    
                /**
                 * Color alpha.
                 * @member {google.protobuf.IFloatValue|null|undefined} alpha
                 * @memberof google.type.Color
                 * @instance
                 */
                Color.prototype.alpha = null;
    
                /**
                 * Creates a new Color instance using the specified properties.
                 * @function create
                 * @memberof google.type.Color
                 * @static
                 * @param {google.type.IColor=} [properties] Properties to set
                 * @returns {google.type.Color} Color instance
                 */
                Color.create = function create(properties) {
                    return new Color(properties);
                };
    
                /**
                 * Encodes the specified Color message. Does not implicitly {@link google.type.Color.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.Color
                 * @static
                 * @param {google.type.IColor} message Color message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Color.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.red != null && Object.hasOwnProperty.call(message, "red"))
                        writer.uint32(/* id 1, wireType 5 =*/13).float(message.red);
                    if (message.green != null && Object.hasOwnProperty.call(message, "green"))
                        writer.uint32(/* id 2, wireType 5 =*/21).float(message.green);
                    if (message.blue != null && Object.hasOwnProperty.call(message, "blue"))
                        writer.uint32(/* id 3, wireType 5 =*/29).float(message.blue);
                    if (message.alpha != null && Object.hasOwnProperty.call(message, "alpha"))
                        $root.google.protobuf.FloatValue.encode(message.alpha, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Color message, length delimited. Does not implicitly {@link google.type.Color.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.Color
                 * @static
                 * @param {google.type.IColor} message Color message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Color.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Color message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.Color
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.Color} Color
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Color.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.Color();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.red = reader.float();
                                break;
                            }
                        case 2: {
                                message.green = reader.float();
                                break;
                            }
                        case 3: {
                                message.blue = reader.float();
                                break;
                            }
                        case 4: {
                                message.alpha = $root.google.protobuf.FloatValue.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Color message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.Color
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.Color} Color
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Color.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Color message.
                 * @function verify
                 * @memberof google.type.Color
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Color.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.red != null && message.hasOwnProperty("red"))
                        if (typeof message.red !== "number")
                            return "red: number expected";
                    if (message.green != null && message.hasOwnProperty("green"))
                        if (typeof message.green !== "number")
                            return "green: number expected";
                    if (message.blue != null && message.hasOwnProperty("blue"))
                        if (typeof message.blue !== "number")
                            return "blue: number expected";
                    if (message.alpha != null && message.hasOwnProperty("alpha")) {
                        var error = $root.google.protobuf.FloatValue.verify(message.alpha);
                        if (error)
                            return "alpha." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a Color message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.Color
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.Color} Color
                 */
                Color.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.Color)
                        return object;
                    var message = new $root.google.type.Color();
                    if (object.red != null)
                        message.red = Number(object.red);
                    if (object.green != null)
                        message.green = Number(object.green);
                    if (object.blue != null)
                        message.blue = Number(object.blue);
                    if (object.alpha != null) {
                        if (typeof object.alpha !== "object")
                            throw TypeError(".google.type.Color.alpha: object expected");
                        message.alpha = $root.google.protobuf.FloatValue.fromObject(object.alpha);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Color message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.Color
                 * @static
                 * @param {google.type.Color} message Color
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Color.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.red = 0;
                        object.green = 0;
                        object.blue = 0;
                        object.alpha = null;
                    }
                    if (message.red != null && message.hasOwnProperty("red"))
                        object.red = options.json && !isFinite(message.red) ? String(message.red) : message.red;
                    if (message.green != null && message.hasOwnProperty("green"))
                        object.green = options.json && !isFinite(message.green) ? String(message.green) : message.green;
                    if (message.blue != null && message.hasOwnProperty("blue"))
                        object.blue = options.json && !isFinite(message.blue) ? String(message.blue) : message.blue;
                    if (message.alpha != null && message.hasOwnProperty("alpha"))
                        object.alpha = $root.google.protobuf.FloatValue.toObject(message.alpha, options);
                    return object;
                };
    
                /**
                 * Converts this Color to JSON.
                 * @function toJSON
                 * @memberof google.type.Color
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Color.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Color
                 * @function getTypeUrl
                 * @memberof google.type.Color
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Color.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.Color";
                };
    
                return Color;
            })();
    
            type.Date = (function() {
    
                /**
                 * Properties of a Date.
                 * @memberof google.type
                 * @interface IDate
                 * @property {number|null} [year] Date year
                 * @property {number|null} [month] Date month
                 * @property {number|null} [day] Date day
                 */
    
                /**
                 * Constructs a new Date.
                 * @memberof google.type
                 * @classdesc Represents a Date.
                 * @implements IDate
                 * @constructor
                 * @param {google.type.IDate=} [properties] Properties to set
                 */
                function Date(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Date year.
                 * @member {number} year
                 * @memberof google.type.Date
                 * @instance
                 */
                Date.prototype.year = 0;
    
                /**
                 * Date month.
                 * @member {number} month
                 * @memberof google.type.Date
                 * @instance
                 */
                Date.prototype.month = 0;
    
                /**
                 * Date day.
                 * @member {number} day
                 * @memberof google.type.Date
                 * @instance
                 */
                Date.prototype.day = 0;
    
                /**
                 * Creates a new Date instance using the specified properties.
                 * @function create
                 * @memberof google.type.Date
                 * @static
                 * @param {google.type.IDate=} [properties] Properties to set
                 * @returns {google.type.Date} Date instance
                 */
                Date.create = function create(properties) {
                    return new Date(properties);
                };
    
                /**
                 * Encodes the specified Date message. Does not implicitly {@link google.type.Date.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.Date
                 * @static
                 * @param {google.type.IDate} message Date message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Date.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.year != null && Object.hasOwnProperty.call(message, "year"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.year);
                    if (message.month != null && Object.hasOwnProperty.call(message, "month"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.month);
                    if (message.day != null && Object.hasOwnProperty.call(message, "day"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.day);
                    return writer;
                };
    
                /**
                 * Encodes the specified Date message, length delimited. Does not implicitly {@link google.type.Date.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.Date
                 * @static
                 * @param {google.type.IDate} message Date message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Date.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Date message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.Date
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.Date} Date
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Date.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.Date();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.year = reader.int32();
                                break;
                            }
                        case 2: {
                                message.month = reader.int32();
                                break;
                            }
                        case 3: {
                                message.day = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Date message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.Date
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.Date} Date
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Date.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Date message.
                 * @function verify
                 * @memberof google.type.Date
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Date.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.year != null && message.hasOwnProperty("year"))
                        if (!$util.isInteger(message.year))
                            return "year: integer expected";
                    if (message.month != null && message.hasOwnProperty("month"))
                        if (!$util.isInteger(message.month))
                            return "month: integer expected";
                    if (message.day != null && message.hasOwnProperty("day"))
                        if (!$util.isInteger(message.day))
                            return "day: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Date message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.Date
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.Date} Date
                 */
                Date.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.Date)
                        return object;
                    var message = new $root.google.type.Date();
                    if (object.year != null)
                        message.year = object.year | 0;
                    if (object.month != null)
                        message.month = object.month | 0;
                    if (object.day != null)
                        message.day = object.day | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Date message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.Date
                 * @static
                 * @param {google.type.Date} message Date
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Date.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.year = 0;
                        object.month = 0;
                        object.day = 0;
                    }
                    if (message.year != null && message.hasOwnProperty("year"))
                        object.year = message.year;
                    if (message.month != null && message.hasOwnProperty("month"))
                        object.month = message.month;
                    if (message.day != null && message.hasOwnProperty("day"))
                        object.day = message.day;
                    return object;
                };
    
                /**
                 * Converts this Date to JSON.
                 * @function toJSON
                 * @memberof google.type.Date
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Date.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Date
                 * @function getTypeUrl
                 * @memberof google.type.Date
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Date.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.Date";
                };
    
                return Date;
            })();
    
            type.DateTime = (function() {
    
                /**
                 * Properties of a DateTime.
                 * @memberof google.type
                 * @interface IDateTime
                 * @property {number|null} [year] DateTime year
                 * @property {number|null} [month] DateTime month
                 * @property {number|null} [day] DateTime day
                 * @property {number|null} [hours] DateTime hours
                 * @property {number|null} [minutes] DateTime minutes
                 * @property {number|null} [seconds] DateTime seconds
                 * @property {number|null} [nanos] DateTime nanos
                 * @property {google.protobuf.IDuration|null} [utcOffset] DateTime utcOffset
                 * @property {google.type.ITimeZone|null} [timeZone] DateTime timeZone
                 */
    
                /**
                 * Constructs a new DateTime.
                 * @memberof google.type
                 * @classdesc Represents a DateTime.
                 * @implements IDateTime
                 * @constructor
                 * @param {google.type.IDateTime=} [properties] Properties to set
                 */
                function DateTime(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DateTime year.
                 * @member {number} year
                 * @memberof google.type.DateTime
                 * @instance
                 */
                DateTime.prototype.year = 0;
    
                /**
                 * DateTime month.
                 * @member {number} month
                 * @memberof google.type.DateTime
                 * @instance
                 */
                DateTime.prototype.month = 0;
    
                /**
                 * DateTime day.
                 * @member {number} day
                 * @memberof google.type.DateTime
                 * @instance
                 */
                DateTime.prototype.day = 0;
    
                /**
                 * DateTime hours.
                 * @member {number} hours
                 * @memberof google.type.DateTime
                 * @instance
                 */
                DateTime.prototype.hours = 0;
    
                /**
                 * DateTime minutes.
                 * @member {number} minutes
                 * @memberof google.type.DateTime
                 * @instance
                 */
                DateTime.prototype.minutes = 0;
    
                /**
                 * DateTime seconds.
                 * @member {number} seconds
                 * @memberof google.type.DateTime
                 * @instance
                 */
                DateTime.prototype.seconds = 0;
    
                /**
                 * DateTime nanos.
                 * @member {number} nanos
                 * @memberof google.type.DateTime
                 * @instance
                 */
                DateTime.prototype.nanos = 0;
    
                /**
                 * DateTime utcOffset.
                 * @member {google.protobuf.IDuration|null|undefined} utcOffset
                 * @memberof google.type.DateTime
                 * @instance
                 */
                DateTime.prototype.utcOffset = null;
    
                /**
                 * DateTime timeZone.
                 * @member {google.type.ITimeZone|null|undefined} timeZone
                 * @memberof google.type.DateTime
                 * @instance
                 */
                DateTime.prototype.timeZone = null;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * DateTime timeOffset.
                 * @member {"utcOffset"|"timeZone"|undefined} timeOffset
                 * @memberof google.type.DateTime
                 * @instance
                 */
                Object.defineProperty(DateTime.prototype, "timeOffset", {
                    get: $util.oneOfGetter($oneOfFields = ["utcOffset", "timeZone"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new DateTime instance using the specified properties.
                 * @function create
                 * @memberof google.type.DateTime
                 * @static
                 * @param {google.type.IDateTime=} [properties] Properties to set
                 * @returns {google.type.DateTime} DateTime instance
                 */
                DateTime.create = function create(properties) {
                    return new DateTime(properties);
                };
    
                /**
                 * Encodes the specified DateTime message. Does not implicitly {@link google.type.DateTime.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.DateTime
                 * @static
                 * @param {google.type.IDateTime} message DateTime message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DateTime.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.year != null && Object.hasOwnProperty.call(message, "year"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.year);
                    if (message.month != null && Object.hasOwnProperty.call(message, "month"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.month);
                    if (message.day != null && Object.hasOwnProperty.call(message, "day"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.day);
                    if (message.hours != null && Object.hasOwnProperty.call(message, "hours"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.hours);
                    if (message.minutes != null && Object.hasOwnProperty.call(message, "minutes"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.minutes);
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 7, wireType 0 =*/56).int32(message.nanos);
                    if (message.utcOffset != null && Object.hasOwnProperty.call(message, "utcOffset"))
                        $root.google.protobuf.Duration.encode(message.utcOffset, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.timeZone != null && Object.hasOwnProperty.call(message, "timeZone"))
                        $root.google.type.TimeZone.encode(message.timeZone, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified DateTime message, length delimited. Does not implicitly {@link google.type.DateTime.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.DateTime
                 * @static
                 * @param {google.type.IDateTime} message DateTime message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DateTime.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DateTime message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.DateTime
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.DateTime} DateTime
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DateTime.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.DateTime();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.year = reader.int32();
                                break;
                            }
                        case 2: {
                                message.month = reader.int32();
                                break;
                            }
                        case 3: {
                                message.day = reader.int32();
                                break;
                            }
                        case 4: {
                                message.hours = reader.int32();
                                break;
                            }
                        case 5: {
                                message.minutes = reader.int32();
                                break;
                            }
                        case 6: {
                                message.seconds = reader.int32();
                                break;
                            }
                        case 7: {
                                message.nanos = reader.int32();
                                break;
                            }
                        case 8: {
                                message.utcOffset = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.timeZone = $root.google.type.TimeZone.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DateTime message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.DateTime
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.DateTime} DateTime
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DateTime.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DateTime message.
                 * @function verify
                 * @memberof google.type.DateTime
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DateTime.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.year != null && message.hasOwnProperty("year"))
                        if (!$util.isInteger(message.year))
                            return "year: integer expected";
                    if (message.month != null && message.hasOwnProperty("month"))
                        if (!$util.isInteger(message.month))
                            return "month: integer expected";
                    if (message.day != null && message.hasOwnProperty("day"))
                        if (!$util.isInteger(message.day))
                            return "day: integer expected";
                    if (message.hours != null && message.hasOwnProperty("hours"))
                        if (!$util.isInteger(message.hours))
                            return "hours: integer expected";
                    if (message.minutes != null && message.hasOwnProperty("minutes"))
                        if (!$util.isInteger(message.minutes))
                            return "minutes: integer expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds))
                            return "seconds: integer expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    if (message.utcOffset != null && message.hasOwnProperty("utcOffset")) {
                        properties.timeOffset = 1;
                        {
                            var error = $root.google.protobuf.Duration.verify(message.utcOffset);
                            if (error)
                                return "utcOffset." + error;
                        }
                    }
                    if (message.timeZone != null && message.hasOwnProperty("timeZone")) {
                        if (properties.timeOffset === 1)
                            return "timeOffset: multiple values";
                        properties.timeOffset = 1;
                        {
                            var error = $root.google.type.TimeZone.verify(message.timeZone);
                            if (error)
                                return "timeZone." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a DateTime message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.DateTime
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.DateTime} DateTime
                 */
                DateTime.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.DateTime)
                        return object;
                    var message = new $root.google.type.DateTime();
                    if (object.year != null)
                        message.year = object.year | 0;
                    if (object.month != null)
                        message.month = object.month | 0;
                    if (object.day != null)
                        message.day = object.day | 0;
                    if (object.hours != null)
                        message.hours = object.hours | 0;
                    if (object.minutes != null)
                        message.minutes = object.minutes | 0;
                    if (object.seconds != null)
                        message.seconds = object.seconds | 0;
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    if (object.utcOffset != null) {
                        if (typeof object.utcOffset !== "object")
                            throw TypeError(".google.type.DateTime.utcOffset: object expected");
                        message.utcOffset = $root.google.protobuf.Duration.fromObject(object.utcOffset);
                    }
                    if (object.timeZone != null) {
                        if (typeof object.timeZone !== "object")
                            throw TypeError(".google.type.DateTime.timeZone: object expected");
                        message.timeZone = $root.google.type.TimeZone.fromObject(object.timeZone);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DateTime message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.DateTime
                 * @static
                 * @param {google.type.DateTime} message DateTime
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DateTime.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.year = 0;
                        object.month = 0;
                        object.day = 0;
                        object.hours = 0;
                        object.minutes = 0;
                        object.seconds = 0;
                        object.nanos = 0;
                    }
                    if (message.year != null && message.hasOwnProperty("year"))
                        object.year = message.year;
                    if (message.month != null && message.hasOwnProperty("month"))
                        object.month = message.month;
                    if (message.day != null && message.hasOwnProperty("day"))
                        object.day = message.day;
                    if (message.hours != null && message.hasOwnProperty("hours"))
                        object.hours = message.hours;
                    if (message.minutes != null && message.hasOwnProperty("minutes"))
                        object.minutes = message.minutes;
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        object.seconds = message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    if (message.utcOffset != null && message.hasOwnProperty("utcOffset")) {
                        object.utcOffset = $root.google.protobuf.Duration.toObject(message.utcOffset, options);
                        if (options.oneofs)
                            object.timeOffset = "utcOffset";
                    }
                    if (message.timeZone != null && message.hasOwnProperty("timeZone")) {
                        object.timeZone = $root.google.type.TimeZone.toObject(message.timeZone, options);
                        if (options.oneofs)
                            object.timeOffset = "timeZone";
                    }
                    return object;
                };
    
                /**
                 * Converts this DateTime to JSON.
                 * @function toJSON
                 * @memberof google.type.DateTime
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DateTime.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DateTime
                 * @function getTypeUrl
                 * @memberof google.type.DateTime
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DateTime.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.DateTime";
                };
    
                return DateTime;
            })();
    
            type.TimeZone = (function() {
    
                /**
                 * Properties of a TimeZone.
                 * @memberof google.type
                 * @interface ITimeZone
                 * @property {string|null} [id] TimeZone id
                 * @property {string|null} [version] TimeZone version
                 */
    
                /**
                 * Constructs a new TimeZone.
                 * @memberof google.type
                 * @classdesc Represents a TimeZone.
                 * @implements ITimeZone
                 * @constructor
                 * @param {google.type.ITimeZone=} [properties] Properties to set
                 */
                function TimeZone(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * TimeZone id.
                 * @member {string} id
                 * @memberof google.type.TimeZone
                 * @instance
                 */
                TimeZone.prototype.id = "";
    
                /**
                 * TimeZone version.
                 * @member {string} version
                 * @memberof google.type.TimeZone
                 * @instance
                 */
                TimeZone.prototype.version = "";
    
                /**
                 * Creates a new TimeZone instance using the specified properties.
                 * @function create
                 * @memberof google.type.TimeZone
                 * @static
                 * @param {google.type.ITimeZone=} [properties] Properties to set
                 * @returns {google.type.TimeZone} TimeZone instance
                 */
                TimeZone.create = function create(properties) {
                    return new TimeZone(properties);
                };
    
                /**
                 * Encodes the specified TimeZone message. Does not implicitly {@link google.type.TimeZone.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.TimeZone
                 * @static
                 * @param {google.type.ITimeZone} message TimeZone message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                TimeZone.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);
                    if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.version);
                    return writer;
                };
    
                /**
                 * Encodes the specified TimeZone message, length delimited. Does not implicitly {@link google.type.TimeZone.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.TimeZone
                 * @static
                 * @param {google.type.ITimeZone} message TimeZone message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                TimeZone.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a TimeZone message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.TimeZone
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.TimeZone} TimeZone
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                TimeZone.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.TimeZone();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.id = reader.string();
                                break;
                            }
                        case 2: {
                                message.version = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a TimeZone message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.TimeZone
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.TimeZone} TimeZone
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                TimeZone.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a TimeZone message.
                 * @function verify
                 * @memberof google.type.TimeZone
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                TimeZone.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.id != null && message.hasOwnProperty("id"))
                        if (!$util.isString(message.id))
                            return "id: string expected";
                    if (message.version != null && message.hasOwnProperty("version"))
                        if (!$util.isString(message.version))
                            return "version: string expected";
                    return null;
                };
    
                /**
                 * Creates a TimeZone message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.TimeZone
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.TimeZone} TimeZone
                 */
                TimeZone.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.TimeZone)
                        return object;
                    var message = new $root.google.type.TimeZone();
                    if (object.id != null)
                        message.id = String(object.id);
                    if (object.version != null)
                        message.version = String(object.version);
                    return message;
                };
    
                /**
                 * Creates a plain object from a TimeZone message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.TimeZone
                 * @static
                 * @param {google.type.TimeZone} message TimeZone
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                TimeZone.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.id = "";
                        object.version = "";
                    }
                    if (message.id != null && message.hasOwnProperty("id"))
                        object.id = message.id;
                    if (message.version != null && message.hasOwnProperty("version"))
                        object.version = message.version;
                    return object;
                };
    
                /**
                 * Converts this TimeZone to JSON.
                 * @function toJSON
                 * @memberof google.type.TimeZone
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                TimeZone.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for TimeZone
                 * @function getTypeUrl
                 * @memberof google.type.TimeZone
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                TimeZone.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.TimeZone";
                };
    
                return TimeZone;
            })();
    
            type.Money = (function() {
    
                /**
                 * Properties of a Money.
                 * @memberof google.type
                 * @interface IMoney
                 * @property {string|null} [currencyCode] Money currencyCode
                 * @property {number|Long|null} [units] Money units
                 * @property {number|null} [nanos] Money nanos
                 */
    
                /**
                 * Constructs a new Money.
                 * @memberof google.type
                 * @classdesc Represents a Money.
                 * @implements IMoney
                 * @constructor
                 * @param {google.type.IMoney=} [properties] Properties to set
                 */
                function Money(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Money currencyCode.
                 * @member {string} currencyCode
                 * @memberof google.type.Money
                 * @instance
                 */
                Money.prototype.currencyCode = "";
    
                /**
                 * Money units.
                 * @member {number|Long} units
                 * @memberof google.type.Money
                 * @instance
                 */
                Money.prototype.units = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Money nanos.
                 * @member {number} nanos
                 * @memberof google.type.Money
                 * @instance
                 */
                Money.prototype.nanos = 0;
    
                /**
                 * Creates a new Money instance using the specified properties.
                 * @function create
                 * @memberof google.type.Money
                 * @static
                 * @param {google.type.IMoney=} [properties] Properties to set
                 * @returns {google.type.Money} Money instance
                 */
                Money.create = function create(properties) {
                    return new Money(properties);
                };
    
                /**
                 * Encodes the specified Money message. Does not implicitly {@link google.type.Money.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.Money
                 * @static
                 * @param {google.type.IMoney} message Money message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Money.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.currencyCode != null && Object.hasOwnProperty.call(message, "currencyCode"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.currencyCode);
                    if (message.units != null && Object.hasOwnProperty.call(message, "units"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int64(message.units);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Money message, length delimited. Does not implicitly {@link google.type.Money.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.Money
                 * @static
                 * @param {google.type.IMoney} message Money message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Money.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Money message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.Money
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.Money} Money
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Money.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.Money();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.currencyCode = reader.string();
                                break;
                            }
                        case 2: {
                                message.units = reader.int64();
                                break;
                            }
                        case 3: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Money message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.Money
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.Money} Money
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Money.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Money message.
                 * @function verify
                 * @memberof google.type.Money
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Money.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.currencyCode != null && message.hasOwnProperty("currencyCode"))
                        if (!$util.isString(message.currencyCode))
                            return "currencyCode: string expected";
                    if (message.units != null && message.hasOwnProperty("units"))
                        if (!$util.isInteger(message.units) && !(message.units && $util.isInteger(message.units.low) && $util.isInteger(message.units.high)))
                            return "units: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Money message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.Money
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.Money} Money
                 */
                Money.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.Money)
                        return object;
                    var message = new $root.google.type.Money();
                    if (object.currencyCode != null)
                        message.currencyCode = String(object.currencyCode);
                    if (object.units != null)
                        if ($util.Long)
                            (message.units = $util.Long.fromValue(object.units)).unsigned = false;
                        else if (typeof object.units === "string")
                            message.units = parseInt(object.units, 10);
                        else if (typeof object.units === "number")
                            message.units = object.units;
                        else if (typeof object.units === "object")
                            message.units = new $util.LongBits(object.units.low >>> 0, object.units.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Money message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.Money
                 * @static
                 * @param {google.type.Money} message Money
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Money.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.currencyCode = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.units = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.units = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.currencyCode != null && message.hasOwnProperty("currencyCode"))
                        object.currencyCode = message.currencyCode;
                    if (message.units != null && message.hasOwnProperty("units"))
                        if (typeof message.units === "number")
                            object.units = options.longs === String ? String(message.units) : message.units;
                        else
                            object.units = options.longs === String ? $util.Long.prototype.toString.call(message.units) : options.longs === Number ? new $util.LongBits(message.units.low >>> 0, message.units.high >>> 0).toNumber() : message.units;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Money to JSON.
                 * @function toJSON
                 * @memberof google.type.Money
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Money.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Money
                 * @function getTypeUrl
                 * @memberof google.type.Money
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Money.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.Money";
                };
    
                return Money;
            })();
    
            type.PostalAddress = (function() {
    
                /**
                 * Properties of a PostalAddress.
                 * @memberof google.type
                 * @interface IPostalAddress
                 * @property {number|null} [revision] PostalAddress revision
                 * @property {string|null} [regionCode] PostalAddress regionCode
                 * @property {string|null} [languageCode] PostalAddress languageCode
                 * @property {string|null} [postalCode] PostalAddress postalCode
                 * @property {string|null} [sortingCode] PostalAddress sortingCode
                 * @property {string|null} [administrativeArea] PostalAddress administrativeArea
                 * @property {string|null} [locality] PostalAddress locality
                 * @property {string|null} [sublocality] PostalAddress sublocality
                 * @property {Array.<string>|null} [addressLines] PostalAddress addressLines
                 * @property {Array.<string>|null} [recipients] PostalAddress recipients
                 * @property {string|null} [organization] PostalAddress organization
                 */
    
                /**
                 * Constructs a new PostalAddress.
                 * @memberof google.type
                 * @classdesc Represents a PostalAddress.
                 * @implements IPostalAddress
                 * @constructor
                 * @param {google.type.IPostalAddress=} [properties] Properties to set
                 */
                function PostalAddress(properties) {
                    this.addressLines = [];
                    this.recipients = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * PostalAddress revision.
                 * @member {number} revision
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.revision = 0;
    
                /**
                 * PostalAddress regionCode.
                 * @member {string} regionCode
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.regionCode = "";
    
                /**
                 * PostalAddress languageCode.
                 * @member {string} languageCode
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.languageCode = "";
    
                /**
                 * PostalAddress postalCode.
                 * @member {string} postalCode
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.postalCode = "";
    
                /**
                 * PostalAddress sortingCode.
                 * @member {string} sortingCode
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.sortingCode = "";
    
                /**
                 * PostalAddress administrativeArea.
                 * @member {string} administrativeArea
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.administrativeArea = "";
    
                /**
                 * PostalAddress locality.
                 * @member {string} locality
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.locality = "";
    
                /**
                 * PostalAddress sublocality.
                 * @member {string} sublocality
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.sublocality = "";
    
                /**
                 * PostalAddress addressLines.
                 * @member {Array.<string>} addressLines
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.addressLines = $util.emptyArray;
    
                /**
                 * PostalAddress recipients.
                 * @member {Array.<string>} recipients
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.recipients = $util.emptyArray;
    
                /**
                 * PostalAddress organization.
                 * @member {string} organization
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.organization = "";
    
                /**
                 * Creates a new PostalAddress instance using the specified properties.
                 * @function create
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {google.type.IPostalAddress=} [properties] Properties to set
                 * @returns {google.type.PostalAddress} PostalAddress instance
                 */
                PostalAddress.create = function create(properties) {
                    return new PostalAddress(properties);
                };
    
                /**
                 * Encodes the specified PostalAddress message. Does not implicitly {@link google.type.PostalAddress.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {google.type.IPostalAddress} message PostalAddress message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PostalAddress.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.revision != null && Object.hasOwnProperty.call(message, "revision"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.revision);
                    if (message.regionCode != null && Object.hasOwnProperty.call(message, "regionCode"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.regionCode);
                    if (message.languageCode != null && Object.hasOwnProperty.call(message, "languageCode"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.languageCode);
                    if (message.postalCode != null && Object.hasOwnProperty.call(message, "postalCode"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.postalCode);
                    if (message.sortingCode != null && Object.hasOwnProperty.call(message, "sortingCode"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.sortingCode);
                    if (message.administrativeArea != null && Object.hasOwnProperty.call(message, "administrativeArea"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.administrativeArea);
                    if (message.locality != null && Object.hasOwnProperty.call(message, "locality"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.locality);
                    if (message.sublocality != null && Object.hasOwnProperty.call(message, "sublocality"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.sublocality);
                    if (message.addressLines != null && message.addressLines.length)
                        for (var i = 0; i < message.addressLines.length; ++i)
                            writer.uint32(/* id 9, wireType 2 =*/74).string(message.addressLines[i]);
                    if (message.recipients != null && message.recipients.length)
                        for (var i = 0; i < message.recipients.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.recipients[i]);
                    if (message.organization != null && Object.hasOwnProperty.call(message, "organization"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.organization);
                    return writer;
                };
    
                /**
                 * Encodes the specified PostalAddress message, length delimited. Does not implicitly {@link google.type.PostalAddress.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {google.type.IPostalAddress} message PostalAddress message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PostalAddress.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a PostalAddress message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.PostalAddress} PostalAddress
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PostalAddress.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.PostalAddress();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.revision = reader.int32();
                                break;
                            }
                        case 2: {
                                message.regionCode = reader.string();
                                break;
                            }
                        case 3: {
                                message.languageCode = reader.string();
                                break;
                            }
                        case 4: {
                                message.postalCode = reader.string();
                                break;
                            }
                        case 5: {
                                message.sortingCode = reader.string();
                                break;
                            }
                        case 6: {
                                message.administrativeArea = reader.string();
                                break;
                            }
                        case 7: {
                                message.locality = reader.string();
                                break;
                            }
                        case 8: {
                                message.sublocality = reader.string();
                                break;
                            }
                        case 9: {
                                if (!(message.addressLines && message.addressLines.length))
                                    message.addressLines = [];
                                message.addressLines.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.recipients && message.recipients.length))
                                    message.recipients = [];
                                message.recipients.push(reader.string());
                                break;
                            }
                        case 11: {
                                message.organization = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a PostalAddress message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.PostalAddress} PostalAddress
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PostalAddress.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a PostalAddress message.
                 * @function verify
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                PostalAddress.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.revision != null && message.hasOwnProperty("revision"))
                        if (!$util.isInteger(message.revision))
                            return "revision: integer expected";
                    if (message.regionCode != null && message.hasOwnProperty("regionCode"))
                        if (!$util.isString(message.regionCode))
                            return "regionCode: string expected";
                    if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                        if (!$util.isString(message.languageCode))
                            return "languageCode: string expected";
                    if (message.postalCode != null && message.hasOwnProperty("postalCode"))
                        if (!$util.isString(message.postalCode))
                            return "postalCode: string expected";
                    if (message.sortingCode != null && message.hasOwnProperty("sortingCode"))
                        if (!$util.isString(message.sortingCode))
                            return "sortingCode: string expected";
                    if (message.administrativeArea != null && message.hasOwnProperty("administrativeArea"))
                        if (!$util.isString(message.administrativeArea))
                            return "administrativeArea: string expected";
                    if (message.locality != null && message.hasOwnProperty("locality"))
                        if (!$util.isString(message.locality))
                            return "locality: string expected";
                    if (message.sublocality != null && message.hasOwnProperty("sublocality"))
                        if (!$util.isString(message.sublocality))
                            return "sublocality: string expected";
                    if (message.addressLines != null && message.hasOwnProperty("addressLines")) {
                        if (!Array.isArray(message.addressLines))
                            return "addressLines: array expected";
                        for (var i = 0; i < message.addressLines.length; ++i)
                            if (!$util.isString(message.addressLines[i]))
                                return "addressLines: string[] expected";
                    }
                    if (message.recipients != null && message.hasOwnProperty("recipients")) {
                        if (!Array.isArray(message.recipients))
                            return "recipients: array expected";
                        for (var i = 0; i < message.recipients.length; ++i)
                            if (!$util.isString(message.recipients[i]))
                                return "recipients: string[] expected";
                    }
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        if (!$util.isString(message.organization))
                            return "organization: string expected";
                    return null;
                };
    
                /**
                 * Creates a PostalAddress message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.PostalAddress} PostalAddress
                 */
                PostalAddress.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.PostalAddress)
                        return object;
                    var message = new $root.google.type.PostalAddress();
                    if (object.revision != null)
                        message.revision = object.revision | 0;
                    if (object.regionCode != null)
                        message.regionCode = String(object.regionCode);
                    if (object.languageCode != null)
                        message.languageCode = String(object.languageCode);
                    if (object.postalCode != null)
                        message.postalCode = String(object.postalCode);
                    if (object.sortingCode != null)
                        message.sortingCode = String(object.sortingCode);
                    if (object.administrativeArea != null)
                        message.administrativeArea = String(object.administrativeArea);
                    if (object.locality != null)
                        message.locality = String(object.locality);
                    if (object.sublocality != null)
                        message.sublocality = String(object.sublocality);
                    if (object.addressLines) {
                        if (!Array.isArray(object.addressLines))
                            throw TypeError(".google.type.PostalAddress.addressLines: array expected");
                        message.addressLines = [];
                        for (var i = 0; i < object.addressLines.length; ++i)
                            message.addressLines[i] = String(object.addressLines[i]);
                    }
                    if (object.recipients) {
                        if (!Array.isArray(object.recipients))
                            throw TypeError(".google.type.PostalAddress.recipients: array expected");
                        message.recipients = [];
                        for (var i = 0; i < object.recipients.length; ++i)
                            message.recipients[i] = String(object.recipients[i]);
                    }
                    if (object.organization != null)
                        message.organization = String(object.organization);
                    return message;
                };
    
                /**
                 * Creates a plain object from a PostalAddress message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {google.type.PostalAddress} message PostalAddress
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                PostalAddress.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.addressLines = [];
                        object.recipients = [];
                    }
                    if (options.defaults) {
                        object.revision = 0;
                        object.regionCode = "";
                        object.languageCode = "";
                        object.postalCode = "";
                        object.sortingCode = "";
                        object.administrativeArea = "";
                        object.locality = "";
                        object.sublocality = "";
                        object.organization = "";
                    }
                    if (message.revision != null && message.hasOwnProperty("revision"))
                        object.revision = message.revision;
                    if (message.regionCode != null && message.hasOwnProperty("regionCode"))
                        object.regionCode = message.regionCode;
                    if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                        object.languageCode = message.languageCode;
                    if (message.postalCode != null && message.hasOwnProperty("postalCode"))
                        object.postalCode = message.postalCode;
                    if (message.sortingCode != null && message.hasOwnProperty("sortingCode"))
                        object.sortingCode = message.sortingCode;
                    if (message.administrativeArea != null && message.hasOwnProperty("administrativeArea"))
                        object.administrativeArea = message.administrativeArea;
                    if (message.locality != null && message.hasOwnProperty("locality"))
                        object.locality = message.locality;
                    if (message.sublocality != null && message.hasOwnProperty("sublocality"))
                        object.sublocality = message.sublocality;
                    if (message.addressLines && message.addressLines.length) {
                        object.addressLines = [];
                        for (var j = 0; j < message.addressLines.length; ++j)
                            object.addressLines[j] = message.addressLines[j];
                    }
                    if (message.recipients && message.recipients.length) {
                        object.recipients = [];
                        for (var j = 0; j < message.recipients.length; ++j)
                            object.recipients[j] = message.recipients[j];
                    }
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        object.organization = message.organization;
                    return object;
                };
    
                /**
                 * Converts this PostalAddress to JSON.
                 * @function toJSON
                 * @memberof google.type.PostalAddress
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                PostalAddress.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for PostalAddress
                 * @function getTypeUrl
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                PostalAddress.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.PostalAddress";
                };
    
                return PostalAddress;
            })();
    
            return type;
        })();
    
        google.longrunning = (function() {
    
            /**
             * Namespace longrunning.
             * @memberof google
             * @namespace
             */
            var longrunning = {};
    
            longrunning.Operations = (function() {
    
                /**
                 * Constructs a new Operations service.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operations
                 * @extends $protobuf.rpc.Service
                 * @constructor
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 */
                function Operations(rpcImpl, requestDelimited, responseDelimited) {
                    $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                }
    
                (Operations.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Operations;
    
                /**
                 * Creates new Operations service using the specified rpc implementation.
                 * @function create
                 * @memberof google.longrunning.Operations
                 * @static
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 * @returns {Operations} RPC service. Useful where requests and/or responses are streamed.
                 */
                Operations.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                    return new this(rpcImpl, requestDelimited, responseDelimited);
                };
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|listOperations}.
                 * @memberof google.longrunning.Operations
                 * @typedef ListOperationsCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.ListOperationsResponse} [response] ListOperationsResponse
                 */
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @param {google.longrunning.Operations.ListOperationsCallback} callback Node-style callback called with the error, if any, and ListOperationsResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.listOperations = function listOperations(request, callback) {
                    return this.rpcCall(listOperations, $root.google.longrunning.ListOperationsRequest, $root.google.longrunning.ListOperationsResponse, request, callback);
                }, "name", { value: "ListOperations" });
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @returns {Promise<google.longrunning.ListOperationsResponse>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|getOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef GetOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @param {google.longrunning.Operations.GetOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.getOperation = function getOperation(request, callback) {
                    return this.rpcCall(getOperation, $root.google.longrunning.GetOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "GetOperation" });
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|deleteOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef DeleteOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @param {google.longrunning.Operations.DeleteOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.deleteOperation = function deleteOperation(request, callback) {
                    return this.rpcCall(deleteOperation, $root.google.longrunning.DeleteOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "DeleteOperation" });
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|cancelOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef CancelOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @param {google.longrunning.Operations.CancelOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.cancelOperation = function cancelOperation(request, callback) {
                    return this.rpcCall(cancelOperation, $root.google.longrunning.CancelOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "CancelOperation" });
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|waitOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef WaitOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @param {google.longrunning.Operations.WaitOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.waitOperation = function waitOperation(request, callback) {
                    return this.rpcCall(waitOperation, $root.google.longrunning.WaitOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "WaitOperation" });
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                return Operations;
            })();
    
            longrunning.Operation = (function() {
    
                /**
                 * Properties of an Operation.
                 * @memberof google.longrunning
                 * @interface IOperation
                 * @property {string|null} [name] Operation name
                 * @property {google.protobuf.IAny|null} [metadata] Operation metadata
                 * @property {boolean|null} [done] Operation done
                 * @property {google.rpc.IStatus|null} [error] Operation error
                 * @property {google.protobuf.IAny|null} [response] Operation response
                 */
    
                /**
                 * Constructs a new Operation.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operation.
                 * @implements IOperation
                 * @constructor
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 */
                function Operation(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Operation name.
                 * @member {string} name
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.name = "";
    
                /**
                 * Operation metadata.
                 * @member {google.protobuf.IAny|null|undefined} metadata
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.metadata = null;
    
                /**
                 * Operation done.
                 * @member {boolean} done
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.done = false;
    
                /**
                 * Operation error.
                 * @member {google.rpc.IStatus|null|undefined} error
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.error = null;
    
                /**
                 * Operation response.
                 * @member {google.protobuf.IAny|null|undefined} response
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.response = null;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * Operation result.
                 * @member {"error"|"response"|undefined} result
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Object.defineProperty(Operation.prototype, "result", {
                    get: $util.oneOfGetter($oneOfFields = ["error", "response"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new Operation instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 * @returns {google.longrunning.Operation} Operation instance
                 */
                Operation.create = function create(properties) {
                    return new Operation(properties);
                };
    
                /**
                 * Encodes the specified Operation message. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                        $root.google.protobuf.Any.encode(message.metadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.done != null && Object.hasOwnProperty.call(message, "done"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.done);
                    if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                        $root.google.rpc.Status.encode(message.error, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.response != null && Object.hasOwnProperty.call(message, "response"))
                        $root.google.protobuf.Any.encode(message.response, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Operation message, length delimited. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.Operation();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.metadata = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            }
                        case 3: {
                                message.done = reader.bool();
                                break;
                            }
                        case 4: {
                                message.error = $root.google.rpc.Status.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.response = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Operation message.
                 * @function verify
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Operation.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.metadata != null && message.hasOwnProperty("metadata")) {
                        var error = $root.google.protobuf.Any.verify(message.metadata);
                        if (error)
                            return "metadata." + error;
                    }
                    if (message.done != null && message.hasOwnProperty("done"))
                        if (typeof message.done !== "boolean")
                            return "done: boolean expected";
                    if (message.error != null && message.hasOwnProperty("error")) {
                        properties.result = 1;
                        {
                            var error = $root.google.rpc.Status.verify(message.error);
                            if (error)
                                return "error." + error;
                        }
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        if (properties.result === 1)
                            return "result: multiple values";
                        properties.result = 1;
                        {
                            var error = $root.google.protobuf.Any.verify(message.response);
                            if (error)
                                return "response." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an Operation message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.Operation} Operation
                 */
                Operation.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.Operation)
                        return object;
                    var message = new $root.google.longrunning.Operation();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.metadata != null) {
                        if (typeof object.metadata !== "object")
                            throw TypeError(".google.longrunning.Operation.metadata: object expected");
                        message.metadata = $root.google.protobuf.Any.fromObject(object.metadata);
                    }
                    if (object.done != null)
                        message.done = Boolean(object.done);
                    if (object.error != null) {
                        if (typeof object.error !== "object")
                            throw TypeError(".google.longrunning.Operation.error: object expected");
                        message.error = $root.google.rpc.Status.fromObject(object.error);
                    }
                    if (object.response != null) {
                        if (typeof object.response !== "object")
                            throw TypeError(".google.longrunning.Operation.response: object expected");
                        message.response = $root.google.protobuf.Any.fromObject(object.response);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an Operation message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.Operation} message Operation
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Operation.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.metadata = null;
                        object.done = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.metadata != null && message.hasOwnProperty("metadata"))
                        object.metadata = $root.google.protobuf.Any.toObject(message.metadata, options);
                    if (message.done != null && message.hasOwnProperty("done"))
                        object.done = message.done;
                    if (message.error != null && message.hasOwnProperty("error")) {
                        object.error = $root.google.rpc.Status.toObject(message.error, options);
                        if (options.oneofs)
                            object.result = "error";
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        object.response = $root.google.protobuf.Any.toObject(message.response, options);
                        if (options.oneofs)
                            object.result = "response";
                    }
                    return object;
                };
    
                /**
                 * Converts this Operation to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.Operation
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Operation.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Operation
                 * @function getTypeUrl
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Operation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.Operation";
                };
    
                return Operation;
            })();
    
            longrunning.GetOperationRequest = (function() {
    
                /**
                 * Properties of a GetOperationRequest.
                 * @memberof google.longrunning
                 * @interface IGetOperationRequest
                 * @property {string|null} [name] GetOperationRequest name
                 */
    
                /**
                 * Constructs a new GetOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a GetOperationRequest.
                 * @implements IGetOperationRequest
                 * @constructor
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 */
                function GetOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GetOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 */
                GetOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new GetOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest instance
                 */
                GetOperationRequest.create = function create(properties) {
                    return new GetOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified GetOperationRequest message. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified GetOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.GetOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GetOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GetOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a GetOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 */
                GetOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.GetOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.GetOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a GetOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.GetOperationRequest} message GetOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GetOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this GetOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GetOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GetOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GetOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.GetOperationRequest";
                };
    
                return GetOperationRequest;
            })();
    
            longrunning.ListOperationsRequest = (function() {
    
                /**
                 * Properties of a ListOperationsRequest.
                 * @memberof google.longrunning
                 * @interface IListOperationsRequest
                 * @property {string|null} [name] ListOperationsRequest name
                 * @property {string|null} [filter] ListOperationsRequest filter
                 * @property {number|null} [pageSize] ListOperationsRequest pageSize
                 * @property {string|null} [pageToken] ListOperationsRequest pageToken
                 */
    
                /**
                 * Constructs a new ListOperationsRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsRequest.
                 * @implements IListOperationsRequest
                 * @constructor
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 */
                function ListOperationsRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.name = "";
    
                /**
                 * ListOperationsRequest filter.
                 * @member {string} filter
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.filter = "";
    
                /**
                 * ListOperationsRequest pageSize.
                 * @member {number} pageSize
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageSize = 0;
    
                /**
                 * ListOperationsRequest pageToken.
                 * @member {string} pageToken
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageToken = "";
    
                /**
                 * Creates a new ListOperationsRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest instance
                 */
                ListOperationsRequest.create = function create(properties) {
                    return new ListOperationsRequest(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.filter);
                    if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                    if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 4: {
                                message.name = reader.string();
                                break;
                            }
                        case 1: {
                                message.filter = reader.string();
                                break;
                            }
                        case 2: {
                                message.pageSize = reader.int32();
                                break;
                            }
                        case 3: {
                                message.pageToken = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsRequest message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        if (!$util.isString(message.filter))
                            return "filter: string expected";
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        if (!$util.isInteger(message.pageSize))
                            return "pageSize: integer expected";
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        if (!$util.isString(message.pageToken))
                            return "pageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 */
                ListOperationsRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsRequest)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.filter != null)
                        message.filter = String(object.filter);
                    if (object.pageSize != null)
                        message.pageSize = object.pageSize | 0;
                    if (object.pageToken != null)
                        message.pageToken = String(object.pageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.ListOperationsRequest} message ListOperationsRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.filter = "";
                        object.pageSize = 0;
                        object.pageToken = "";
                        object.name = "";
                    }
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        object.filter = message.filter;
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        object.pageSize = message.pageSize;
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        object.pageToken = message.pageToken;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListOperationsRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOperationsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.ListOperationsRequest";
                };
    
                return ListOperationsRequest;
            })();
    
            longrunning.ListOperationsResponse = (function() {
    
                /**
                 * Properties of a ListOperationsResponse.
                 * @memberof google.longrunning
                 * @interface IListOperationsResponse
                 * @property {Array.<google.longrunning.IOperation>|null} [operations] ListOperationsResponse operations
                 * @property {string|null} [nextPageToken] ListOperationsResponse nextPageToken
                 */
    
                /**
                 * Constructs a new ListOperationsResponse.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsResponse.
                 * @implements IListOperationsResponse
                 * @constructor
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 */
                function ListOperationsResponse(properties) {
                    this.operations = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsResponse operations.
                 * @member {Array.<google.longrunning.IOperation>} operations
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.operations = $util.emptyArray;
    
                /**
                 * ListOperationsResponse nextPageToken.
                 * @member {string} nextPageToken
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.nextPageToken = "";
    
                /**
                 * Creates a new ListOperationsResponse instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse instance
                 */
                ListOperationsResponse.create = function create(properties) {
                    return new ListOperationsResponse(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.operations != null && message.operations.length)
                        for (var i = 0; i < message.operations.length; ++i)
                            $root.google.longrunning.Operation.encode(message.operations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.operations && message.operations.length))
                                    message.operations = [];
                                message.operations.push($root.google.longrunning.Operation.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.nextPageToken = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsResponse message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.operations != null && message.hasOwnProperty("operations")) {
                        if (!Array.isArray(message.operations))
                            return "operations: array expected";
                        for (var i = 0; i < message.operations.length; ++i) {
                            var error = $root.google.longrunning.Operation.verify(message.operations[i]);
                            if (error)
                                return "operations." + error;
                        }
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        if (!$util.isString(message.nextPageToken))
                            return "nextPageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 */
                ListOperationsResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsResponse)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsResponse();
                    if (object.operations) {
                        if (!Array.isArray(object.operations))
                            throw TypeError(".google.longrunning.ListOperationsResponse.operations: array expected");
                        message.operations = [];
                        for (var i = 0; i < object.operations.length; ++i) {
                            if (typeof object.operations[i] !== "object")
                                throw TypeError(".google.longrunning.ListOperationsResponse.operations: object expected");
                            message.operations[i] = $root.google.longrunning.Operation.fromObject(object.operations[i]);
                        }
                    }
                    if (object.nextPageToken != null)
                        message.nextPageToken = String(object.nextPageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.ListOperationsResponse} message ListOperationsResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsResponse.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.operations = [];
                    if (options.defaults)
                        object.nextPageToken = "";
                    if (message.operations && message.operations.length) {
                        object.operations = [];
                        for (var j = 0; j < message.operations.length; ++j)
                            object.operations[j] = $root.google.longrunning.Operation.toObject(message.operations[j], options);
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        object.nextPageToken = message.nextPageToken;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsResponse to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListOperationsResponse
                 * @function getTypeUrl
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOperationsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.ListOperationsResponse";
                };
    
                return ListOperationsResponse;
            })();
    
            longrunning.CancelOperationRequest = (function() {
    
                /**
                 * Properties of a CancelOperationRequest.
                 * @memberof google.longrunning
                 * @interface ICancelOperationRequest
                 * @property {string|null} [name] CancelOperationRequest name
                 */
    
                /**
                 * Constructs a new CancelOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a CancelOperationRequest.
                 * @implements ICancelOperationRequest
                 * @constructor
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 */
                function CancelOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CancelOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 */
                CancelOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new CancelOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest instance
                 */
                CancelOperationRequest.create = function create(properties) {
                    return new CancelOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.CancelOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CancelOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CancelOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a CancelOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 */
                CancelOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.CancelOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.CancelOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CancelOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.CancelOperationRequest} message CancelOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CancelOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this CancelOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CancelOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CancelOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CancelOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.CancelOperationRequest";
                };
    
                return CancelOperationRequest;
            })();
    
            longrunning.DeleteOperationRequest = (function() {
    
                /**
                 * Properties of a DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @interface IDeleteOperationRequest
                 * @property {string|null} [name] DeleteOperationRequest name
                 */
    
                /**
                 * Constructs a new DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a DeleteOperationRequest.
                 * @implements IDeleteOperationRequest
                 * @constructor
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 */
                function DeleteOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DeleteOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 */
                DeleteOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new DeleteOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest instance
                 */
                DeleteOperationRequest.create = function create(properties) {
                    return new DeleteOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.DeleteOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DeleteOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DeleteOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a DeleteOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 */
                DeleteOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.DeleteOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.DeleteOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a DeleteOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.DeleteOperationRequest} message DeleteOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DeleteOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this DeleteOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DeleteOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DeleteOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DeleteOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.DeleteOperationRequest";
                };
    
                return DeleteOperationRequest;
            })();
    
            longrunning.WaitOperationRequest = (function() {
    
                /**
                 * Properties of a WaitOperationRequest.
                 * @memberof google.longrunning
                 * @interface IWaitOperationRequest
                 * @property {string|null} [name] WaitOperationRequest name
                 * @property {google.protobuf.IDuration|null} [timeout] WaitOperationRequest timeout
                 */
    
                /**
                 * Constructs a new WaitOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a WaitOperationRequest.
                 * @implements IWaitOperationRequest
                 * @constructor
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 */
                function WaitOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * WaitOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.name = "";
    
                /**
                 * WaitOperationRequest timeout.
                 * @member {google.protobuf.IDuration|null|undefined} timeout
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.timeout = null;
    
                /**
                 * Creates a new WaitOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest instance
                 */
                WaitOperationRequest.create = function create(properties) {
                    return new WaitOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.timeout != null && Object.hasOwnProperty.call(message, "timeout"))
                        $root.google.protobuf.Duration.encode(message.timeout, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.WaitOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.timeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a WaitOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                WaitOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.timeout != null && message.hasOwnProperty("timeout")) {
                        var error = $root.google.protobuf.Duration.verify(message.timeout);
                        if (error)
                            return "timeout." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a WaitOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 */
                WaitOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.WaitOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.WaitOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.timeout != null) {
                        if (typeof object.timeout !== "object")
                            throw TypeError(".google.longrunning.WaitOperationRequest.timeout: object expected");
                        message.timeout = $root.google.protobuf.Duration.fromObject(object.timeout);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a WaitOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.WaitOperationRequest} message WaitOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                WaitOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.timeout = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.timeout != null && message.hasOwnProperty("timeout"))
                        object.timeout = $root.google.protobuf.Duration.toObject(message.timeout, options);
                    return object;
                };
    
                /**
                 * Converts this WaitOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                WaitOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for WaitOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                WaitOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.WaitOperationRequest";
                };
    
                return WaitOperationRequest;
            })();
    
            longrunning.OperationInfo = (function() {
    
                /**
                 * Properties of an OperationInfo.
                 * @memberof google.longrunning
                 * @interface IOperationInfo
                 * @property {string|null} [responseType] OperationInfo responseType
                 * @property {string|null} [metadataType] OperationInfo metadataType
                 */
    
                /**
                 * Constructs a new OperationInfo.
                 * @memberof google.longrunning
                 * @classdesc Represents an OperationInfo.
                 * @implements IOperationInfo
                 * @constructor
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 */
                function OperationInfo(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OperationInfo responseType.
                 * @member {string} responseType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.responseType = "";
    
                /**
                 * OperationInfo metadataType.
                 * @member {string} metadataType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.metadataType = "";
    
                /**
                 * Creates a new OperationInfo instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 * @returns {google.longrunning.OperationInfo} OperationInfo instance
                 */
                OperationInfo.create = function create(properties) {
                    return new OperationInfo(properties);
                };
    
                /**
                 * Encodes the specified OperationInfo message. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.responseType != null && Object.hasOwnProperty.call(message, "responseType"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.responseType);
                    if (message.metadataType != null && Object.hasOwnProperty.call(message, "metadataType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.metadataType);
                    return writer;
                };
    
                /**
                 * Encodes the specified OperationInfo message, length delimited. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.OperationInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.responseType = reader.string();
                                break;
                            }
                        case 2: {
                                message.metadataType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OperationInfo message.
                 * @function verify
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OperationInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        if (!$util.isString(message.responseType))
                            return "responseType: string expected";
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        if (!$util.isString(message.metadataType))
                            return "metadataType: string expected";
                    return null;
                };
    
                /**
                 * Creates an OperationInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 */
                OperationInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.OperationInfo)
                        return object;
                    var message = new $root.google.longrunning.OperationInfo();
                    if (object.responseType != null)
                        message.responseType = String(object.responseType);
                    if (object.metadataType != null)
                        message.metadataType = String(object.metadataType);
                    return message;
                };
    
                /**
                 * Creates a plain object from an OperationInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.OperationInfo} message OperationInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OperationInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.responseType = "";
                        object.metadataType = "";
                    }
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        object.responseType = message.responseType;
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        object.metadataType = message.metadataType;
                    return object;
                };
    
                /**
                 * Converts this OperationInfo to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OperationInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OperationInfo
                 * @function getTypeUrl
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OperationInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.OperationInfo";
                };
    
                return OperationInfo;
            })();
    
            return longrunning;
        })();
    
        return google;
    })();

    return $root;
});
