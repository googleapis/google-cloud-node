// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main() {
  // [START composer_v1_generated_Environments_LoadSnapshot_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  The resource name of the target environment in the form:
   *  "projects/{projectId}/locations/{locationId}/environments/{environmentId}"
   */
  // const environment = 'abc123'
  /**
   *  A Cloud Storage path to a snapshot to load, e.g.:
   *  "gs://my-bucket/snapshots/project_location_environment_timestamp".
   */
  // const snapshotPath = 'abc123'
  /**
   *  Whether or not to skip installing Pypi packages when loading the
   *  environment's state.
   */
  // const skipPypiPackagesInstallation = true
  /**
   *  Whether or not to skip setting environment variables when loading the
   *  environment's state.
   */
  // const skipEnvironmentVariablesSetting = true
  /**
   *  Whether or not to skip setting Airflow overrides when loading the
   *  environment's state.
   */
  // const skipAirflowOverridesSetting = true
  /**
   *  Whether or not to skip copying Cloud Storage data when loading the
   *  environment's state.
   */
  // const skipGcsDataCopying = true

  // Imports the Service library
  const {EnvironmentsClient} = require('@google-cloud/orchestration-airflow').v1;

  // Instantiates a client
  const serviceClient = new EnvironmentsClient();

  async function callLoadSnapshot() {
    // Construct request
    const request = {
    };

    // Run request
    const [operation] = await serviceClient.loadSnapshot(request);
    const [response] = await operation.promise();
    console.log(response);
  }

  callLoadSnapshot();
  // [END composer_v1_generated_Environments_LoadSnapshot_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
