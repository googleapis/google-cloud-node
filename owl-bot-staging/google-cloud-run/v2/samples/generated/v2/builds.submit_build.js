// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(parent, storageSource, imageUri) {
  // [START run_v2_generated_Builds_SubmitBuild_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The project and location to build in. Location must be a region,
   *  e.g., 'us-central1' or 'global' if the global builder is to be used.
   *  Format:
   *  `projects/{project}/locations/{location}`
   */
  // const parent = 'abc123'
  /**
   *  Required. Source for the build.
   */
  // const storageSource = {}
  /**
   *  Required. Artifact Registry URI to store the built image.
   */
  // const imageUri = 'abc123'
  /**
   *  Build the source using Buildpacks.
   */
  // const buildpackBuild = {}
  /**
   *  Build the source using Docker. This means the source has a Dockerfile.
   */
  // const dockerBuild = {}
  /**
   *  Optional. The service account to use for the build. If not set, the default
   *  Cloud Build service account for the project will be used.
   */
  // const serviceAccount = 'abc123'
  /**
   *  Optional. Name of the Cloud Build Custom Worker Pool that should be used to
   *  build the function. The format of this field is
   *  `projects/{project}/locations/{region}/workerPools/{workerPool}` where
   *  `{project}` and `{region}` are the project id and region respectively where
   *  the worker pool is defined and `{workerPool}` is the short name of the
   *  worker pool.
   */
  // const workerPool = 'abc123'
  /**
   *  Optional. Additional tags to annotate the build.
   */
  // const tags = ['abc','def']

  // Imports the Run library
  const {BuildsClient} = require('@google-cloud/run').v2;

  // Instantiates a client
  const runClient = new BuildsClient();

  async function callSubmitBuild() {
    // Construct request
    const request = {
      parent,
      storageSource,
      imageUri,
    };

    // Run request
    const response = await runClient.submitBuild(request);
    console.log(response);
  }

  callSubmitBuild();
  // [END run_v2_generated_Builds_SubmitBuild_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
