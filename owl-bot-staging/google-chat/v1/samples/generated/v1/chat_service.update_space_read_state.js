// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(spaceReadState, updateMask) {
  // [START chat_v1_generated_ChatService_UpdateSpaceReadState_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The space read state and fields to update.
   *  Only supports updating read state for the calling user.
   *  To refer to the calling user, set one of the following:
   *  - The `me` alias. For example, `users/me/spaces/{space}/spaceReadState`.
   *  - Their Workspace email address. For example,
   *  `users/user@example.com/spaces/{space}/spaceReadState`.
   *  - Their user id. For example,
   *  `users/123456789/spaces/{space}/spaceReadState`.
   *  Format: users/{user}/spaces/{space}/spaceReadState
   */
  // const spaceReadState = {}
  /**
   *  Required. The field paths to update. Currently supported field paths:
   *  - `last_read_time`
   *  When the `last_read_time` is before the latest message create time, the
   *  space appears as unread in the UI.
   *  To mark the space as read, set `last_read_time` to any value later (larger)
   *  than the latest message create time. The `last_read_time` is coerced to
   *  match the latest message create time. Note that the space read state only
   *  affects the read state of messages that are visible in the space's
   *  top-level conversation. Replies in threads are unaffected by this
   *  timestamp, and instead rely on the thread read state.
   */
  // const updateMask = {}

  // Imports the Chat library
  const {ChatServiceClient} = require('@google-apps/chat').v1;

  // Instantiates a client
  const chatClient = new ChatServiceClient();

  async function callUpdateSpaceReadState() {
    // Construct request
    const request = {
      spaceReadState,
      updateMask,
    };

    // Run request
    const response = await chatClient.updateSpaceReadState(request);
    console.log(response);
  }

  callUpdateSpaceReadState();
  // [END chat_v1_generated_ChatService_UpdateSpaceReadState_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
