// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(name) {
  // [START chat_v1_generated_ChatService_DeleteMembership_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. Resource name of the membership to delete. Chat apps can delete
   *  human users' or their own memberships. Chat apps can't delete other apps'
   *  memberships.
   *  When deleting a human membership, requires the `chat.memberships` scope and
   *  `spaces/{space}/members/{member}` format. You can use the email as an
   *  alias for `{member}`. For example,
   *  `spaces/{space}/members/example@gmail.com` where `example@gmail.com` is the
   *  email of the Google Chat user.
   *  When deleting an app membership, requires the `chat.memberships.app` scope
   *  and `spaces/{space}/members/app` format.
   *  Format: `spaces/{space}/members/{member}` or `spaces/{space}/members/app`.
   */
  // const name = 'abc123'

  // Imports the Chat library
  const {ChatServiceClient} = require('@google-apps/chat').v1;

  // Instantiates a client
  const chatClient = new ChatServiceClient();

  async function callDeleteMembership() {
    // Construct request
    const request = {
      name,
    };

    // Run request
    const response = await chatClient.deleteMembership(request);
    console.log(response);
  }

  callDeleteMembership();
  // [END chat_v1_generated_ChatService_DeleteMembership_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
