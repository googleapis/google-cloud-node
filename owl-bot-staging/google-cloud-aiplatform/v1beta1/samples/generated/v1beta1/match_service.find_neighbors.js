// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(indexEndpoint) {
  // [START aiplatform_v1beta1_generated_MatchService_FindNeighbors_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The name of the index endpoint.
   *  Format:
   *  `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
   */
  // const indexEndpoint = 'abc123'
  /**
   *  The ID of the DeployedIndex that will serve the request. This request is
   *  sent to a specific IndexEndpoint, as per the IndexEndpoint.network. That
   *  IndexEndpoint also has IndexEndpoint.deployed_indexes, and each such index
   *  has a DeployedIndex.id field.
   *  The value of the field below must equal one of the DeployedIndex.id
   *  fields of the IndexEndpoint that is being called for this request.
   */
  // const deployedIndexId = 'abc123'
  /**
   *  The list of queries.
   */
  // const queries = [1,2,3,4]
  /**
   *  If set to true, the full datapoints (including all vector values and
   *  restricts) of the nearest neighbors are returned.
   *  Note that returning full datapoint will significantly increase the
   *  latency and cost of the query.
   */
  // const returnFullDatapoint = true

  // Imports the Aiplatform library
  const {MatchServiceClient} = require('@google-cloud/aiplatform').v1beta1;

  // Instantiates a client
  const aiplatformClient = new MatchServiceClient();

  async function callFindNeighbors() {
    // Construct request
    const request = {
      indexEndpoint,
    };

    // Run request
    const response = await aiplatformClient.findNeighbors(request);
    console.log(response);
  }

  callFindNeighbors();
  // [END aiplatform_v1beta1_generated_MatchService_FindNeighbors_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
