// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(name) {
  // [START analyticsdata_v1alpha_generated_AlphaAnalyticsData_QueryReportTask_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The report source name.
   *  Format: `properties/{property}/reportTasks/{report}`
   */
  // const name = 'abc123'
  /**
   *  Optional. The row count of the start row in the report. The first row is
   *  counted as row 0.
   *  When paging, the first request does not specify offset; or equivalently,
   *  sets offset to 0; the first request returns the first `limit` of rows. The
   *  second request sets offset to the `limit` of the first request; the second
   *  request returns the second `limit` of rows.
   *  To learn more about this pagination parameter, see
   *  Pagination (https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination).
   */
  // const offset = 1234
  /**
   *  Optional. The number of rows to return from the report. If unspecified,
   *  10,000 rows are returned. The API returns a maximum of 250,000 rows per
   *  request, no matter how many you ask for. `limit` must be positive.
   *  The API can also return fewer rows than the requested `limit`, if there
   *  aren't as many dimension values as the `limit`. The number of rows
   *  available to a QueryReportTaskRequest is further limited by the limit of
   *  the associated ReportTask. A query can retrieve at most ReportTask.limit
   *  rows. For example, if the ReportTask has a limit of 1,000, then a
   *  QueryReportTask request with offset=900 and limit=500 will return at most
   *  100 rows.
   *  To learn more about this pagination parameter, see
   *  Pagination (https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination).
   */
  // const limit = 1234

  // Imports the Data library
  const {AlphaAnalyticsDataClient} = require('@google-cloud/data').v1alpha;

  // Instantiates a client
  const dataClient = new AlphaAnalyticsDataClient();

  async function callQueryReportTask() {
    // Construct request
    const request = {
      name,
    };

    // Run request
    const response = await dataClient.queryReportTask(request);
    console.log(response);
  }

  callQueryReportTask();
  // [END analyticsdata_v1alpha_generated_AlphaAnalyticsData_QueryReportTask_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
