// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(name) {
  // [START meet_v2beta_generated_SpacesService_GetSpace_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. Resource name of the space.
   *  Format: `spaces/{space}` or `spaces/{meetingCode}`.
   *  `{space}` is the resource identifier for the space. It's a unique,
   *  server-generated ID and is case sensitive. For example, `jQCFfuBOdN5z`.
   *  `{meetingCode}` is an alias for the space. It's a typeable, unique
   *  character string and is non-case sensitive. For example, `abc-mnop-xyz`.
   *  The maximum length is 128 characters.
   *  A `meetingCode` shouldn't be stored long term as it can become
   *  dissociated from a meeting space and can be reused for different meeting
   *  spaces in the future. Generally, a `meetingCode` expires 365 days after
   *  last use. For more information, see Learn about meeting codes in Google
   *  Meet (https://support.google.com/meet/answer/10710509).
   *  For more information, see How Meet identifies a meeting
   *  space (https://developers.google.com/meet/api/guides/meeting-spaces#identify-meeting-space).
   */
  // const name = 'abc123'

  // Imports the Meet library
  const {SpacesServiceClient} = require('@google-apps/meet').v2beta;

  // Instantiates a client
  const meetClient = new SpacesServiceClient();

  async function callGetSpace() {
    // Construct request
    const request = {
      name,
    };

    // Run request
    const response = await meetClient.getSpace(request);
    console.log(response);
  }

  callGetSpace();
  // [END meet_v2beta_generated_SpacesService_GetSpace_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
