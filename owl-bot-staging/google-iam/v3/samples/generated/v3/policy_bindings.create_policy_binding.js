// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(parent, policyBindingId, policyBinding) {
  // [START iam_v3_generated_PolicyBindings_CreatePolicyBinding_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The parent resource where this policy binding will be created.
   *  The binding parent is the closest Resource Manager resource (Project,
   *  Folder or Organization) to the binding target.
   *  Format:
   *  * `projects/{project_id}/locations/{location}`
   *  * `projects/{project_number}/locations/{location}`
   *  * `folders/{folder_id}/locations/{location}`
   *  * `organizations/{organization_id}/locations/{location}`
   */
  // const parent = 'abc123'
  /**
   *  Required. The ID to use for the policy binding, which will become the final
   *  component of the policy binding's resource name.
   *  This value must start with a lowercase letter followed by up to 62
   *  lowercase letters, numbers, hyphens, or dots. Pattern,
   *  /[a-z][a-z0-9-\.]{2,62}/.
   */
  // const policyBindingId = 'abc123'
  /**
   *  Required. The policy binding to create.
   */
  // const policyBinding = {}
  /**
   *  Optional. If set, validate the request and preview the creation, but do not
   *  actually post it.
   */
  // const validateOnly = true

  // Imports the Iam library
  const {PolicyBindingsClient} = require('@google-cloud/iam').v3;

  // Instantiates a client
  const iamClient = new PolicyBindingsClient();

  async function callCreatePolicyBinding() {
    // Construct request
    const request = {
      parent,
      policyBindingId,
      policyBinding,
    };

    // Run request
    const [operation] = await iamClient.createPolicyBinding(request);
    const [response] = await operation.promise();
    console.log(response);
  }

  callCreatePolicyBinding();
  // [END iam_v3_generated_PolicyBindings_CreatePolicyBinding_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
